{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Overview","text":"Ixia-c &amp; Elastic Network Generator Agile and composable network test system designed for continuous integration <ul> <li>Implements Open Traffic Generator API</li> <li>Emulates key control plane protocols</li> <li>Generates complex data plane traffic</li> <li>Supports software, white-box and hardware test ports\u200b</li> <li>Reduces time-to-test with fast API response time and agile developer experience</li> <li>Deploys using modular architecture based on containers and microservices</li> <li>Accelerates network validation by integrating with popular network emulation software.</li> </ul>"},{"location":"#community-edition","title":"Community Edition","text":"<p>First in its class Ixia-c Community Edition of the Elastic Network Generator with BGP emulation and full set traffic capabilities limited by scale and performance is available to anyone without registration and at no cost.</p>"},{"location":"#otg-examples","title":"OTG Examples","text":"<p>Explore otg-examples library to get hands-on experience with using Open Traffic Generator and Ixia-c. With a minimum Linux host or VM you can be running your first network data and control plane validation scenarios in minutes.</p>"},{"location":"#key-features","title":"Key Features","text":"<ul> <li>Software multi-container application:<ul> <li>runs on Linux x86 compute,</li> <li>includes software traffic generation and protocol emulation capabilities,</li> <li>built using DPDK to generate high traffic rates on a single CPU core,</li> <li>can control Keysight network test hardware.</li> </ul> </li> <li>Easily integrates into CI/CD pipelines like GitHub, GitLab, Jenkins.</li> <li>Supports test frameworks like Pytest or Golang test.</li> <li>Emulates key data center protocols with high scale of sessions and routes:<ul> <li>capable of leveraging 3rd party libraries to add unsupported packet formats,</li> <li>provides patterns to modify common packet header fields to generate millions of unique packets.</li> </ul> </li> <li>Supports:<ul> <li>configurable frame sizes,</li> <li>rate specification in pps (packets per second) or % line-rate,</li> <li>ability to send traffic bursts.</li> </ul> </li> <li>Statistics:<ul> <li>per port and per flow,</li> <li>tracks flows based on common packet header fields,</li> <li>one way latency measurements (min, max, average) on a per flow basis,</li> <li>capture packets and write to PCAP or analyze in the test logic.</li> </ul> </li> </ul>"},{"location":"#copyright-notice","title":"Copyright notice","text":"<p>\u00a9 Copyright Keysight Technologies, Inc. 2021, 2022, 2023</p>"},{"location":"contribute/","title":"Contribute","text":"<p>We encourage you to contribute to Ixia-c by :</p> <ul> <li>using it</li> <li>reporting issues</li> <li>requesting enhancements</li> <li>contributing your Ixia-c based use-cases</li> <li>reviewing and contributing to Open Traffic Generator Data Models</li> </ul> <p>You can reach out to us on Slack as noted here.</p>"},{"location":"deployments-containerlab/","title":"Deploy Ixia-c-one using containerlab","text":"<p>Ixia-c-one is deployed as single-container application by using containerlab that consists of the following services:</p> <ul> <li>containerlab: Containerlab provides a CLI for orchestrating and managing container-based networking labs. It starts the containers, builds a virtual wiring between them to create lab topologies depending on a user's choice, and manages the labs lifecycle.</li> <li>Ixia-c-one: Keysight Ixia-c-one is a single-container distribution of Ixia-c, which in turn is Keysight's reference implementation of Open Traffic Generator API.</li> </ul> <p>Meet the keysight_ixia-c-one kind! It is available from containerlab release 0.26. * srl linux: Nokia SR Linux is a truly open network operating system (NOS), that makes your data center switching infrastructure more scalable, more flexible, and simpler to operate.</p> <p></p>"},{"location":"deployments-containerlab/#install-containerlab","title":"Install containerlab","text":"<pre><code># download and install the latest release (may require sudo)\nbash -c \"$(curl -sL https://get.containerlab.dev)\"\n</code></pre>"},{"location":"deployments-containerlab/#deploy-the-topology","title":"Deploy the topology","text":"<ul> <li>You can find a sample topology definition in https://containerlab.dev/lab-examples/ixiacone-srl/, which consists of Nokia SR Linux and Ixia-c-one nodes that are connected to one-another.</li> <li>This consists of a Keysight ixia-c-one node with 2 ports connected to 2 ports on an srl linux node via two point-to-point ethernet links. Both nodes are also connected with their management interfaces to the containerlab docker network.</li> </ul> <pre><code># After downloading the sample topology file \ncontainerlab deploy --topo ixiac01.clab.yml\n</code></pre> <ul> <li>After deployment, you are now ready to run a test using the topology.</li> </ul>"},{"location":"deployments-containerlab/#run-a-test","title":"Run a test","text":"<ul> <li>Follow this link to run a test.</li> </ul>"},{"location":"deployments-containerlab/#destroyremove-the-topology","title":"Destroy/Remove the topology","text":"<pre><code># delete a particular topology \ncontainerlab destroy --topo ixiac01.clab.yml\n</code></pre>"},{"location":"deployments-docker-compose/","title":"Deploy Ixia-c using docker-compose","text":"<p>Deploying multiple services manually (along with the required parameters) is not always applicable in some scenarios. For convenience, the deployments directory consists of the following <code>docker-compose</code> files:</p> <ul> <li><code>*.yml</code>: Describes the services for a given scenario and the deployment parameters that are required to start them.</li> <li><code>.env</code>: Holds the default parameters, that are used across all <code>*.yml</code> files. For example, the name of the interface, the version of docker images, and etc.</li> </ul> <p>If a concerned <code>.yml</code> file does not include certain variables from <code>.env</code>, those can then safely be ignored. Follwoing is the example of a usual workflow, by using  <code>docker-compose</code>.</p> <pre><code># change default parameters if needed; e.g. interface name, image version, etc.\nvi deployments/.env\n# deploy and start services for community users\ndocker-compose -f deployments/&lt;scenario&gt;.yml up -d\n# stop and remove services deployed\ndocker-compose -f deployments/&lt;scenario&gt;.yml down\n</code></pre> <p>On most of the systems, <code>docker-compose</code> needs to be installed separately even if the docker is already installed. For more information, see docker prerequisites .</p> <p>All the scenarios that are mentioned in the following sections, describe both manual and automated (requiring docker-compose) steps.</p>"},{"location":"deployments-docker-compose/#deployment-parameters","title":"Deployment Parameters","text":""},{"location":"deployments-docker-compose/#controller","title":"Controller","text":"Controller Parameters Optional Default Description --debug Yes false Enables high volume logs with debug info for better diagnostics. --disable-app-usage-reporter Yes false Disables sending of usage data to the app-usage-reporter. --http-port Yes 8443 TCP port for HTTP server. --aur-host Yes https://localhost:5600 Overrides the location of the app-usage-reporter. --accept-eula No NA Indicates that the user has accepted EULA, otherwise the controller will not boot up. --license-servers No NA Indicates the ip address of license servers for commercial users. <p>Docker Parameters:</p> <ul> <li><code>--net=host</code>: It is recommended to allow the use of the host network stack, in order to address the traffic-engine containers using <code>localhost</code> instead of <code>container-ip</code>, when deployed on the same host.</li> <li><code>-d</code>: This starts the container in background.</li> </ul> <p>Example:</p> <pre><code># For community users\ndocker run --net=host -d ghcr.io/open-traffic-generator/keng-controller --accept-eula --debug --http-port 5050\n\n# For commercial users\ndocker run --net=host -d ghcr.io/open-traffic-generator/keng-controller --accept-eula --debug --http-port 5050 --license-servers=\"ip/hostname of license server\"\n</code></pre>"},{"location":"deployments-docker-compose/#traffic-engine","title":"Traffic Engine","text":"Environment Variables Optional Default Description ARG_IFACE_LIST No NA Name of the network interface to bind to. It must be visible to the traffic-engine's network namespace. For example, <code>virtual@af_packet,eth1</code> where <code>eth1</code> is the interface name and <code>virtual@af_packet</code> indicates that the interface is managed by the host kernel's network stack. OPT_LISTEN_PORT Yes \"5555\" TCP port on which the controller can establish connection with the traffic-engine. OPT_NO_HUGEPAGES Yes \"No\" If set to <code>Yes</code>, it disables hugepages in the OS. The hugepages needs to be disabled when the network interfaces are managed by the host kernel's stack. <p>Docker Parameters:</p> <ul> <li><code>--net=host</code>: This is required if the traffic-engine needs to bind to a network interface that is visible in the host network stack but not inside the docker's network.</li> <li><code>--privileged</code>: This is required because the traffic-engine needs to exercise capabilities that require elevated privileges.</li> <li><code>--cpuset-cpus</code>: The traffic-engine usually requires 1 shared CPU core for management activities and 2 exclusive CPU cores, each for the transmit engine and receive engine. The shared CPU core can be shared across multiple traffic-engines. For example, <code>--cpuset-cpus=\"0,1,2\"</code> which indicates that cpu0 is shared, cpu1 is used for transmit and cpu2 is used for receive. If CPU cores are not specified, any arbitrary CPU cores will be chosen.     &gt; If enough CPU cores are not provided, the available CPU cores may be shared among management, transmit, and the receive engines, that can occasionally result in lower performance.</li> <li><code>-d</code>: This starts the container in background.</li> </ul> <p>Example:</p> <pre><code>docker run --net=host --privileged -d         \\\n  -e OPT_LISTEN_PORT=\"5555\"                   \\\n  -e ARG_IFACE_LIST=\"virtual@af_packet,eth1\"  \\\n  -e OPT_NO_HUGEPAGES=\"Yes\"                   \\\n  --cpuset-cpus=\"0,1,2\"                       \\\n  ghcr.io/open-traffic-generator/ixia-c-traffic-engine\n</code></pre>"},{"location":"deployments-kne/","title":"Deploy Ixia-c using KNE","text":"<p>Ixia-c can be deployed in the k8s environment by using the Kubernetes Network Emulation that consists of the following services:</p> <ul> <li>operator: Serves API request from the clients and manages workflow across one or more traffic engines.</li> <li>controller: Serves API request from the clients and manages workflow across one or more traffic engines.</li> <li>traffic-engine: Generates, captures, and processes the traffic from one or more network interfaces (on linux-based OS).</li> <li>protocol-engine: Emulates layer3 networks and protocols such as BGP, ISIS, and etc (on linux-based OS).</li> <li>gnmi-server: Captures statistics from one or more network interfaces (on linux-based OS).</li> </ul>"},{"location":"deployments-kne/#system-prerequisites","title":"System Prerequisites","text":""},{"location":"deployments-kne/#cpu-and-ram","title":"CPU and RAM","text":"<p>Following are the recommended resources for a basic use-case.</p> <ul> <li><code>keng-operator</code>: Each instance requires at least 1 CPU core and 2GB RAM.</li> <li><code>keng-controller</code>: Each instance requires at least 1 CPU core and 2GB RAM.</li> <li><code>otg-gnmi-server</code>: Each instance requires at least 1 CPU core and 2GB RAM.</li> <li><code>ixia-c-traffic-engine</code>: Each instance requires 2 dedicated CPU cores and 3GB dedicated RAM.</li> <li><code>ixia-c-protocol-engine</code>: Each instance requires 4 dedicated CPU cores and 1GB dedicated RAM per port.</li> </ul>"},{"location":"deployments-kne/#os-and-software-prerequisites","title":"OS and Software Prerequisites","text":"<ul> <li>x86_64 Linux Distribution (Centos 7+ or Ubuntu 18+ have been tested)</li> <li>Docker 19+ (as distributed by https://docs.docker.com/)</li> <li>Go 1.17+</li> <li>kind 0.18+</li> </ul>"},{"location":"deployments-kne/#install-kne","title":"Install KNE","text":"<ul> <li>The main use case we are interested in is the ability to bring up arbitrary topologies to represent a production topology. This would require multiple vendors as well as traffic generation and end hosts.</li> </ul> <pre><code>  go install github.com/openconfig/kne/kne@latest\n</code></pre>"},{"location":"deployments-kne/#deploy-keng-operator","title":"Deploy keng-operator","text":"<ul> <li>Ixia Operator defines CRD for Ixia network device (IxiaTG) and can be used to build up different network topologies with network devices from other vendors. Network interconnects between the topology nodes can be setup with various container network interface (CNI) plugins for Kubernetes for attaching multiple network interfaces to the nodes.</li> </ul> <pre><code>  kubectl apply -f https://github.com/open-traffic-generator/keng-operator/releases/download/v0.3.5/ixiatg-operator.yaml\n</code></pre>"},{"location":"deployments-kne/#apply-configmap","title":"Apply configmap","text":"<ul> <li> <p>The various Ixia component versions to be deployed is derived from the Ixia release version as specified in the IxiaTG config. These component mappings are captured in ixia-configmap.yaml for each Ixia release. The configmap, as shown in the snippet below, comprise of the Ixia release version (\"release\"), and the list of qualified component versions, for that release. Ixia Operator first tries to access these details from Keysight published releases; if unable to so, it tries to locate them in Kubernetes configmap. This allows users to have the operator load images from private repositories, by updating the configmap entries. Thus, for deployment with custom images, the user is expected to download release specific ixia-configmap.yaml from published releases. Then, in the configmap, update the specific container image \"path\" / \"tag\" fields and also update the \"release\" to some custom name. Start the operator first as specified in the deployment section below, before applying the configmap locally. After this the operator can be used to deploy the containers and services.</p> </li> <li> <p>For community users,</p> <pre><code>  apiVersion: v1\n  kind: ConfigMap\n  metadata:\n      name: ixiatg-release-config\n      namespace: ixiatg-op-system\n  data:\n      versions: |\n          {\n            \"release\": \"1.40.0-15\",\n            \"images\": [\n                  {\n                      \"name\": \"controller\",\n                      \"path\": \"ghcr.io/open-traffic-generator/keng-controller\",\n                      \"tag\": \"1.40.0-15\"\n                  },\n                  {\n                      \"name\": \"gnmi-server\",\n                      \"path\": \"ghcr.io/open-traffic-generator/otg-gnmi-server\",\n                      \"tag\": \"1.40.3\"\n                  },\n                  {\n                      \"name\": \"traffic-engine\",\n                      \"path\": \"ghcr.io/open-traffic-generator/ixia-c-traffic-engine\",\n                      \"tag\": \"1.8.0.245\"\n                  },\n                  {\n                      \"name\": \"protocol-engine\",\n                      \"path\": \"ghcr.io/open-traffic-generator/ixia-c-protocol-engine\",\n                      \"tag\": \"1.00.0.482\"\n                  },\n                  {\n                      \"name\": \"ixhw-server\",\n                      \"path\": \"ghcr.io/open-traffic-generator/keng-layer23-hw-server\",\n                      \"tag\": \"1.40.0-5\"\n                  }\n              ]\n          }\n</code></pre> </li> <li> <p>For commercial users, <code>LICENSE_SERVERS</code> needs to be specified for <code>keng-controller</code> deployment.</p> <pre><code>  apiVersion: v1\n  kind: ConfigMap\n  metadata:\n      name: ixiatg-release-config\n      namespace: ixiatg-op-system\n  data:\n      versions: |\n          {\n            \"release\": \"1.40.0-15\",\n            \"images\": [\n                  {\n                      \"name\": \"controller\",\n                      \"path\": \"ghcr.io/open-traffic-generator/keng-controller\",\n                      \"tag\": \"1.40.0-15\",\n                      \"env\": {\n                            \"LICENSE_SERVERS\": \"ip/hostname of license server\"\n                        }\n                  },\n                  {\n                      \"name\": \"gnmi-server\",\n                      \"path\": \"ghcr.io/open-traffic-generator/otg-gnmi-server\",\n                      \"tag\": \"1.40.3\"\n                  },\n                  {\n                      \"name\": \"traffic-engine\",\n                      \"path\": \"ghcr.io/open-traffic-generator/ixia-c-traffic-engine\",\n                      \"tag\": \"1.8.0.245\"\n                  },\n                  {\n                      \"name\": \"protocol-engine\",\n                      \"path\": \"ghcr.io/open-traffic-generator/ixia-c-protocol-engine\",\n                      \"tag\": \"1.00.0.482\"\n                  },\n                  {\n                      \"name\": \"ixhw-server\",\n                      \"path\": \"ghcr.io/open-traffic-generator/keng-layer23-hw-server\",\n                      \"tag\": \"1.40.0-5\"\n                  }\n              ]\n          }\n</code></pre> </li> </ul> <pre><code>  # After saving the configmap snippet in a yaml file\n  kubectl apply -f ixiatg-configmap.yaml\n</code></pre>"},{"location":"deployments-kne/#deploy-the-topology","title":"Deploy the topology","text":"<ul> <li>The following snippet shows a simple KNE b2b topology.</li> </ul> <pre><code>name: ixia-c\nnodes:\n  - name: otg\n    vendor: KEYSIGHT\n    version: 1.40.0-15\n    services:\n      8443:\n        name: https\n        inside: 8443\n      40051:\n        name: grpc\n        inside: 40051\n      50051:\n        name: gnmi\n        inside: 50051\nlinks:\n  - a_node: otg\n    a_int: eth1\n    z_node: otg\n    z_int: eth2\n</code></pre> <pre><code># After saving the topology snippet in a yaml file\nkne create topology.yaml\n</code></pre> <ul> <li>After deployment, you are now ready to run a test using this topology.</li> </ul>"},{"location":"deployments-kne/#destroyremove-the-topology","title":"Destroy/Remove the topology","text":"<pre><code># delete a particular topology\nkne delete topology.yaml\n</code></pre>"},{"location":"deployments/","title":"Deployment","text":""},{"location":"deployments/#overview","title":"Overview","text":"<p>Ixia-c is distributed and deployed as a multi-container application that consists of the following services:</p> <ul> <li>controller: Serves API request from the clients and manages workflow across one or more traffic engines.</li> <li>traffic-engine: Generates, captures, and processes traffic from one or more network interfaces (on linux-based OS).</li> <li>app-usage-reporter: (Optional) Collects anonymous usage report from the controller and uploads it to the Keysight Cloud, with minimal impact on the host resources.</li> </ul> <p>All these services are available as docker images on the GitHub Open-Traffic-Generator repository. To use specific versions of these images, see Ixia-c Releases .</p> <p></p> <p>Once the services are deployed, snappi-tests (a collection of snappi test scripts and configurations) can be setup to run against Ixia-c.</p>"},{"location":"deployments/#bootstrap","title":"Bootstrap","text":"<p>The Ixia-c services can either all be deployed on the same host or each on separate hosts (as long as they are mutually reachable over the network). There is no boot-time dependency between them, which allows horizontal scalability without interrupting the existing services.</p> <p>You can establish a connectivity between the services in two ways. The options are as follows:</p> <ul> <li>controller &amp; traffic-engine: The client pushes a traffic configuration to the controller, containing the <code>location</code> of the traffic engine.</li> <li>controller &amp; app-usage-reporter: The Controller periodically tries to establish connectivity with the <code>app-usage-reporter</code> on a <code>location</code>, which can be overridden by using the controller's deployment parameters.</li> </ul> <p>The location (network address) of the traffic-engine and the app-usage-reporter must be reachable from the controller, even if they are not reachable from the client scripts.</p>"},{"location":"deployments/#deployment-types","title":"Deployment types","text":"<ul> <li> <p>Using docker-compose</p> </li> <li> <p>Using containerlab</p> </li> <li> <p>Using KNE</p> </li> </ul>"},{"location":"deployments/#diagnostics","title":"Diagnostics","text":"<p>Check and download controller logs:</p> <pre><code>docker exec &lt;container-id&gt; cat logs/controller.log\n# follow logs\ndocker exec &lt;container-id&gt; tail -f logs/controller.log\n# check stdout output\ndocker logs &lt;container-id&gt;\n# download logs\ndocker cp &lt;container-id&gt;:$(docker exec &lt;container-id&gt; readlink -f logs/controller.log) ./\n</code></pre> <p>Check and download traffic-engine logs:</p> <pre><code>docker exec &lt;container-id&gt; cat /var/log/usstream/usstream.log\n# follow logs\ndocker exec &lt;container-id&gt; tail -f /var/log/usstream/usstream.log\n# check stdout output\ndocker logs &lt;container-id&gt;\n# download logs\ndocker cp &lt;container-id&gt;:/var/log/usstream/usstream.log ./\n</code></pre>"},{"location":"deployments/#test-suite","title":"Test Suite","text":""},{"location":"deployments/#one-arm-scenario","title":"One-arm Scenario","text":"<p>TODO: diagram</p> <ul> <li>Automated</li> </ul> <pre><code>docker-compose -f deployments/raw-one-arm.yml up -d # community users\n# optionally stop and remove services deployed\ndocker-compose -f deployments/raw-one-arm.yml down # community users\n</code></pre> <ul> <li>Manual</li> </ul> <pre><code># start controller and app usage reporter\n\n# community users\ndocker run --net=host -d ghcr.io/open-traffic-generator/keng-controller --accept-eula\n# commercial users\ndocker run --net=host -d ghcr.io/open-traffic-generator/keng-controller --accept-eula --license-servers=\"ip/hostname of license server\"\ndocker run --net=host -d ghcr.io/open-traffic-generator/keng-app-usage-reporter\n\n# start traffic engine on network interface eth1, TCP port 5555 and cpu cores 0, 1, 2\ndocker run --net=host --privileged -d         \\\n  -e OPT_LISTEN_PORT=\"5555\"                   \\\n  -e ARG_IFACE_LIST=\"virtual@af_packet,eth1\"  \\\n  -e OPT_NO_HUGEPAGES=\"Yes\"                   \\\n  --cpuset-cpus=\"0,1,2\"                       \\\n  ghcr.io/open-traffic-generator/ixia-c-traffic-engine\n</code></pre>"},{"location":"deployments/#two-arm-scenario","title":"Two-arm Scenario","text":"<p>TODO: diagram</p> <ul> <li>Automated</li> </ul> <pre><code>docker-compose -f deployments/raw-two-arm.yml up -d # community users\n# optionally stop and remove services deployed\ndocker-compose -f deployments/raw-two-arm.yml down # community users\n</code></pre> <ul> <li>Manual</li> </ul> <pre><code># start controller and app usage reporter\n# community users\ndocker run --net=host -d ghcr.io/open-traffic-generator/keng-controller --accept-eula\n# commercial users\ndocker run --net=host -d ghcr.io/open-traffic-generator/keng-controller --accept-eula --license-servers=\"ip/hostname of license server\"\ndocker run --net=host -d ghcr.io/open-traffic-generator/keng-app-usage-reporter\n\n# start traffic engine on network interface eth1, TCP port 5555 and cpu cores 0, 1, 2\ndocker run --net=host --privileged -d         \\\n  -e OPT_LISTEN_PORT=\"5555\"                   \\\n  -e ARG_IFACE_LIST=\"virtual@af_packet,eth1\"  \\\n  -e OPT_NO_HUGEPAGES=\"Yes\"                   \\\n  --cpuset-cpus=\"0,1,2\"                       \\\n  ghcr.io/open-traffic-generator/ixia-c-traffic-engine\n\n# start traffic engine on network interface eth2, TCP port 5556 and cpu cores 0, 3, 4\ndocker run --net=host --privileged -d         \\\n  -e OPT_LISTEN_PORT=\"5556\"                   \\\n  -e ARG_IFACE_LIST=\"virtual@af_packet,eth2\"  \\\n  -e OPT_NO_HUGEPAGES=\"Yes\"                   \\\n  --cpuset-cpus=\"0,3,4\"                       \\\n  ghcr.io/open-traffic-generator/ixia-c-traffic-engine\n</code></pre>"},{"location":"deployments/#three-arm-mesh-scenario","title":"Three-arm Mesh Scenario","text":"<p>This scenario binds traffic engine to the management network interface, that belongs to the container which in turn is a part of the docker0 network.</p> <p>TODO: diagram</p> <ul> <li>Automated</li> </ul> <pre><code>docker-compose -f deployments/raw-three-arm-mesh.yml up -d # community users\n# optionally stop and remove services deployed\ndocker-compose -f deployments/raw-three-arm-mesh.yml down # community users\n</code></pre> <ul> <li>Manual</li> </ul> <pre><code># start controller and app usage reporter\n# community users\ndocker run --net=host -d ghcr.io/open-traffic-generator/keng-controller --accept-eula\n# commercial users\ndocker run --net=host -d ghcr.io/open-traffic-generator/keng-controller --accept-eula --license-servers=\"ip/hostname of license server\"\ndocker run --net=host -d ghcr.io/open-traffic-generator/keng-app-usage-reporter\n\n# start traffic engine on network interface eth0, TCP port 5555 and cpu cores 0, 1, 2\ndocker run --privileged -d                    \\\n  -e OPT_LISTEN_PORT=\"5555\"                   \\\n  -e ARG_IFACE_LIST=\"virtual@af_packet,eth0\"  \\\n  -e OPT_NO_HUGEPAGES=\"Yes\"                   \\\n  -p 5555:5555                                \\\n  --cpuset-cpus=\"0,1,2\"                       \\\n  ghcr.io/open-traffic-generator/ixia-c-traffic-engine\n\n# start traffic engine on network interface eth0, TCP port 5556 and cpu cores 0, 3, 4\ndocker run --privileged -d                    \\\n  -e OPT_LISTEN_PORT=\"5555\"                   \\\n  -e ARG_IFACE_LIST=\"virtual@af_packet,eth0\"  \\\n  -e OPT_NO_HUGEPAGES=\"Yes\"                   \\\n  -p 5556:5555                                \\\n  --cpuset-cpus=\"0,3,4\"                       \\\n  ghcr.io/open-traffic-generator/ixia-c-traffic-engine\n\n# start traffic engine on network interface eth0, TCP port 5557 and cpu cores 0, 5, 6\ndocker run --privileged -d                    \\\n  -e OPT_LISTEN_PORT=\"5555\"                   \\\n  -e ARG_IFACE_LIST=\"virtual@af_packet,eth0\"  \\\n  -e OPT_NO_HUGEPAGES=\"Yes\"                   \\\n  -p 5557:5555                                \\\n  --cpuset-cpus=\"0,5,6\"                       \\\n  ghcr.io/open-traffic-generator/ixia-c-traffic-engine\n</code></pre>"},{"location":"deployments/#todo-multi-port-per-te-container","title":"TODO: Multi-port per TE container","text":""},{"location":"deployments/#tests","title":"Tests","text":""},{"location":"deployments/#clone-tests","title":"Clone Tests","text":"<pre><code>  # Git clone sanppi-tests repo from github\n  # This repository consists of end-to-end test scripts written in [snappi](https://github.com/open-traffic-generator/snappi).\n  git clone https://github.com/open-traffic-generator/snappi-tests.git\n  cd snappi-tests\n</code></pre>"},{"location":"deployments/#setup-tests","title":"Setup Tests","text":"<p>Ensure that the client setup meets the Python Prerequisites.</p> <ul> <li> <p>Install <code>snappi</code>.</p> <pre><code>  python -m pip install --upgrade \"snappi\"\n</code></pre> </li> <li> <p>Install test dependencies</p> <pre><code>  python -m pip install --upgrade -r requirements.txt\n</code></pre> </li> <li> <p>Ensure that a <code>sample test</code> script executes successfully. For more information, see test details.</p> <pre><code>  # provide intended API Server and port addresses\n  vi tests/settings.json\n  # run a test\n  python -m pytest tests/raw/test_tcp_unidir_flows.py\n</code></pre> </li> </ul>"},{"location":"deployments/#test-details","title":"Test Details","text":"<p>The test scripts are based on <code>snappi client SDK</code> (auto-generated from the Open Traffic Generator Data Model) and have been written by using <code>pytest</code>.</p> <p>You can access the Open Traffic Generator Data Model from any browser by using https:///docs/ and start scripting. <p>The test directory structure is as follows:</p> <ul> <li><code>snappi-tests/tests/settings.json</code>: Global test configuration, that includes <code>controller</code> host, <code>traffic-engine</code> host, and <code>speed</code> settings.</li> <li><code>snappi-tests/configs/</code>: Contains pre-defined traffic configurations in JSON, which can be loaded by test scripts.</li> <li><code>snappi-tests/tests</code>: Contains end-to-end test scripts covering the most of the common use-cases.</li> <li><code>snappi-tests/tests/utils/</code>: Contains the most commonly required helpers, that are used throughout the test scripts.</li> <li><code>snappi-tests/tests/env/bin/python</code>: Python executable (inside virtual environment) to be used for test execution.</li> </ul> <p>The most of the test scripts use the following format:</p> <ul> <li><code>snappi-tests/tests/raw/test_tcp_unidir_flows.py</code>: For unidirectional flow use case.</li> <li><code>snappi-tests/tests/raw/test_tcp_bidir_flows.py</code>: For using pre-defined JSON traffic config &amp; bidirectional flow use case.</li> <li><code>snappi-tests/tests/raw/test_basic_flow_stats.py</code>: For basic flow statistics validation use case.</li> <li><code>&lt;test to validate capture&gt;</code>: For validating capture. TODO</li> <li><code>&lt;test to cover multiple protocol fields for different variation like fixed, list, counter&gt;</code>: Some examples from gtpv2 [ethernet - ipv4 - udp - gtpv2 - ipv6] TODO</li> <li><code>&lt;test script for one arm testing&gt;</code>: For one arm scenario TODO</li> </ul> <p>To execute batch tests marked as <code>sanity</code>:</p> <pre><code>tests/env/bin/python -m pytest tests/py -m \"sanity\"\n</code></pre> <p>NOTE on tests/settings.json:</p> <ul> <li>When <code>controller</code> and <code>traffic-engine</code>s are located on separate systems (remote)</li> </ul> <pre><code>{\n \"controller\": \"https://&lt;controller-ip&gt;\",\n  \"ports\": [\n      \"&lt;traffic-engine-ip&gt;:5555\",\n      \"&lt;traffic-engine-ip&gt;:5556\"\n  ]\n}\n</code></pre> <ul> <li>When <code>controller</code> and <code>traffic-engine</code>s are located on the same system (local - raw sockets)</li> </ul> <pre><code>{\n \"controller\": \"https://localhost:8443\",\n  \"ports\": [\n      \"localhost:5555\",\n      \"localhost:5556\"\n  ]\n}\n</code></pre>"},{"location":"eula/","title":"End User License Agreement","text":"<p>By using Keysight Elastic Network Generator and Ixia-c software you accept Keysight Technologies' End User License Agreement (EULA).  The agreement can be found at www.keysight.com/find/sweula.</p> <p>The End-User License Agreement must be accepted before the KENG controller can start. The user can accept the EULA by specifying <code>--accept-eula</code> command line option while starting the <code>keng-controller</code> container.</p>"},{"location":"eula/#copyright-notice","title":"Copyright notice","text":"<p>\u00a9 Copyright Keysight Technologies, Inc. 2021, 2022, 2023</p>"},{"location":"faq/","title":"FAQ","text":"<ul> <li>Table of Contents</li> <li>FAQ<ul> <li>Ixia-c, Open Traffic Generator and snappi</li> <li>Diagnostics</li> <li>Packets</li> <li>Application Usage Reporter</li> <li>Ixia-c Free Version</li> <li>Troubleshooting</li> <li>Support</li> </ul> </li> </ul>"},{"location":"faq/#ixia-c-open-traffic-generator-and-snappi","title":"Ixia-c, Open Traffic Generator and snappi","text":"What is the relationship between Open Traffic Generator data models, snappi and Ixia-c?    The [Open Traffic Generator](https://github.com/open-traffic-generator/models) data models describe a vendor neutral data models and APIs for test traffic generation.  The models are based on OpenAPI v3.  Ixia-c is a traffic generator that complies with these APIs.  [snappi](https://github.com/open-traffic-generator/snappi) is a *Pythonic* client library that can be used to write tests that run against Ixia-c.  The following two diagrams illustrate this relationship.    Where can I find a tutorial on snappi?    The [Hello snappi](hello-snappi.md) tutorial is a good starting point to get familiar with `snappi`.   How to use other non-Python clients?    TODO: Fill in details here.   Can I use curl to control Ixia-c?    Yes.  Refer to the [Quick Start](../readme.md##quick-start) on the Ixia-c home page."},{"location":"faq/#diagnostics","title":"Diagnostics","text":"What version of the Open Traffic Generator spec does Ixia-c implement?    Ixia-c implements version **[v0.12.5](https://github.com/open-traffic-generator/models/releases/tag/v0.12.5)** of the Open Traffic Generator Data Model. You can view the model [here](https://redocly.github.io/redoc/?url=https://raw.githubusercontent.com/open-traffic-generator/models/v0.12.5/artifacts/openapi.yaml).    How to find version of Open Traffic Generator spec implemented by Ixia-c?    Open Traffic Generator Data Model can be accessed from any browser by pointing it to (https://\\/docs/openapi.json).  The `info` section contains the `version` of the Open Traffic Generator Data Model implemented by the KENG controller."},{"location":"faq/#packets","title":"Packets","text":"What do packets look like?    Ixia packet testers utilize a proprietary flow-tracking technique which involves inserting a special *instrumentation header* into the packet.  It is inserted after the last valid protocol header ie, in the payload.     The fields in this header are:  - a *signature* which servers as marker to indicate start of header - a *PGID* or *port group id* field to distinguish between different flows - a 32 bit *sequence number* that can be used to detect packet re-ordering - a 32 bit timestamp that can be used to measure one-way latency    How do I disable packet instrumentation?    According to the Open Traffic Generator data model packet instrumentation is enabled by default on all the flows.  It is not possible to disable it at the moment.  An update to the data model that allows the end user to disable instrumentation is in the process of being merged into the *main* branch and will be submitted in the coming weeks.  Ixia-c will implement it at that point.    Does Ixia-c calculate packet checksums?  If so, which ones?    Yes, the Ixia-c traffic-engine automatically calculates the Ethernet FCS, IPv4, TCP and UDP checksums.  The traffic-engine is capable of calculating *four* checksums (in each packet).  TODO: verify.   What layer1 settings does Ixia-c utilize?    The only `layer1` setting that is used by the Ixia-c traffic engine is `speed`.  This setting is used to help convert flow rate specified as *percentage line-rate* into packets/second (pps) and to ensure that proper inter-packet-gaps are used.   What is the purpose of the layer1 setting speed?    To calculate packets/second (pps) when the flow rate is specified as *percentage line-rate* and to ensure proper inter-packet-gaps."},{"location":"faq/#application-usage-reporter","title":"Application Usage Reporter","text":"What is Application Usage Reporter?    The `app-usage-reporter` container collects and uploads to the Keysight cloud some basic telemetry information from the KENG controller.  This information helps Keysight improve the controller by focusing on the features that are being used by end users.   What information does Application Usage Reporter collect?    The *Application Usage Reporter* collects configuration related information like the number of ports in a test, number of flows configured, number of values used in a pattern. TODO:  Need to give an exhaustive list.   Does Application Usage Reporter collect any personally identifiable information?    No.  The *Application Usage Reporter* does NOT collect any personally identifiable information like username, hostname, email address, etc.   Does Application Usage Reporter save my IP address?   No.   Can I disable Application Usage Reporter? If so, how?    Yes, the *Application Usage Reporter* can be disabled.  Refer to the [Deployment Parameters](deployments.md#deployment-parameters) section in the Deployment Guide."},{"location":"faq/#ixia-c-free-version","title":"Ixia-c Free Version","text":"What are the limitations of the free version of Ixia-c?    The free version of KENG controller supports up to 4 ports in one session and the Ixia-c traffic-engine is limited to running over `raw` sockets.   What are the differences between the commercial and the free version of Ixia-c?   The following table highlights the differences between the commercial and the free version of Ixia-c.  | Capability | Ixia-c Free | Ixia-c Commercial | -------------| ------------| ------------------| | # of Ports | 4 | Unlimited | | Traffic Engine - Raw | Supported | Supported | | Traffic Engine - DPDK PCI | Not Supported | Supported | | Support | Slack Channel | Keysight Support |    How do I purchase the commercial version of Ixia-c?    Contact your Keysight Sales Rep or reach out to us [here](https://www.keysight.com/us/en/contact.html)."},{"location":"faq/#troubleshooting","title":"Troubleshooting","text":"How do I view KENG controller logs?    Use `docker logs` to view the controller log.   What is the message \"App usage reporting service is down\" in KENG controller log?    This message indicates that the `app-usage-reporter` container is not reachable from the KENG controller.  This does NOT affect KENG controller's normal operation.  Refer to [Deployment Parameters](deployments.md#deployment-parameters) for more details on how to override the default location for the app-usage-reporter or how to disable it all together."},{"location":"faq/#support","title":"Support","text":"Where do I get support for the free version of Ixia-c?    Reach out to us on [Slack](support.md) for support."},{"location":"features/","title":"Features","text":""},{"location":"features/#feature-metrics-showcasing-free-vs-commercial-usage","title":"Feature metrics showcasing free vs commercial usage","text":""},{"location":"integrated-environments/","title":"Integrations","text":""},{"location":"integrated-environments/#network-topology-emulation","title":"Network Topology Emulation","text":"<p>Ixia-c supports the following modern network emulation software:</p> <ul> <li>Containerlab: Simple yet powerful specialized tool for orchestrating and managing container-based networking labs.</li> <li>OpenConfig KNE: Kubernetes Network Emulation, which is a Google initiative to develop tooling for quickly setting up topologies of containers running various device OSes.</li> </ul>"},{"location":"licensing/","title":"Licensing","text":""},{"location":"licensing/#license-editions","title":"License Editions","text":"<p>The following License Editions are available for Keysight Elastic Network Generator:</p> Capability Community Developer Team System Ixia-c Traffic Port Capacity 4 x 1/10GE 50GE 400GE 800GE Test Concurrency 1 Seat 1 Seat 8 Seats 16 Seats Protocol Scale Restricted Limited Limited Unlimited Requires a valid license N Y Y Y Includes Ixia-c Software Test Ports Y Y Y Y Works with UHD400T Hardware N N Y Y Works with IxOS Hardware N N N Y <p>The Ixia-c Traffic Port Capacity is determined as a sum of the configured Ixia-c software test port speeds with the possible values of: 100GE, 50GE, 40GE, 25GE, 10GE, and 1GE. The Maximum data plane performance of an Ixia-c port may be less than the configured port speed, depending on the capabilities of the underlying hardware and software drivers. Doesn't apply to the UHD400T and IxOS hardware.</p> <p>The Test seat concurrency applies to a number of controller instances that are running with a configuration that exceeds the capabilities of the Community Edition.</p> <p>The Restricted protocol scale supports the maximum of 4 BGP sessions per test.</p> <p>The Capabilities of the Limited protocol scale depend on the protocol. For details, contact Keysight Support.</p> <p>Keysight Elastic Network Generator can simultaneously consume multiple licenses to increase the capabilities of a test. For example, if the Ixia-c Traffic Port Capacity configured in one test is 100GE, two Developer licenses will be consumed if available.</p> <p>If you require capabilities beyond those provided by the Community Edition, use Keysight Elastic Network Generator product page to request an evaluation or a quote.</p>"},{"location":"licensing/#license-server","title":"License Server","text":"<p>In order to use capabilities of Elastic Network Generator that require a valid license, you need to deploy a Keysight License Server. Keysight uses the license server to manage floating or network shared licenses for its software products. The license server enables licenses to float and not be tied to a specific Elastic Network Generator instance. The Elastic Network Generator controllers must be able to reach the License server.</p>"},{"location":"licensing/#deployment","title":"Deployment","text":"<p>The license server is a virtual machine and it is distributed as OVA and QCOW2 images (you only need one of them depending on your hypervisor, downloading may need credentials for support website.).</p> <ul> <li>OVA image, 5.8GB</li> <li>QCOW2 image, 6GB</li> </ul> <p>To make a decision where to deploy the License Server VM, take into the account the following requirements:</p> <ul> <li>For VMware ESXi, use the OVA image</li> <li>For Linux-based QEMU or KVM, use the QCOW2 image</li> <li>2 vCPU cores</li> <li>8GB RAM for ESXi, 4GB RAM for QEMU/KVM</li> <li>100GB storage</li> <li>1 vNIC for network connectivity. Note that DHCP is the preferred option, and this is also how the VM is configured to obtain its IP address.</li> </ul> <p>Network connectivity requirements for the License Server VM</p> <ol> <li>Internet access from the VM over HTTPS is desirable for online license activation, but not strictly required. Offline activation method is available as well.</li> <li>Access from a user over HTTPS (TCP/443) for license operations (activation, deactivation, reservation, sync).</li> <li>Access from any <code>keng-controller</code> that needs a license during a test run over gRPC (TCP/7443) for license checkout and check-in.</li> </ol> <p>Here is an example of how different components communicate with the License Server:</p> <p></p>"},{"location":"licensing/#configuration","title":"Configuration","text":"<p>If your network doesn't provide DHCP, you can configure a static IP address for the License Server VM. Access the VM console and go through two-step login process:</p> <ul> <li>First prompt: <code>console</code> (no password)</li> <li>Second promt: <code>admin</code>/<code>admin</code></li> <li>Run the following commands to configure a static IP address, where <code>x.x.x.x</code> is the IP address, <code>yy</code> is the prefix length, <code>z.z.z.z</code> is the default gateway, <code>a.a.a.a</code> and <code>b.b.b.b</code> are DNS servers:</li> </ul> <pre><code>kcos networking ip set mgmt0 x.x.x.x/yy z.z.z.z\nkcos networking dns-servers add a.a.a.a b.b.b.b\n</code></pre>"},{"location":"licensing/#activation","title":"Activation","text":"<p>Now you shall be able to activate licenses and use the License Server with your Elastic Network Generator environments. Go to <code>https://your-license-server-hostname</code> to access the application. Enter credentials: <code>admin</code>/<code>admin</code> to login.</p> <p>If you have an activation code, to perform an online activation, click \"Activate Licenses\", enter the code and click \"Activate\". For offline mode, choose \"Offline Operations\" instead.</p> <p>You can also use a command-line session, via console or SSH, to perform license operations. Run <code>kcos licensing --help</code> to see the list of available commands.</p>"},{"location":"licensing/#using-licenses","title":"Using Licenses","text":"<p>To use the licenses with the Elastic Network Generator, provide the location of the license servers to the controller instances using</p> <pre><code>--license-servers=\"server1 server2 server3 server4\"\n</code></pre> <p>argument when launching the controller. The argument accepts a space-separated list of hostnames or IP addresses of the License Servers, up to four. The controller will try to connect to the License Servers in the order they are specified in the list. If the first License Server is not available, or doesn't have enough available licenses to run the test, the controller will try to connect to the next one in the list.</p> <p>An alternative way is to use an environment variable <code>LICENSE_SERVERS</code>.</p>"},{"location":"licensing/#additional-information","title":"Additional Information","text":"<p>Please refer to the Reference Guide for more information on the license operations.</p>"},{"location":"limitations/","title":"Limitations","text":"<ul> <li>Supported protocol headers are <code>ethernet</code>, <code>ipv4</code>, <code>ipv6</code>, <code>vlan</code>, <code>tcp</code>, <code>udp</code>, <code>gtpv1</code>, <code>gtpv2</code>, <code>arp</code>, <code>icmp</code> and <code>custom</code>.</li> <li><code>fixed_packets</code>, <code>fixed_seconds</code>,<code>continuous</code> and <code>burst</code> are supported for flow duration (fixed number of <code>burst</code> is not supported).</li> <li>Size of the packet must be a value greater than or equal to 64 bytes.</li> <li>Setting random frame size is not supported.</li> <li>Only <code>value</code>, <code>values</code>,<code>increment</code> and <code>decrement</code> patterns are supported for Protocol Header fields.</li> <li>A maximum of <code>4</code> increment, decrement and values patterns are supported per flow.</li> <li>A maximum of <code>500K</code> list entries are supported per list pattern, per flow.</li> <li>A maximum of <code>256 flows</code> for a given tx-rx port pair is supported.</li> <li>Statistics based on <code>ingress_result_name</code> is not supported.</li> <li>Tx statistics for flow results is not supported.</li> <li>Starting or stopping transmit on selected flows is not supported. Pausing flows is not supported.</li> <li><code>lags</code>, <code>devices</code> and <code>options</code> in <code>Config</code> are not supported.</li> <li>Only <code>speed</code>, <code>promiscuous</code> and <code>mtu</code> settings are supported in <code>Layer1</code>.</li> <li>In Centos 7+, with Python 2.7+, virtualenv creation fails due to a known limitation    (https://github.com/pypa/virtualenv/issues/1609). It can be avoided by upgrading pip and then</li> </ul>"},{"location":"news/","title":"News","text":"<ul> <li> <p>24th October, 2025: Ixia-c version 1.40.0 (build 15) released.  This conforms to v1.40.0 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes new features and bug fixes. Read more</p> </li> <li> <p>26th September, 2025: Ixia-c version 1.40.0 (build 1) released.  This conforms to v1.40.0 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes new features and bug fixes. Read more</p> </li> <li> <p>12th September, 2025: Ixia-c version 1.35.0 (build 14) released.  This conforms to v1.35.0 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes new features. Read more</p> </li> <li> <p>1st September, 2025: Ixia-c version 1.34.0 (build 1) released.  This conforms to v1.34.0 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes new features. Read more</p> </li> <li> <p>20th August, 2025: Ixia-c version 1.33.0 (build 34) released.  This conforms to v1.33.0 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes new features and bug fixes. Read more</p> </li> <li> <p>18th July, 2025: Ixia-c version 1.33.0 (build 1) released.  This conforms to v1.33.0 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes new features and bug fixes. Read more</p> </li> <li> <p>1st July, 2025: Ixia-c version 1.32.0 (build 1) released.  This conforms to v1.32.0 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes new features and bug fixes. Read more</p> </li> <li> <p>14th June, 2025: Ixia-c version 1.31.0 (build 6) released.  This conforms to v1.31.0 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes new features. Read more</p> </li> <li> <p>2nd June, 2025: Ixia-c version 1.31.0 (build 3) released.  This conforms to v1.31.0 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes new features and bug fixes. Read more</p> </li> <li> <p>19th May, 2025: Ixia-c version 1.28.0 (build 45) released.  This conforms to v1.28.0 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes new features. Read more</p> </li> <li> <p>7th May, 2025: Ixia-c version 1.28.0 (build 33) released.  This conforms to v1.28.0 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes new features and bug fixes. Read more</p> </li> <li> <p>18th April, 2025: Ixia-c version 1.28.0 (build 6) released.  This conforms to v1.28.0 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes new features and bug fixes. Read more</p> </li> <li> <p>29th March, 2025: Ixia-c version 1.24.0 (build 15) released.  This conforms to v1.24.0 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes new features and bug fixes. Read more</p> </li> <li> <p>7th March, 2025: Ixia-c version 1.24.0 (build 4) released.  This conforms to v1.24.0 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes new features and bug fixes. Read more</p> </li> <li> <p>26th February, 2025: Ixia-c version 1.20.0 (build 8) released.  This conforms to v1.20.0 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes new bug fixes. Read more</p> </li> <li> <p>11th February, 2025: Ixia-c version 1.20.0 (build 6) released.  This conforms to v1.20.0 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes new features and bug fixes. Read more</p> </li> <li> <p>24th January, 2025: Ixia-c version 1.19.0 (build 18) released.  This conforms to v1.19.0 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes new features and bug fixes. Read more</p> </li> <li> <p>23rd December, 2024: Ixia-c version 1.19.0 (build 5) released.  This conforms to v1.19.0 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes new features and bug fixes. Read more</p> </li> <li> <p>29th November, 2024: Ixia-c version 1.17.0 (build 9) released.  This conforms to v1.17.0 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes new features and bug fixes. Read more</p> </li> <li> <p>18th November, 2024: Ixia-c version 1.16.0 (build 2) released.  This conforms to v1.16.0 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes new features and bug fixes. Read more</p> </li> <li> <p>25th October, 2024: Ixia-c version 1.14.0 (build 1) released.  This conforms to v1.14.0 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes new features and bug fixes. Read more</p> </li> <li> <p>4th October, 2024: Ixia-c version 1.13.0 (build 9) released.  This conforms to v1.13.0 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes new features and bug fixes. Read more</p> </li> <li> <p>13th September, 2024: Ixia-c version 1.13.0 (build 1) released.  This conforms to v1.13.0 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes new features and bug fixes. Read more</p> </li> <li> <p>2nd September, 2024: Ixia-c version 1.12.0 (build 1) released.  This conforms to v1.12.0 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes new features. Read more</p> </li> <li> <p>20th August, 2024: Ixia-c version 1.8.0 (build 1) released.  This conforms to v1.8.0 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes new features. Read more</p> </li> <li> <p>7th August, 2024: Ixia-c version 1.7.2 (build 1) released.  This conforms to v1.7.1 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes new features and bug fixes. Read more</p> </li> <li> <p>19th July, 2024: Ixia-c version 1.6.2 (build 13) released.  This conforms to v1.6.2 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes new features and bug fixes. Read more</p> </li> <li> <p>28th June, 2024: Ixia-c version 1.6.2 (build 1) released.  This conforms to v1.6.2 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes new features and bug fixes. Read more</p> </li> <li> <p>14th June, 2024: Ixia-c version 1.5.1 (build 11) released.  This conforms to v1.5.1 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes new features. Read more</p> </li> <li> <p>1st June, 2024: Ixia-c version 1.5.1 (build 3) released.  This conforms to v1.5.1 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes new features. Read more</p> </li> <li> <p>23rd May, 2024: Ixia-c version 1.5.0 (build 1) released.  This conforms to v1.5.0 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes bug fixes. Read more</p> </li> <li> <p>20th May, 2024: Ixia-c version 1.4.0 (build 15) released.  This conforms to v1.4.0 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes bug fixes. Read more</p> </li> <li> <p>7th May, 2024: Ixia-c version 1.4.0 (build 1) released.  This conforms to v1.4.0 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes new features and bug fixes. Read more</p> </li> <li> <p>19th April, 2024: Ixia-c version 1.3.0 (build 2) released.  This conforms to v1.3.0 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes new features and bug fixes. Read more</p> </li> <li> <p>29th March, 2024: Ixia-c version 1.1.0 (build 21) released.  This conforms to v1.1.0 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes new features and bug fixes. Read more</p> </li> <li> <p>22nd March, 2024: Ixia-c version 1.1.0 (build 12) released.  This conforms to v1.1.0 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes new features. Read more</p> </li> <li> <p>20th March, 2024: Ixia-c version 1.1.0 (build 10) released.  This conforms to v1.1.0 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes new features and bug fixes. Read more</p> </li> <li> <p>1st March, 2024: Ixia-c version 1.0.0 (build 104) released.  This conforms to v1.0.2 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes new features and bug fixes. Read more</p> </li> <li> <p>22nd February, 2024: Ixia-c version 1.0.0 (build 92) released.  This conforms to v1.0.1 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes new features and bug fixes. Read more</p> </li> <li> <p>5th February, 2024: Ixia-c version 1.0.0 (build 7) released.  This conforms to v1.0.0 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes new features and bug fixes. Read more</p> </li> <li> <p>19th January, 2024: Ixia-c version 0.1.0 (build 222) released.  This conforms to v0.13.7 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes new features and bug fixes. Read more</p> </li> <li> <p>21st December, 2023: Ixia-c version 0.1.0 (build 158) released.  This conforms to v0.13.4 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes new features and bug fixes. Read more</p> </li> <li> <p>7th December, 2023: Ixia-c version 0.1.0 (build 84) released.  This conforms to v0.13.2 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes new features. Read more</p> </li> <li> <p>24th November, 2023: Ixia-c version 0.1.0 (build 81) released.  This conforms to v0.13.2 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes new features and bug fixes. Read more</p> </li> <li> <p>10th November, 2023: Ixia-c version 0.1.0 (build 53) released.  This conforms to v0.13.0 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes new features and bug fixes. Read more</p> </li> <li> <p>3rd November, 2023: Ixia-c version 0.1.0 (build 26) released.  This conforms to v0.13.0 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes stability fixes. Read more</p> </li> <li> <p>20th October, 2023: Ixia-c version 0.1.0 (build 3) released.  This conforms to v0.13.0 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes new features, stability and bug fixes. Read more</p> </li> <li> <p>29th September, 2023: Ixia-c version 0.0.1 (build 4554) released.  This conforms to v0.12.5 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes bug fixes. Read more</p> </li> <li> <p>14th September, 2023: Ixia-c version 0.0.1 (build 4478) released.  This conforms to v0.12.3 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes stability fixes. Read more</p> </li> <li> <p>1st September, 2023: Ixia-c version 0.0.1 (build 4435) released.  This conforms to v0.12.2 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes bug fixes. Read more</p> </li> <li> <p>21st August, 2023: Ixia-c version 0.0.1 (build 4399) released.  This conforms to v0.12.1 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes new features. Read more</p> </li> <li> <p>4th August, 2023: Ixia-c version 0.0.1 (build 4306) released.  This conforms to v0.11.11 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes stability fixes. Read more</p> </li> <li> <p>21st July, 2023: Ixia-c version 0.0.1 (build 4167) released.  This conforms to v0.11.10 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes new features. Read more</p> </li> <li> <p>29th June, 2023: Ixia-c version 0.0.1 (build 4139) released.  This conforms to v0.11.10 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes new features. Read more</p> </li> <li> <p>16th June, 2023: Ixia-c version 0.0.1 (build 4124) released.  This conforms to v0.11.9 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes new features. Read more</p> </li> <li> <p>2nd June, 2023: Ixia-c version 0.0.1 (build 4080) released.  This conforms to v0.11.9 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes stability fixes. Read more</p> </li> <li> <p>18th May, 2023: Ixia-c version 0.0.1 (build 4064) released.  This conforms to v0.11.8 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes bug fix. Read more</p> </li> <li> <p>5th May, 2023: Ixia-c version 0.0.1 (build 4013) released.  This conforms to v0.11.8 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes new features. Read more</p> </li> <li> <p>21st April, 2023: Ixia-c version 0.0.1 (build 3927) released.  This conforms to v0.11.8 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes new features. Read more</p> </li> <li> <p>31st March, 2023: Ixia-c version 0.0.1 (build 3889) released.  This conforms to v0.11.4 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes new features. Read more</p> </li> <li> <p>16th March, 2023: Ixia-c version 0.0.1 (build 3865) released.  This conforms to v0.11.1 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes new features. Read more</p> </li> <li> <p>3rd March, 2023: Ixia-c version 0.0.1 (build 3841) released.  This conforms to v0.10.12 of the Open Traffic Generator Models specification.</p> </li> </ul> <p>Announcement</p> <p><code>ixia-c</code> container images are hosted on GitHub Container Registry, We stopped publishing <code>ixia-c</code> container images to DockerHub.</p> <ul> <li> <p>This build includes new features. Read more</p> </li> <li> <p>17th February, 2023: Ixia-c version 0.0.1 (build 3807) released.  This conforms to v0.10.9 of the Open Traffic Generator Models specification.</p> </li> </ul> <p>Announcement</p> <p><code>ixia-c</code> container images are hosted on GitHub Container Registry, We stopped publishing <code>ixia-c</code> container images to DockerHub.</p> <ul> <li> <p>This build includes bug fixes. Read more</p> </li> <li> <p>2nd February, 2023: Ixia-c version 0.0.1 (build 3768) released.  This conforms to v0.10.7 of the Open Traffic Generator Models specification.</p> </li> </ul> <p>Announcement</p> <p><code>ixia-c</code> container images are hosted on GitHub Container Registry, We stopped publishing <code>ixia-c</code> container images to DockerHub.</p> <ul> <li> <p>This build includes bug fixes. Read more</p> </li> <li> <p>20th January, 2023: Ixia-c version 0.0.1 (build 3724) released.  This conforms to v0.10.6 of the Open Traffic Generator Models specification.</p> </li> </ul> <p>Announcement</p> <p><code>ixia-c</code> container images are hosted on GitHub Container Registry, We stopped publishing <code>ixia-c</code> container images to DockerHub.</p> <ul> <li> <p>This build includes bug fixes. Read more</p> </li> <li> <p>15th December, 2022: Ixia-c version 0.0.1 (build 3698) released.  This conforms to v0.10.5 of the Open Traffic Generator Models specification.</p> </li> </ul> <p>Announcement</p> <p><code>ixia-c</code> container images are hosted on GitHub Container Registry, We stopped publishing <code>ixia-c</code> container images to DockerHub.</p> <ul> <li>1st December, 2022: Ixia-c version 0.0.1 (build 3662) released.  This conforms to v0.9.10 of the Open Traffic Generator Models specification.</li> </ul> <p>Announcement</p> <p><code>ixia-c</code> container images are hosted on GitHub Container Registry. However we will continue publishing <code>ixia-c</code> container images to DockerHub until 18th November, 2022.</p> <ul> <li>10th November, 2022: Ixia-c version 0.0.1 (build 3619) released.  This conforms to v0.9.1 of the Open Traffic Generator Models specification.</li> </ul> <p>Announcement</p> <p><code>ixia-c</code> container images are hosted on GitHub Container Registry. However we will continue publishing <code>ixia-c</code> container images to DockerHub until 18th November, 2022.</p> <ul> <li> <p>This build includes new features along with bugs fixes. Read more</p> </li> <li> <p>28th October, 2022: Ixia-c version 0.0.1 (build 3587) released.  This conforms to v0.9.1 of the Open Traffic Generator Models specification.</p> </li> </ul> <p>Announcement</p> <p><code>ixia-c</code> container images are hosted on GitHub Container Registry. However we will continue publishing <code>ixia-c</code> container images to DockerHub until 18th November, 2022.</p> <ul> <li> <p>This build includes bug fixes. Read more</p> </li> <li> <p>29th September, 2022: Ixia-c version 0.0.1 (build 3423) released.  This conforms to v0.9.1 of the Open Traffic Generator Models specification.</p> </li> </ul> <p>Announcement</p> <p><code>ixia-c</code> container images are hosted on GitHub Container Registry. However we will continue publishing <code>ixia-c</code> container images to DockerHub until 18th November, 2022.</p> <ul> <li> <p>This build includes stability fixes. Read more</p> </li> <li> <p>16th September, 2022: Ixia-c version 0.0.1 (build 3383) released.  This conforms to v0.9.1 of the Open Traffic Generator Models specification.</p> </li> </ul> <p>Announcement</p> <p><code>ixia-c</code> container images are hosted on GitHub Container Registry. However we will continue publishing <code>ixia-c</code> container images to DockerHub until 18th November, 2022.</p> <ul> <li> <p>This build includes new features. Read more</p> </li> <li> <p>1st September, 2022: Ixia-c version 0.0.1 (build 3182) released.  This conforms to v0.9.1 of the Open Traffic Generator Models specification.</p> </li> </ul> <p>Announcement</p> <p><code>ixia-c</code> container images are hosted on GitHub Container Registry. However we will continue publishing <code>ixia-c</code> container images to DockerHub until 18th November, 2022.</p> <ul> <li> <p>This build includes new features. Read more</p> </li> <li> <p>18th August, 2022: Ixia-c version 0.0.1 (build 3113) released.  This conforms to v0.8.6 of the Open Traffic Generator Models specification.</p> </li> </ul> <p>Announcement</p> <p>From now onwards <code>ixia-c</code> container images will be hosted on GitHub Container Registry. However we will continue publishing <code>ixia-c</code> container images to DockerHub as well for the next 3 months. (until 18th November, 2022)</p> <ul> <li> <p>This build includes new feature along with bug fix. Read more</p> </li> <li> <p>4th August, 2022: Ixia-c version 0.0.1 (build 3027) released.  This conforms to v0.8.6 of the Open Traffic Generator Models specification.</p> </li> <li> <p>Support added for static <code>MPLS</code> packet header in flows. Read more</p> </li> <li> <p>27th July, 2022: Ixia-c version 0.0.1 (build 3002) released.  This conforms to v0.8.5 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes stability fixes. Read more</p> </li> <li> <p>21st July, 2022: Ixia-c version 0.0.1 (build 3000) released.  This conforms to v0.8.5 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes stability fixes. Read more</p> </li> <li> <p>1st July, 2022: Ixia-c version 0.0.1 (build 2994) released.  This conforms to v0.8.1 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes stability fixes. Read more</p> </li> <li> <p>30th June, 2022: Ixia-c version 0.0.1 (build 2992) released.  This conforms to v0.8.1 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes stability fixes. Read more</p> </li> <li> <p>16th June, 2022: Ixia-c version 0.0.1 (build 2969) released.  This conforms to v0.7.15 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes stability fixes. Read more</p> </li> <li> <p>2nd June, 2022: Ixia-c version 0.0.1 (build 2934) released.  This conforms to v0.7.13 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes bug fixes. Read more</p> </li> <li> <p>19th May, 2022: Ixia-c version 0.0.1 (build 2897) released.  This conforms to v0.7.8 of the Open Traffic Generator Models specification.</p> </li> <li> <p><code>ixia-c-one</code> is now supported on platforms with <code>cgroupv2</code> enabled. Read more</p> </li> <li> <p>9th May, 2022: Ixia-c version 0.0.1 (build 2801) released.  This conforms to v0.7.8 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes stability fixes. Read more</p> </li> <li> <p>5th May, 2022: Ixia-c version 0.0.1 (build 2790) released.  This conforms to v0.7.8 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes stability fixes. Read more</p> </li> <li> <p>21st April, 2022: Ixia-c version 0.0.1 (build 2770) released.  This conforms to v0.7.8 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes stability fixes. Read more</p> </li> <li> <p>7th April, 2022: Ixia-c version 0.0.1 (build 2755) released.  This conforms to v0.7.8 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes following bug fix Read more</p> <ul> <li>Clearing of <code>port</code> and <code>flow</code> statistics as part of <code>set_config</code>.</li> </ul> </li> <li> <p>25th March, 2022: Ixia-c version 0.0.1 (build 2738) released.  This conforms to v0.7.8 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes following new functionalities Read more</p> <ul> <li>fix in handling of <code>ether_type</code> field of ethernet packet</li> </ul> </li> <li> <p>24th March, 2022: Ixia-c version 0.0.1 (build 2727) released.  This conforms to v0.7.8 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build includes following new functionalities Read more</p> <ul> <li>correct received(rx) rate statistics in port metrics</li> <li>auto destination mac learning support in destination mac field of ethernet packet</li> </ul> </li> <li> <p>11th March, 2022: Ixia-c version 0.0.1 (build 2678) released.  This conforms to v0.7.3 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build contains stability and debuggability enhancements. Read more</p> </li> <li> <p>24th February, 2022: Ixia-c version 0.0.1 (build 2662) released.  This conforms to v0.7.3 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build implements transmit(tx) statistics &amp; transmit state of flow metrics. Read more</p> </li> <li> <p>10th February, 2022: Ixia-c version 0.0.1 (build 2610) released.  This conforms to v0.7.3 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build contains stability fixes. Read more</p> </li> <li> <p>27th January, 2022: Ixia-c version 0.0.1 (build 2597) released.  This conforms to v0.7.2 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build contains debuggability enhancements. Read more</p> </li> <li> <p>16th December, 2021: Ixia-c version 0.0.1 (build 2543) released.  This conforms to v0.7.2 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build contains stability fixes. Read more</p> </li> <li> <p>2nd December, 2021: Ixia-c version 0.0.1 (build 2446) released.  This conforms to v0.6.13 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build introduces ability to return large <code>FramesTx/RX</code> values by <code>metric</code> APIs. Read more</p> </li> <li> <p>18th November, 2021: Ixia-c version 0.0.1 (build 2399) released.  This conforms to v0.6.10 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build introduces ability to auto plug in default values for missing fields with primitive types upon receiving JSON payload. Read more</p> </li> <li> <p>5th November, 2021: Ixia-c version 0.0.1 (build 2367) released.  This conforms to v0.6.7 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build introduces uniform logging across some Ixia-c components. Read more</p> </li> <li> <p>27th October, 2021: Ixia-c version 0.0.1 (build 2342) released.  This conforms to v0.6.5 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build contains validation bug fixes. Read more</p> </li> <li> <p>21st October, 2021: Ixia-c version 0.0.1 (build 2337) released.  This conforms to v0.6.5 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build contains performance improvement in SetConfig and more correct fps vaules in scenarios involving multiple start or stop traffic. Read more</p> </li> <li> <p>29th September, 2021: Ixia-c version 0.0.1 (build 2289) released.  This conforms to v0.6.1 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build contains bugfixes for SetConfig and FPS values in GetMetrics. Read more</p> </li> <li> <p>8th September, 2021: Ixia-c version 0.0.1 (build 2185) released.  This conforms to v0.5.4 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This build contains support for updating flow rate without disrupting transmit state. Read more</p> </li> <li> <p>27th August, 2021: Ixia-c version 0.0.1 (build 2120) released.  This conforms to v0.4.12 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This release provides support for capture filter, setting GRE checksum flag, redirecting Ixia-c controller log to stdout and some bug fixes. Read more</p> </li> <li> <p>2nd July, 2021: Ixia-c End User License Agreement (EULA) updated.  New EULA can be found here.</p> </li> <li> <p>25th June, 2021: Ixia-c version 0.0.1 (build 1622) released.  This conforms to v0.4.0 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This release provides support for protocols GRE and VXLAN (RFC 2784), enabling/disabling flow metrics and some bug fixes. Read more</p> </li> <li> <p>31st May, 2021: Ixia-c version 0.0.1 (build 1388) released.  This conforms to v0.3.10 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This release provides support for flow delay and also fixes some bugs. Read more</p> </li> <li> <p>13th May, 2021: Ixia-c version 0.0.1 (build 1293) released.  This conforms to v0.3.8 of the Open Traffic Generator Models specification.</p> </li> <li> <p>This is the very first release of ixia-c. Read more</p> </li> </ul>"},{"location":"prerequisites/","title":"Ixia-c Prerequisites","text":""},{"location":"prerequisites/#system-prerequisites","title":"System Prerequisites","text":""},{"location":"prerequisites/#cpu-and-ram","title":"CPU and RAM","text":"<p>The minimum memory and cpu requirements for a basic use-case are as follows:</p> <ul> <li><code>keng-controller</code>: Each instance requires at least 10m CPU core and 25Mi RAM.</li> <li><code>ixia-c-traffic-engine</code>: Each instance requires 200m CPU core per test port, plus one shared CPU core and 60Mi RAM. Generic formula for CPU cores is <code>1 + 2 * number_of_ports</code>.</li> <li><code>ixia-c-protocol-engine</code>: Each instance requires 200m CPU core and 350Mi RAM per port.</li> </ul> <p>For more granularity on resource requirements for advanced deployments, see Resource requirements.</p>"},{"location":"prerequisites/#os-and-software","title":"OS and Software","text":"<ul> <li>x86_64 Linux Distribution (Centos 7+ or Ubuntu 18+ have been tested)</li> <li>Docker 19+ (as distributed by https://docs.docker.com/)</li> <li>For test-environment,<ul> <li>Python 3.6+ (with <code>pip</code>) or</li> <li>Go 1.17+</li> </ul> </li> </ul>"},{"location":"prerequisites/#software-prerequisites","title":"Software Prerequisites","text":""},{"location":"prerequisites/#docker","title":"Docker","text":"<ul> <li>Docker Engine (Community Edition)</li> </ul>"},{"location":"prerequisites/#python","title":"Python","text":"<ul> <li> <p>Ensure that you have <code>python</code> and <code>pip</code> installed on your system.</p> <p>You may have to use <code>python3</code> or <code>absolute path to python executable</code> depending on the Python Installation on your system.</p> <pre><code>python -m pip --help\n</code></pre> <p>If you do not see a help message, see pip installation guide, .</p> </li> <li> <p>It is recommended that you use a python virtual environment for development.</p> <pre><code>python -m pip install --upgrade virtualenv\n# create virtual environment inside `env/` and activate it.\npython -m virtualenv env\n# on linux\nsource env/bin/activate\n# on windows\nenv\\Scripts\\activate on Windows\n</code></pre> </li> </ul> <p>If you do not want to activate the virtual env, use <code>env/bin/python</code> (or <code>env\\scripts\\python</code> on Windows) instead of <code>python</code>.</p>"},{"location":"prerequisites/#network-interface-prerequisites","title":"Network Interface Prerequisites","text":"<p>In order for <code>ixia-c-traffic-engine</code> to function, several settings need to be tuned on the host system. They are as follows:</p> <ol> <li> <p>Ensure that all the existing network interfaces are <code>Up</code> and have <code>Promiscuous</code> mode enabled.</p> </li> <li> <p>The following example illustrates a sample configured interface <code>eth1</code></p> <pre><code># check interface details\nip addr\n# configure as required\nip link set eth1 up\nip link set eth1 promisc on\n</code></pre> </li> <li> <p>(Optional) You need to create the <code>veth</code> interface pairs, to deploy the <code>ixia-c-traffic-engine</code> against them.</p> <pre><code># create veth pair veth1 and veth2\nip link add veth1 type veth peer name veth2\nip link set veth1 up\nip link set veth2 up\n</code></pre> </li> </ol>"},{"location":"releases/","title":"Ixia-c Release Notes and Version Compatibility","text":""},{"location":"releases/#release-v1400-15-latest","title":"Release  v1.40.0-15 (Latest)","text":"<p>24th October, 2025</p>"},{"location":"releases/#build-details","title":"Build Details","text":"Component Version Open Traffic Generator API 1.40.0 snappi 1.40.3 gosnappi 1.40.3 keng-controller 1.40.0-15 ixia-c-traffic-engine 1.8.0.245 keng-app-usage-reporter 0.0.1-52 ixia-c-protocol-engine 1.00.0.482 keng-layer23-hw-server 1.40.0-5 keng-operator 0.3.34 otg-gnmi-server 1.40.3 ixia-c-one 1.40.0-15 UHD400 1.5.10 <p>Note</p> <p><code>gosnappi</code> will support go version &gt;=v1.24 and <code>snappi</code> will support python version from <code>v3.8</code> to <code>v3.12</code>.</p>"},{"location":"releases/#release-featuress","title":"Release Features(s):","text":"<ul> <li> <p>UHD400: Support added for capturing packets on multiple test ports.     ```go         // Enabling capture ports\u200b         enableCapture := config.Captures().Add().SetName(\"Capture\")\u200b         enableCapture.SetPortNames([]string{\"p1\", \"p2\", \"p3\", \"p4\"})\u200b</p> <pre><code>// startCapture on enabled ports\u200b\nfor _, capture := range gosnappi.Config.Captures().Items() {\u200b\n    capturePorts = append(capturePorts, capture.PortNames()...)\u200b\n}\u200b\n\u200b\ns := gosnappi.NewControlState()\u200b\ns.Port().Capture().SetPortNames(portNames).SetState(gosnappi.StatePortCaptureState.START)\u200b\nclient.Api().SetControlState(s, \"StartCapture\")\u200b\n\u200b\n// Retrieve Capture\u200b\ncaptureFileObj, err := os.Create(\u201ccapture_test.pcap\u201d)\u200b\nreq := gosnappi.NewCaptureRequest().SetPortName(portName)\u200b\ncaptureBytes, err := client.Api().GetCapture(req)\u200b\ncaptureFileObj.Write(captureBytes)\u200b\npcap.OpenOffline(outCaptureFile)\u200b\n</code></pre> <p>```\u200b</p> </li> <li> <p>Ixia Chassis &amp; Appliances(Novus, AresOne):Support added for extended IPv6 routing header type 4(IPv6 SR) as Data traffic.     <pre><code>    // go-snappi snippet\u200b\n    f1Eth := f1.Packet().Add().Ethernet()\u200b\n    ...\n    f1Ip := f1.Packet().Add().Ipv6()\u200b\n    ...\u200b\n\n    // IPv6 SR Header \u200b\n    f1ExtHdr := f1.Packet().Add().Ipv6ExtensionHeader()\u200b\n    f1SR := f1ExtHdr.Routing().SegmentRouting()\u200b\n    f1SR.SegmentsLeft().SetValue(2)\u200b\n    f1SR.LastEntry().SetValue(2)\u200b\n    f1SegList := f1SR.SegmentList()\u200b\n    f1SegList.Add().Segment().SetValue(\"5000:0:0:1:0:0:0:1\")\u200b\n    f1SegList.Add().Segment().SetValue(\"1000:0:0:1:0:0:0:1\")\u200b\n    ...\n</code></pre></p> </li> </ul>"},{"location":"releases/#bug-fixs","title":"Bug Fix(s):","text":"<ul> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): Issue is fixed where for certain scaled ISIS simulated topology configs <code>\"context deadline exceeded\"</code> error was being encountered on <code>set_config</code>.</li> </ul>"},{"location":"releases/#known-issues","title":"Known Issues","text":"<ul> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): If <code>keng-layer23-hw-server</code> version is upgraded/downgraded, the ports which will be used from this container must be rebooted once before running the tests.</li> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): <code>StartProtocols</code>/<code>set_control_state.protocol.all.start</code> can get stuck till the time all DHPCv4/v6 clients receive the leased IPv4/v6 addresses from the DHCPv4/v6 server/relay agent. This may result in getting <code>\"context deadline exceeded\"</code> error in the test program.</li> <li>UHD400: Packets will not be transmitted if <code>flows[i].rate.pps</code> is less than 50.</li> <li>UHD400: <code>values</code> for fields in flow packet headers can be created with maximum length of 1000 values. If larger set of values are required for a field which are random, please use <code>random</code> instead of <code>values</code>.</li> <li>Ixia-C: Flow Tx is incremented for flow with tx endpoints as LAG, even if no packets are sent on the wire when all active links of the LAG are down.</li> <li>Ixia-C: The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>Ixia-C: When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets. </li> </ul>"},{"location":"releases/#release-v1400-1","title":"Release  v1.40.0-1","text":"<p>26th September, 2025</p>"},{"location":"releases/#build-details_1","title":"Build Details","text":"Component Version Open Traffic Generator API 1.40.0 snappi 1.40.0 gosnappi 1.40.0 keng-controller 1.40.0-1 ixia-c-traffic-engine 1.8.0.245 keng-app-usage-reporter 0.0.1-52 ixia-c-protocol-engine 1.00.0.482 keng-layer23-hw-server 1.40.0-2 keng-operator 0.3.34 otg-gnmi-server 1.40.0 ixia-c-one 1.40.0-1 UHD400 1.5.8"},{"location":"releases/#release-featuress_1","title":"Release Features(s):","text":"<ul> <li> <p>Ixia Chassis &amp; Appliances(Novus, AresOne): Support added for <code>LACP</code> header in flow. details <pre><code>    f1Eth := flow.Packet().Add().Ethernet()\n    f1Eth.Src().SetValue(\"00:00:00:00:00:AA\")\n    f1Eth.Dst().SetValue(\"01:80:C2:00:00:02\")\n\n    f1Lacp := flow.Packet().Add().Lacp()\n    f1Lacpdu := f1Lacp.Lacpdu()\n\n    f1LacpActor := f1Lacpdu.Actor()\n    f1LacpActor.SystemPriority().SetValue(32768)\n    f1LacpActor.SystemId().SetValue(\"00:00:00:00:00:AA\")\n    f1LacpActor.Key().SetValue(13)\n    f1LacpActor.PortPriority().SetValue(32768)\n    f1LacpActor.PortNumber().SetValue(25)\n    f1LacpActor.ActorState().Activity.SetValue(1)\n    f1LacpActor.ActorState().Aggregation.SetValue(1)\n    f1LacpActor.ActorState().Collecting.SetValue(1)\n\n    f1LacpPartner := f1Lacpdu.Partner()\n    f1LacpPartner.SystemPriority().SetValue(32768)\n    f1LacpPartner.SystemId().SetValue(\"00:0c:29:1e:a2:6d\")\n    f1LacpPartner.Key().SetValue(1)\n    f1LacpPartner.PortPriority().SetValue(32768)\n    f1LacpPartner.PortNumber().SetValue(1)\n    f1LacpPartner.PartnerState().Distributing.SetValue(1)  \n</code></pre></p> <p>Note: <code>flows[i].metrics.enable</code> should be set to <code>false</code>, to ensure that instrumentation data is not appended to the <code>LACP</code> PDU being transmitted on the wire.</p> </li> <li> <p>Ixia Chassis &amp; Appliances(Novus, AresOne): Support added for fetching user specified packet slice from captured packets. details <pre><code>    // Capture Slice: get N number of packets starting from Mth packet \n    captureRequest = gosnappi.NewCaptureRequest()\n    captureRequest.SetPortName(\"p1\")\n    captureRequest.Packets().Slice().Initial().SetStart(10).SetCount(50)\n</code></pre></p> </li> </ul>"},{"location":"releases/#bug-fixs_1","title":"Bug Fix(s):","text":"<ul> <li>Ixia-C, UHD400: Issue is fixed where if <code>devices[i].bgp.ipv4/6_interfaces[j].peers[k].capability.route_refresh</code> was explicitly set to <code>false</code>, the IPv6 capability would not be advertised in the BGP Open message, resulting in IPv6 routes not getting installed in this specific scenario.</li> </ul>"},{"location":"releases/#known-issues_1","title":"Known Issues","text":"<ul> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): If <code>keng-layer23-hw-server</code> version is upgraded/downgraded, the ports which will be used from this container must be rebooted once before running the tests.</li> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): <code>StartProtocols</code>/<code>set_control_state.protocol.all.start</code> can get stuck till the time all DHPCv4/v6 clients receive the leased IPv4/v6 addresses from the DHCPv4/v6 server/relay agent. This may result in getting <code>\"context deadline exceeded\"</code> error in the test program.</li> <li>UHD400: Packets will not be transmitted if <code>flows[i].rate.pps</code> is less than 50.</li> <li>UHD400: <code>values</code> for fields in flow packet headers can be created with maximum length of 1000 values. If larger set of values are required for a field which are random, please use <code>random</code> instead of <code>values</code>.</li> <li>Ixia-C: Flow Tx is incremented for flow with tx endpoints as LAG, even if no packets are sent on the wire when all active links of the LAG are down.</li> <li>Ixia-C: The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>Ixia-C: When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets. </li> </ul>"},{"location":"releases/#release-v1350-14","title":"Release  v1.35.0-14","text":"<p>12th September, 2025</p>"},{"location":"releases/#build-details_2","title":"Build Details","text":"Component Version Open Traffic Generator API 1.35.0 snappi 1.35.0 gosnappi 1.35.0 keng-controller 1.35.0-14 ixia-c-traffic-engine 1.8.0.245 keng-app-usage-reporter 0.0.1-52 ixia-c-protocol-engine 1.00.0.466 keng-layer23-hw-server 1.35.0-5 keng-operator 0.3.34 otg-gnmi-server 1.35.0 ixia-c-one 1.35.0-14 UHD400 1.5.8"},{"location":"releases/#release-featuress_2","title":"Release Features(s):","text":"<ul> <li> <p>Ixia-C, Ixia Chassis &amp; Appliances(Novus, AresOne) &amp; UHD400: Support added to set <code>flows[i].packet.payload</code> as <code>fixed</code>, <code>increment_byte</code>, <code>decrement_byte</code>, <code>increment_word</code> &amp; <code>decrement_word</code>. details</p> <pre><code>    flow := config.Flows().Add()\n    f1Payload := flow.Payload()\n    f1Payload.SetFixed(gosnappi.NewFlowPayloadFixed().SetPattern(\"aabbccdd\").SetRepeat(false))\n    //increment Payload\n    f1Payload.IncrementByte()\n    f1Payload.IncrementWord()\n    //Decrement Payload\n    f1Payload.DecrementByte()\n    f1Payload.DecrementWord() \n</code></pre> <p>Note: If <code>flows[i].metrics.enable</code> is set to <code>true</code>, some part of the payload will be overwritten with instrumentation data used for tracking the flow.</p> </li> <li> <p>Ixia Chassis &amp; Appliances(Novus, AresOne): Changes in version compatibility check for IxOS installed on chassis.</p> <ul> <li><code>set_config</code> will now return a deprecation warning, if ports are present in the configuration connected to chassis with IxOS version <code>&lt; 10.00EA</code>. Support for <code>9.xx</code> IxOS versions is planned to be removed in near future.</li> <li>Support is now added for <code>11.10.x</code> and no warnings will be returned any longer when connected to chassis with up-to IxOS version <code>11.10.x</code>.</li> </ul> </li> <li> <p>Ixia-C, Ixia Chassis &amp; Appliances(Novus, AresOne) &amp; UHD400: Support added in <code>keng-controller</code> to store last 10 configurations in compressed format(*.tar.gz) at location <code>~/logs/configs</code> within the container.</p> <ul> <li>Extracted configs will be in <code>*.pb</code> or <code>*pbtxt</code> (if streaming mode is enabled) format.</li> <li>Number of last <code>n</code> configs can be controlled by a commandline option <code>-archive-configs=&lt;count&gt;</code> if default value of 10 configs needs to be overridden.</li> <li>To extract  <code>gosnappi</code>/<code>json</code> config from the extracted config please use the following snippet.     <pre><code>    data, _ := os.ReadFile(\"Set_Config_11_4th_JAN_02_15_27PM_UTC.08265.pb\")\n    pb := otg.Config{}\n    proto.Unmarshal(data, &amp;pb)\n    otgCfg := gosnappi.NewConfig()\n    otgCfg, _ = otgCfg.Unmarshal().FromProto(&amp;pb)\n    jsonCfg, _ := otgCfg.Marshal().ToJson()\n    os.WriteFile(\"config.json\", []byte(jsonCfg), 0644)\n</code></pre></li> </ul> </li> </ul>"},{"location":"releases/#known-issues_2","title":"Known Issues","text":"<ul> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): If <code>keng-layer23-hw-server</code> version is upgraded/downgraded, the ports which will be used from this container must be rebooted once before running the tests.</li> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): <code>StartProtocols</code>/<code>set_control_state.protocol.all.start</code> can get stuck till the time all DHPCv4/v6 clients receive the leased IPv4/v6 addresses from the DHCPv4/v6 server/relay agent. This may result in getting <code>\"context deadline exceeded\"</code> error in the test program.</li> <li>UHD400: Packets will not be transmitted if <code>flows[i].rate.pps</code> is less than 50.</li> <li>UHD400: <code>values</code> for fields in flow packet headers can be created with maximum length of 1000 values. If larger set of values are required for a field which are random, please use <code>random</code> instead of <code>values</code>.</li> <li>Ixia-C: Flow Tx is incremented for flow with tx endpoints as LAG, even if no packets are sent on the wire when all active links of the LAG are down.</li> <li>Ixia-C: The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>Ixia-C: When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets. </li> </ul>"},{"location":"releases/#release-v1340-1-latest","title":"Release  v1.34.0-1 (Latest)","text":"<p>1st September, 2025</p>"},{"location":"releases/#build-details_3","title":"Build Details","text":"Component Version Open Traffic Generator API 1.34.0 snappi 1.34.1 gosnappi 1.34.1 keng-controller 1.34.0-1 ixia-c-traffic-engine 1.8.0.245 keng-app-usage-reporter 0.0.1-52 ixia-c-protocol-engine 1.00.0.465 keng-layer23-hw-server 1.34.0-3 keng-operator 0.3.34 otg-gnmi-server 1.34.0 ixia-c-one 1.34.0-1 UHD400 1.5.8"},{"location":"releases/#release-featuress_3","title":"Release Features(s):","text":"<ul> <li>Ixia-C, Ixia Chassis &amp; Appliances(Novus, AresOne) &amp; UHD400: Support added for ISIS Graceful Restart(both helper &amp; restarting roles) in planned ModeRFC 8706. details<ul> <li>To trigger planned Graceful Restart,     <pre><code>    grAction := gosnappi.NewControlAction()\n\u00a0 \u00a0 isisRestart := grAction.Protocol().Isis().InitiateGracefulRestart()\n\u00a0 \u00a0 isisRestart.SetRouterNames([]string{\"isisRtr\"})\n\u00a0 \u00a0 planned := isisRestart.Planned() \n\u00a0 \u00a0 planned.SetRestartTime(30)\n\u00a0 \u00a0 planned.SetRestartAfter(20)\n\n    if _, err := gosnappi.NewApi().SetControlAction(grAction); err != nil {\n        t.Fatal(err)\n    }\n</code></pre></li> </ul> </li> </ul>"},{"location":"releases/#known-issues_3","title":"Known Issues","text":"<ul> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): If <code>keng-layer23-hw-server</code> version is upgraded/downgraded, the ports which will be used from this container must be rebooted once before running the tests.</li> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): <code>StartProtocols</code>/<code>set_control_state.protocol.all.start</code> can get stuck till the time all DHPCv4/v6 clients receive the leased IPv4/v6 addresses from the DHCPv4/v6 server/relay agent. This may result in getting <code>\"context deadline exceeded\"</code> error in the test program.</li> <li>UHD400: Packets will not be transmitted if <code>flows[i].rate.pps</code> is less than 50.</li> <li>UHD400: <code>values</code> for fields in flow packet headers can be created with maximum length of 1000 values. If larger set of values are required for a field which are random, please use <code>random</code> instead of <code>values</code>.</li> <li>Ixia-C: Flow Tx is incremented for flow with tx endpoints as LAG, even if no packets are sent on the wire when all active links of the LAG are down.</li> <li>Ixia-C: The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>Ixia-C: When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets. </li> </ul>"},{"location":"releases/#release-v1330-34","title":"Release  v1.33.0-34","text":"<p>20th August, 2025</p>"},{"location":"releases/#build-details_4","title":"Build Details","text":"Component Version Open Traffic Generator API 1.33.0 snappi 1.33.4 gosnappi 1.33.4 keng-controller 1.33.0-34 ixia-c-traffic-engine 1.8.0.245 keng-app-usage-reporter 0.0.1-52 ixia-c-protocol-engine 1.00.0.462 keng-layer23-hw-server 1.33.0-11 keng-operator 0.3.34 otg-gnmi-server 1.33.7 ixia-c-one 1.33.0-34 UHD400 1.5.8"},{"location":"releases/#release-featuress_4","title":"Release Features(s):","text":"<ul> <li> <p>Ixia-C, Ixia Chassis &amp; Appliances(Novus, AresOne) &amp; UHD400: Support added for ISIS Graceful Restart(both helper &amp; restarting roles) in Unplanned Mode[RFC 8706]. details</p> <ul> <li>To configure Graceful Restart,     <pre><code>    isisRtr.GracefulRestart().SetHelperMode(true)\n</code></pre></li> <li>To trigger Unplanned Graceful Restart,     <pre><code>    grAction := gosnappi.NewControlAction()\n    isisRestart := grAction.Protocol()\n        .Isis().InitiateRestart()\n    isisRestart.SetRouterNames([]string{\"isisRtr\"})\n        .Unplanned()\n        .SetHoldingTime(30)\n        .SetRestartAfter(20)\n\n    if _, err := gosnappi.NewApi().SetControlAction(grAction); err != nil {\n        t.Fatal(err)\n    }\n</code></pre></li> <li>New metrics exposed in ISIS <code>get_metrics</code> are <code>gr_initiated</code>,<code>gr_succeeded</code>,<code>neighbor_gr_initiated</code>,<code>neighbor_gr_succeeded</code>.</li> <li>New <code>get_states</code> option <code>isis_adjacencies</code> is introduced to access adjacency information per ISIS neighbor including received Graceful Restart TLV.</li> </ul> </li> <li> <p>Ixia-C, Ixia Chassis &amp; Appliances(Novus, AresOne) &amp; UHD400: gNMI support added to fetch <code>gr-initiated</code>,<code>gr-succeeded</code>,<code>neighbor-gr-initiated</code>,<code>neighbor-gr_succeeded</code> and <code>adjacencies</code> for ISIS.     <pre><code>// To fetch ISIS gr-initiated,gr-succeeded,neighbor-gr-initiated,neighbor-gr_succeeded counters\nisis-routers/isis-router[name=*]/state/counters\n\n// To fetch ISIS adjacencies state\nisis-routers/isis-router[name=*]/state/adjacencies/state/adjacencies[neighbor-system-id=*][interface-name=*]/state\n</code></pre></p> <p>Note: <code>featureprofiles</code> users needs to sync to latest otherwise retrieval of OTG ISIS counters/state using gNMI might give incorrect results.</p> </li> <li> <p>Ixia Chassis &amp; Appliances(Novus, AresOne): Version compatibility check added for IxOS installed on chassis.</p> <ul> <li><code>set_config</code> will now return error, if ports are present in the configuration connected to chassis with IxOS version <code>&lt; 9.20EA</code>.</li> <li><code>set_config</code> will now return warning, if ports are present in the configuration connected to chassis with IxOS version <code>&gt; 10.80EA</code>.</li> </ul> </li> <li> <p>Snappi: Support added to set <code>maximum_receive_buffer_size</code>  and <code>chunk_size</code> in <code>MB</code> for gRPC streaming API creation.     <pre><code>    grpc_api = snappi.api(location=\"localhost:40051\",\n                      transport=snappi.Transport.GRPC)\n\n    grpc_api.enable_grpc_streaming = True\n    grpc_api.chunk_size = 2 # 2 MB instead of default 4 MB\n\n    grpc_api.maximum_receive_buffer_size = 10 # 10 MB instead of default 4 MB\n</code></pre>     Note: <code>gosnappi</code> already supports both feature.</p> </li> </ul>"},{"location":"releases/#bug-fixs_2","title":"Bug Fix(s):","text":"<ul> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): Issue is fixed where prefix of \u201c0x\u201d was provided in value or mask fields for capture filter was resulting in incorrect capture filter getting set.</li> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): Issue is fixed where input value &amp; mask for capture filter were not working as expected for some fields which were not byte aligned (example: <code>vlan.cfi</code>).</li> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): Issue is fixed where the value in the capture filter was provided in short form without the leading Zero(s), then value was incorrectly set during filter matching. Example a value of \"1\" was being interpreted as \"0x10\" instead of expected \"0x01\" for a 1-byte field.</li> <li>Ixia-C: Issue is fixed where prefix of \u201c0x\u201d was provided in value or mask fields for capture filter was resulting in runtime error in set_config. </li> <li>Ixia-C: Issue is fixed where capture filter for <code>vlan.protocol</code> field was not working.</li> </ul>"},{"location":"releases/#known-issues_4","title":"Known Issues","text":"<ul> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): If <code>keng-layer23-hw-server</code> version is upgraded/downgraded, the ports which will be used from this container must be rebooted once before running the tests.</li> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): <code>StartProtocols</code>/<code>set_control_state.protocol.all.start</code> can get stuck till the time all DHPCv4/v6 clients receive the leased IPv4/v6 addresses from the DHCPv4/v6 server/relay agent. This may result in getting <code>\"context deadline exceeded\"</code> error in the test program.</li> <li>UHD400: Packets will not be transmitted if <code>flows[i].rate.pps</code> is less than 50.</li> <li>UHD400: <code>values</code> for fields in flow packet headers can be created with maximum length of 1000 values. If larger set of values are required for a field which are random, please use <code>random</code> instead of <code>values</code>.</li> <li>Ixia-C: Flow Tx is incremented for flow with tx endpoints as LAG, even if no packets are sent on the wire when all active links of the LAG are down.</li> <li>Ixia-C: The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>Ixia-C: When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets. </li> </ul>"},{"location":"releases/#release-v1330-1","title":"Release  v1.33.0-1","text":"<p>18th July, 2025</p>"},{"location":"releases/#build-details_5","title":"Build Details","text":"Component Version Open Traffic Generator API 1.33.0 snappi 1.33.0 gosnappi 1.33.0 keng-controller 1.33.0-1 ixia-c-traffic-engine 1.8.0.245 keng-app-usage-reporter 0.0.1-52 ixia-c-protocol-engine 1.00.0.461 keng-layer23-hw-server 1.33.0-3 keng-operator 0.3.34 otg-gnmi-server 1.33.0 ixia-c-one 1.33.0-1 UHD400 1.5.8"},{"location":"releases/#release-featuress_5","title":"Release Features(s):","text":"<ul> <li> <p>Ixia-C &amp; UHD400: Support added for ISIS Graceful Restart(both helper &amp; restarting roles) in Unplanned Mode[RFC 8706]. details</p> <ul> <li>To configure Graceful Restart,     <pre><code>    isisRtr.GracefulRestart().SetHelperMode(true)\n</code></pre></li> <li>To trigger Unplanned Graceful Restart,     <pre><code>    grAction := gosnappi.NewControlAction()\n    isisRestart := grAction.Protocol()\n        .Isis().InitiateRestart()\n    isisRestart.SetRouterNames([]string{\"isisRtr\"})\n        .Unplanned()\n        .SetHoldingTime(30)\n        .SetRestartAfter(20)\n\n    if _, err := gosnappi.NewApi().SetControlAction(grAction); err != nil {\n        t.Fatal(err)\n    }\n</code></pre></li> <li>New metrics exposed in ISIS <code>get_metrics</code> are <code>gr_initiated</code>,<code>gr_succeeded</code>,<code>neighbor_gr_initiated</code>,<code>neighbor_gr_succeeded</code>.</li> <li>New <code>get_states</code> option <code>isis_adjacencies</code> is introduced to access adjacency information per ISIS neighbor including received Graceful Restart TLV.</li> </ul> <p>Note: gNMI support will be available in subsequent sprint.</p> </li> <li> <p>UHD400:Support added for adding/deleting traffic flows without having to restart protocol separately from protocols.</p> <ul> <li>Append Config\u200b <pre><code>    ca := gosnappi.NewConfigAppend()\u200b\n    flow := ca.ConfigAppendList().Add().Flows().Add()\u200b\n    ... // add more flows and associated properties\n    client.AppendConfig(ca)\n</code></pre></li> <li>Delete Config <pre><code>    cd := gosnappi.NewConfigDelete()\u200b\n    flowsToDelete := []string{}\n    flowsToDelete := append(flowsToDelete, flowName)\n    ...\u200b // add list of flow names to be deleted\n    cd.ConfigDeleteList().Add().SetFlows(flowsToDelete)\u200b\n    client.DeleteConfig(cd)\u200b\n</code></pre></li> </ul> </li> </ul>"},{"location":"releases/#bug-fixs_3","title":"Bug Fix(s):","text":"<ul> <li>Ixia-C: Issue is fixed where, if Tx and Rx endpoints of a flow was terminating in different ports of a single multinic pod/container with <code>auto</code> dest mac enabled, intermittently \"error starting tx port ...: unsuccessful Response: MAC address resolution failed for IP...\" was being seen during start transmit despite proper ARP/ND resolution.</li> </ul>"},{"location":"releases/#known-issues_5","title":"Known Issues","text":"<ul> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): If <code>keng-layer23-hw-server</code> version is upgraded/downgraded, the ports which will be used from this container must be rebooted once before running the tests.</li> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): <code>StartProtocols</code>/<code>set_control_state.protocol.all.start</code> can get stuck till the time all DHPCv4/v6 clients receive the leased IPv4/v6 addresses from the DHCPv4/v6 server/relay agent. This may result in getting <code>\"context deadline exceeded\"</code> error in the test program.</li> <li>UHD400: Packets will not be transmitted if <code>flows[i].rate.pps</code> is less than 50.</li> <li>UHD400: <code>values</code> for fields in flow packet headers can be created with maximum length of 1000 values. If larger set of values are required for a field which are random, please use <code>random</code> instead of <code>values</code>.</li> <li>Ixia-C: Flow Tx is incremented for flow with tx endpoints as LAG, even if no packets are sent on the wire when all active links of the LAG are down.</li> <li>Ixia-C: The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>Ixia-C: When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets. </li> </ul>"},{"location":"releases/#release-v1320-1","title":"Release  v1.32.0-1","text":"<p>1st July, 2025</p>"},{"location":"releases/#build-details_6","title":"Build Details","text":"Component Version Open Traffic Generator API 1.32.0 snappi 1.32.0 gosnappi 1.32.0 keng-controller 1.32.0-1 ixia-c-traffic-engine 1.8.0.245 keng-app-usage-reporter 0.0.1-52 ixia-c-protocol-engine 1.00.0.457 keng-layer23-hw-server 1.32.0-1 keng-operator 0.3.34 otg-gnmi-server 1.32.0 ixia-c-one 1.32.0-1 UHD400 1.5.7"},{"location":"releases/#release-featuress_6","title":"Release Features(s):","text":"<ul> <li>Ixia-C, Ixia Chassis &amp; Appliances(Novus, AresOne), UHD400:Support added to enable communication between snappi/gosnappi client and <code>keng-controller</code> in streaming mode.<ul> <li>User needs to enable grpc streaming while creating connection with <code>keng-controller</code>. <pre><code>api := gosnappi.NewApi()\u200b\ngrpcTransport := api.NewGrpcTransport().\u200b\nSetClientConnection(conn).\u200b\nSetRequestTimeout(30 * time.Second)\u200b\ngrpcTransport.SetLocation(addr).EnableGrpcStreaming().SetStreamChunkSize(100)\u200b // max 100 MB per chunk\n</code></pre> Note: <ul> <li>If <code>StreamChunkSize</code> is not explicitly specified in streaming mode, default chunk size of 4 MB will be used.</li> <li>By default client will communicate in non-streaming mode as earlier.</li> </ul> </li> </ul> </li> </ul>"},{"location":"releases/#bug-fixs_4","title":"Bug Fix(s):","text":"<ul> <li>Ixia-C, UHD400: Issue is fixed where, for iBGP sessions, if <code>as-path</code> segments were explicitly specified for a route, the local AS was being incorrectly prepended to the transmitted as-path, resulting in the DUT dropping the route.</li> </ul>"},{"location":"releases/#known-issues_6","title":"Known Issues","text":"<ul> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): If <code>keng-layer23-hw-server</code> version is upgraded/downgraded, the ports which will be used from this container must be rebooted once before running the tests.</li> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): <code>StartProtocols</code>/<code>set_control_state.protocol.all.start</code> can get stuck till the time all DHPCv4/v6 clients receive the leased IPv4/v6 addresses from the DHCPv4/v6 server/relay agent. This may result in getting <code>\"context deadline exceeded\"</code> error in the test program.</li> <li>UHD400: Packets will not be transmitted if <code>flows[i].rate.pps</code> is less than 50.</li> <li>UHD400: <code>values</code> for fields in flow packet headers can be created with maximum length of 1000 values. If larger set of values are required for a field which are random, please use <code>random</code> instead of <code>values</code>.</li> <li>Ixia-C: Flow Tx is incremented for flow with tx endpoints as LAG, even if no packets are sent on the wire when all active links of the LAG are down.</li> <li>Ixia-C: The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>Ixia-C: When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets. </li> </ul>"},{"location":"releases/#release-v1310-6","title":"Release  v1.31.0-6","text":"<p>14th June, 2025</p>"},{"location":"releases/#build-details_7","title":"Build Details","text":"Component Version Open Traffic Generator API 1.31.0 snappi 1.31.0 gosnappi 1.31.0 keng-controller 1.31.0-6 ixia-c-traffic-engine 1.8.0.245 keng-app-usage-reporter 0.0.1-52 ixia-c-protocol-engine 1.00.0.453 keng-layer23-hw-server 1.31.0-4 keng-operator 0.3.34 otg-gnmi-server 1.31.0 ixia-c-one 1.31.0-6 UHD400 1.5.7"},{"location":"releases/#release-featuress_7","title":"Release Features(s):","text":"<ul> <li>Ixia-C:Support added for adding/deleting traffic flows without having to restart protocol separately from protocols.<ul> <li>Append Config\u200b <pre><code>    ca := gosnappi.NewConfigAppend()\u200b\n    flow := ca.ConfigAppendList().Add().Flows().Add()\u200b\n    ... // add more flows and associated properties\n    client.AppendConfig(ca)\n</code></pre></li> <li>Delete Config <pre><code>    cd := gosnappi.NewConfigDelete()\u200b\n    flowsToDelete := []string{}\n    flowsToDelete := append(flowsToDelete, flowName)\n    ...\u200b // add list of flow names to be deleted\n    cd.ConfigDeleteList().Add().SetFlows(flowsToDelete)\u200b\n    client.DeleteConfig(cd)\u200b\n</code></pre></li> </ul> </li> </ul>"},{"location":"releases/#known-issues_7","title":"Known Issues","text":"<ul> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): If <code>keng-layer23-hw-server</code> version is upgraded/downgraded, the ports which will be used from this container must be rebooted once before running the tests.</li> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): <code>StartProtocols</code>/<code>set_control_state.protocol.all.start</code> can get stuck till the time all DHPCv4/v6 clients receive the leased IPv4/v6 addresses from the DHCPv4/v6 server/relay agent. This may result in getting <code>\"context deadline exceeded\"</code> error in the test program.</li> <li>UHD400: Packets will not be transmitted if <code>flows[i].rate.pps</code> is less than 50.</li> <li>UHD400: <code>values</code> for fields in flow packet headers can be created with maximum length of 1000 values. If larger set of values are required for a field which are random, please use <code>random</code> instead of <code>values</code>.</li> <li>Ixia-C: Flow Tx is incremented for flow with tx endpoints as LAG, even if no packets are sent on the wire when all active links of the LAG are down.</li> <li>Ixia-C: The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>Ixia-C: When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets. </li> </ul>"},{"location":"releases/#release-v1310-3","title":"Release  v1.31.0-3","text":"<p>2nd June, 2025</p>"},{"location":"releases/#build-details_8","title":"Build Details","text":"Component Version Open Traffic Generator API 1.31.0 snappi 1.31.0 gosnappi 1.31.0 keng-controller 1.31.0-3 ixia-c-traffic-engine 1.8.0.245 keng-app-usage-reporter 0.0.1-52 ixia-c-protocol-engine 1.00.0.453 keng-layer23-hw-server 1.31.0-3 keng-operator 0.3.34 otg-gnmi-server 1.31.0 ixia-c-one 1.31.0-3 UHD400 1.5.7"},{"location":"releases/#release-featuress_8","title":"Release Features(s):","text":"<ul> <li>Ixia Chassis &amp; Appliances(Novus, AresOne):Support added for adding/deleting traffic flows without having to restart protocol separately from protocols.<ul> <li>Append Config\u200b <pre><code>    ca := gosnappi.NewConfigAppend()\u200b\n    flow := ca.ConfigAppendList().Add().Flows().Add()\u200b\n    ... // add more flows and associated properties\n    client.AppendConfig(ca)\n</code></pre></li> <li>Delete Config <pre><code>    cd := gosnappi.NewConfigDelete()\u200b\n    flowsToDelete := []string{}\n    flowsToDelete := append(flowsToDelete, flowName)\n    ...\u200b // add list of flow names to be deleted\n    cd.ConfigDeleteList().Add().SetFlows(flowsToDelete)\u200b\n    client.DeleteConfig(cd)\u200b\n</code></pre></li> </ul> </li> </ul>"},{"location":"releases/#bug-fixs_5","title":"Bug Fix(s):","text":"<ul> <li>Ixia-C, UHD400: Issue is fixed where multi-port LAG/LACP configurations would result in context deadline failures for  <code>set_config</code> API and rapid memory consumption increase for the protocol-engine container in the test pod. This would also result in huge amount of logs to be generated causing docker logs output to be overwritten.</li> <li>Ixia-C, UHD400: Issue is fixed where <code>set_control_state.protocol.all.state=start</code> was failing for LLDP in multinic port setup with error similar to \"Protocol service for port \\\"port2\\\" is not registered\".</li> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): Issue is fixed where <code>set_control_state.traffic.flow_transmit.state=stop</code> was resulting in the flow not getting stopped properly when flow names containing \".\" were explicitly specified.</li> </ul>"},{"location":"releases/#known-issues_8","title":"Known Issues","text":"<ul> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): If <code>keng-layer23-hw-server</code> version is upgraded/downgraded, the ports which will be used from this container must be rebooted once before running the tests.</li> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): <code>StartProtocols</code>/<code>set_control_state.protocol.all.start</code> can get stuck till the time all DHPCv4/v6 clients receive the leased IPv4/v6 addresses from the DHCPv4/v6 server/relay agent. This may result in getting <code>\"context deadline exceeded\"</code> error in the test program.</li> <li>UHD400: Packets will not be transmitted if <code>flows[i].rate.pps</code> is less than 50.</li> <li>UHD400: <code>values</code> for fields in flow packet headers can be created with maximum length of 1000 values. If larger set of values are required for a field which are random, please use <code>random</code> instead of <code>values</code>.</li> <li>Ixia-C: Flow Tx is incremented for flow with tx endpoints as LAG, even if no packets are sent on the wire when all active links of the LAG are down.</li> <li>Ixia-C: The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>Ixia-C: When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets.</li> </ul>"},{"location":"releases/#release-v1280-45","title":"Release  v1.28.0-45","text":"<p>19th May, 2025</p>"},{"location":"releases/#build-details_9","title":"Build Details","text":"Component Version Open Traffic Generator API 1.28.0 snappi 1.28.2 gosnappi 1.28.2 keng-controller 1.28.0-45 ixia-c-traffic-engine 1.8.0.245 keng-app-usage-reporter 0.0.1-52 ixia-c-protocol-engine 1.00.0.450 keng-layer23-hw-server 1.28.0-14 keng-operator 0.3.34 otg-gnmi-server 1.28.4 ixia-c-one 1.28.0-45 UHD400 1.5.7"},{"location":"releases/#note","title":"Note:","text":"<p>Users of <code>featureprofiles</code> must update to latest where <code>ondatra</code> is updated to <code>v0.9.1</code>, otherwise erroneous behavior is possible when fetching flow stats using gNMI due to addition of <code>in/out-l1-rate</code>.</p>"},{"location":"releases/#release-featuress_9","title":"Release Features(s):","text":"<ul> <li>Ixia-C, Ixia Chassis &amp; Appliances(Novus, AresOne), UHD400:Support added for ISIS Simulated Topology Secondary Link.     <pre><code>    ethernet.Connection().SimulatedLink().\u200b\n        SetLinkType(gosnappi.EthernetSimulatedLinkLinkType.SECONDARY).\u200b\n        SetRemoteSimulatedLink(remoteSecondaryEthName)\u200b\n</code></pre><ul> <li>Please refer to previous release note for more details on Simulated link configuration.</li> </ul> </li> <li>UHD400: Egress tracking is now supported for MPLS inner header fields when encapsulated inside UDP/TCP.   <pre><code>    //egress tracking\n    f1.EgressPacket().Add().Ethernet()\n    f1.EgressPacket().Add().Ipv4()\n    f1.EgressPacket().Add().Udp()\n    f1.EgressPacket().Add().Mpls()\n    mplsLabelTracking := f1.EgressPacket().Add().Mpls()\n    tr1 := mplsLabelTracking.Label().MetricTags().Add()\n    tr1.SetName(\"MplsLabelEgressTracking\")\n    tr1.SetOffset(17)\n    tr1.SetLength(3)\n</code></pre></li> <li>Ixia-C: gNMI support added for <code>tx/rx_rate_bps</code> in <code>flow_metrics</code>.     <pre><code>    # flow Tx rate in bits per second\n    flows/flow[name=*]/state/out-rate\n\n    # flow Rx rate in bits per second\n    flows/flow[name=*]/state/in-rate\n</code></pre></li> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): gNMI support added for <code>tx/rx_l1_rate_bps</code> in <code>flow_metrics</code>.     <pre><code>    # flow Tx L1 rate in bits per second\n    flows/flow[name=*]/state/out-l1-rate\n\n    # flow L1 Rx rate in bits per second\n    flows/flow[name=*]/state/in-l1-rate\n</code></pre></li> </ul>"},{"location":"releases/#known-issues_9","title":"Known Issues","text":"<ul> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): If <code>keng-layer23-hw-server</code> version is upgraded/downgraded, the ports which will be used from this container must be rebooted once before running the tests.</li> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): <code>StartProtocols</code>/<code>set_control_state.protocol.all.start</code> can get stuck till the time all DHPCv4/v6 clients receive the leased IPv4/v6 addresses from the DHCPv4/v6 server/relay agent. This may result in getting <code>\"context deadline exceeded\"</code> error in the test program.</li> <li>UHD400: Packets will not be transmitted if <code>flows[i].rate.pps</code> is less than 50.</li> <li>UHD400: <code>values</code> for fields in flow packet headers can be created with maximum length of 1000 values. If larger set of values are required for a field which are random, please use <code>random</code> instead of <code>values</code>.</li> <li>Ixia-C: Flow Tx is incremented for flow with tx endpoints as LAG, even if no packets are sent on the wire when all active links of the LAG are down.</li> <li>Ixia-C: The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>Ixia-C: When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets. </li> </ul>"},{"location":"releases/#release-v1280-33","title":"Release  v1.28.0-33","text":"<p>7th May, 2025</p>"},{"location":"releases/#build-details_10","title":"Build Details","text":"Component Version Open Traffic Generator API 1.28.0 snappi 1.28.2 gosnappi 1.28.2 keng-controller 1.28.0-33 ixia-c-traffic-engine 1.8.0.245 keng-app-usage-reporter 0.0.1-52 ixia-c-protocol-engine 1.00.0.448 keng-layer23-hw-server 1.28.0-10 keng-operator 0.3.34 otg-gnmi-server 1.28.3 ixia-c-one 1.28.0-33 UHD400 1.5.6"},{"location":"releases/#release-featuress_10","title":"Release Features(s):","text":"<ul> <li> <p>Ixia Chassis &amp; Appliances(Novus, AresOne): Support added for <code>tx/rx_rate_bps</code> in <code>flow_metrics</code>.</p> <pre><code>    # flow Tx rate in bits per second\n    flows/flow[name=*]/state/out-rate\n\n    # flow Rx rate in bits per second\n    flows/flow[name=*]/state/in-rate\n</code></pre> </li> <li> <p>Ixia Chassis &amp; Appliances(Novus, AresOne): Support added for <code>tx/rx_l1_rate_bps</code> in <code>flow_metrics</code>.     Note: This is not yet supported while fetching flow metrics using gNMI.</p> </li> <li> <p>UHD400:Support added for single MPLS header in flows [Segment Routing, Static MPLS &amp; MPLSoUDPoIPv4].     <pre><code>    f1Eth := f1.Packet().Add().Ethernet()\u200b\n    ...\u200b\n    f1Mpls := f1.Packet().Add().Mpls()\u200b\n    f1Mpls.Label().SetValue(100)\u200b\u200b\u200b\n</code></pre>     Notes:         1. UDP checksum is always zero which can result in failure for UDP over IPv6 tunneling use-cases.         2. TCP checksum is always zero which can result in failure for tunneling use-cases.         3. Egress Tracking on MPLS label header is not supported.</p> </li> </ul>"},{"location":"releases/#bug-fixs_6","title":"Bug Fix(s)","text":"<ul> <li>Ixia-C: Issue is fixed where MPLS over GRE in flows was resulting in malformed packets to be transmitted.</li> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): Issue is fixed where OSPFv2 DB Descriptor PDUs were carrying MTU value as zero resulting OSPFv2 sessions to be stuck in ExStart state with certain DUTs.</li> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): Issue is fixed where flow transmit state wouldn't move to <code>stopped</code> unless <code>flow_transmit.stop</code> was explicitly executed for fixed duration flows.</li> </ul>"},{"location":"releases/#known-issues_10","title":"Known Issues","text":"<ul> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): If <code>keng-layer23-hw-server</code> version is upgraded/downgraded, the ports which will be used from this container must be rebooted once before running the tests.</li> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): <code>StartProtocols</code>/<code>set_control_state.protocol.all.start</code> can get stuck till the time all DHPCv4/v6 clients receive the leased IPv4/v6 addresses from the DHCPv4/v6 server/relay agent. This may result in getting <code>\"context deadline exceeded\"</code> error in the test program.</li> <li>UHD400: Packets will not be transmitted if <code>flows[i].rate.pps</code> is less than 50.</li> <li>UHD400: <code>values</code> for fields in flow packet headers can be created with maximum length of 1000 values. If larger set of values are required for a field which are random, please use <code>random</code> instead of <code>values</code>.</li> <li>Ixia-C: Flow Tx is incremented for flow with tx endpoints as LAG, even if no packets are sent on the wire when all active links of the LAG are down.</li> <li>Ixia-C: The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>Ixia-C: When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets. </li> </ul>"},{"location":"releases/#release-v1280-6","title":"Release  v1.28.0-6","text":"<p>18th April, 2025</p>"},{"location":"releases/#build-details_11","title":"Build Details","text":"Component Version Open Traffic Generator API 1.28.0 snappi 1.28.2 gosnappi 1.28.2 keng-controller 1.28.0-6 ixia-c-traffic-engine 1.8.0.245 keng-app-usage-reporter 0.0.1-52 ixia-c-protocol-engine 1.00.0.448 keng-layer23-hw-server 1.28.0-6 keng-operator 0.3.34 otg-gnmi-server 1.28.2 ixia-c-one 1.28.0-6 UHD400 1.5.5"},{"location":"releases/#release-featuress_11","title":"Release Features(s):","text":"<ul> <li> <p>Ixia Chassis &amp; Appliances(Novus, AresOne): Support added for OSPFv3. details</p> <p><pre><code>    ospfv3Router := device1.Ospfv3()\n    ospfv3Router.RouterId().SetCustom(\"1.1.1.1\")\n\n    ospfv3RouterInstance := ospfv3Router.Instances().Add().\n            SetName(\"Ospfv3RtrInstance\").\n            SetStoreLsa(true)\n\n    intf := ospfv3RouterInstance.Interfaces().Add().\n                    SetName(\"Ospfv3Intf\").\n                    SetIpv6Name(\"Ipv6Intf1\")\n    intf.Area().SetId(0)\n    intf.NetworkType().PointToPoint()\n\n    ospfv3Route := ospfv3RouterInstance.V6Routes().\n                            Add().\n                            SetName(\"Ospfv3Route1\")\n    ospfv3Route.\n            Addresses().\n            Add().\n            SetAddress(\"11::1\").\n            SetPrefix(64).\n            SetCount(100).\n            SetStep(2)\n</code></pre> - OSPFv3 Learned LSAs can be fetched by the following. <pre><code>    req := gosnappi.NewStatesRequest()\n    req.Ospfv3Lsas().SetRouterNames(routerNames)\n    res, err := client.GetStates(req)\n</code></pre> - OSPFv3 metrics can be fetched by the following. <pre><code>    req := gosnappi.NewMetricsRequest()\n    reqOspf := req.Ospfv3()\n    reqOspf.SetRouterNames(routerNames)\n</code></pre> * UHD400, Ixia Chassis &amp; Appliances(Novus, AresOne):Support added for start/stop on specific flows. <pre><code>    cs := gosnappi.NewControlState()\u200b\n    cs.Traffic().FlowTransmit().\n        SetState(gosnappi.StateTrafficFlowTransmitState.START/STOP).\n        SetFlowNames([]string{flow1, flow2 .. flowN})\u200b\n</code></pre> * Ixia-C, UHD400, Ixia Chassis &amp; Appliances(Novus, AresOne): Support added for configuring flows to be transmitted for a fixed duration. <pre><code>    flow := config.Flows().Add()\n    flow.Duration().FixedSeconds().SetSeconds(5)\n</code></pre> * Ixia Chassis &amp; Appliances(Novus, AresOne), UHD400: gNMI support added to retrieve some new ISIS TLVs related to ISIS segment routing. More Details   - router-capabilities TLV   - adjacency-sid sub TLVs in extended-is-reachability   - prefix-sid sub TLVs in extended-ipv4-reachability   - prefix-sid sub TLVs in ipv6-reachability</p> </li> </ul> <p><pre><code>    isis-routers/isis-router[name=*]/state/link-state-database\n</code></pre>   Note: Please update featureprofiles/ondatra to latest if the setup is upgraded to this build, otherwise gnmi failures might be seen while fetching isis link-state-database. * snappi: Support is added for <code>grpcio</code> &lt;= 1.59.5 [earlier supported till &lt;=1.59.0].   Note: As of now, we are unable to upgrade to higher version of <code>grpcio</code> to continue providing support for python versions 3.6 and 3.7.</p>"},{"location":"releases/#bug-fixs_7","title":"Bug Fix(s)","text":"<ul> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): Issue is fixed where ISIS <code>get_states</code> was returning only one set of learned LSPs for L1+L2 LSP advertisements.</li> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): Issue is fixed where for certain scenarios <code>flow_metrics.bytes_tx</code> was returning incorrect values[same as <code>bytes_rx</code>].</li> <li>Ixia-C: Issue is fixed where the protocol-engine container would restart in certain scenarios, especially when run in bare metal setups with a large number of cores in multi-nic mode, and the test would be run immediately or within a short interval after the container/topology had come up.</li> </ul>"},{"location":"releases/#known-issues_11","title":"Known Issues","text":"<ul> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): If <code>keng-layer23-hw-server</code> version is upgraded/downgraded, the ports which will be used from this container must be rebooted once before running the tests.</li> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): <code>StartProtocols</code>/<code>set_control_state.protocol.all.start</code> can get stuck till the time all DHPCv4/v6 clients receive the leased IPv4/v6 addresses from the DHCPv4/v6 server/relay agent. This may result in getting <code>\"context deadline exceeded\"</code> error in the test program.</li> <li>UHD400: Packets will not be transmitted if <code>flows[i].rate.pps</code> is less than 50.</li> <li>UHD400: <code>values</code> for fields in flow packet headers can be created with maximum length of 1000 values. If larger set of values are required for a field which are random, please use <code>random</code> instead of <code>values</code>.</li> <li>Ixia-C: Flow Tx is incremented for flow with tx endpoints as LAG, even if no packets are sent on the wire when all active links of the LAG are down.</li> <li>Ixia-C: The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>Ixia-C: When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets.</li> </ul>"},{"location":"releases/#release-v1240-15","title":"Release  v1.24.0-15","text":"<p>29th March, 2025</p>"},{"location":"releases/#build-details_12","title":"Build Details","text":"Component Version Open Traffic Generator API 1.24.0 snappi 1.24.0 gosnappi 1.24.0 keng-controller 1.24.0-15 ixia-c-traffic-engine 1.8.0.245 keng-app-usage-reporter 0.0.1-52 ixia-c-protocol-engine 1.00.0.443 keng-layer23-hw-server 1.24.0-5 keng-operator 0.3.34 otg-gnmi-server 1.24.2 ixia-c-one 1.24.0-15 UHD400 1.5.5"},{"location":"releases/#release-featuress_12","title":"Release Features(s):","text":"<ul> <li> <p>Ixia-C, UHD400, Ixia Chassis &amp; Appliances(Novus, AresOne): Support added for ISIS Segment Routing for  Emulated and Simulated ISIS Routers.</p> <ul> <li>To configure Router Capability with Segment Routing in <code>devices[i].isis.segment_routing.router_capability</code> use the following snippet. <pre><code>    srCap := rtrCap.SrCapability()\u200b\n    srCap.Flags().SetIpv4Mpls(true).SetIpv6Mpls(true)\u200b\n    srCap.SrgbRanges().Add().SetStartingSid(uint32(srStartingSid)).SetRange(uint32(srRange))\u200b\n</code></pre></li> <li>To configure routes with Node-SID or Prefix-SID under <code>devices[i].isis.v4/6_routes[j].prefix_sids[0]</code> use the following snippet. <pre><code>    isisV4Route.PrefixSids().Add().\u200b\n        SetSidIndex(sidOffset).\u200b\n        SetRFlag(true).\u200b\n        SetNFlag(true).\u200b\n        SetPFlag(true).\u200b\n        SetAlgorithm(1)\u200b\n</code></pre></li> <li>To configure Adjacency-SID under <code>devices[i].isis.interfaces[0].adjacency_sids[j]</code> use the following snippet. <pre><code>    isisInterface.AdjacencySids().Add().\u200b\n        SetSidIndex(sidOffset).\u200b\n        SetPFlag(true).\n        SetWeight(10)\u200b\n</code></pre></li> <li> <p>To configure traffic using Segment Routing MPLS Labels use the following snippet. <pre><code>    eth := flow.Packet().Add().Ethernet()\u200b\n    eth.Src().SetValue(ethIntf.Mac())\u200b\n    eth.Dst().Auto()\u200b\n    mpls := flow.Packet().Add().Mpls()\u200b\n    mpls.Label().SetValue(uint32(900010))\u200b // Set the Segment Routing MPLS Label to which traffic has to be steered.\u200b\n</code></pre> Note: MPLS headers in flows is not yet supported for UHD400.</p> </li> <li> <p>To configure ISIS on simulated routers, please refer to previous release notes.</p> </li> </ul> </li> <li> <p>UHD400: Support added to send flows over DHCPv4/6 endpoints.   <pre><code>  clientToServerFlow := config.Flows().Add()\n  clientToServerFlow.SetName(flowName).\n    TxRx().Device().\n    SetTxNames([]string{\"p1d1dhcpv4_1\"}).\n    SetRxNames([]string{\"p2d1ipv4\"})\n  clientToServerFlowIp := f1.Packet().Add().Ipv4()\n  // will be populated automatically by the DHCP Client with the the dynamically allocated IP.\n  clientToServerFlowIp.Src().Auto().Dhcp()\n  \u2026\n  // will be populated automatically by the DHCP Server with the the dynamically allocated IP to DHCP client \n  serverToClientFlowIp.Dst().Auto().Dhcp()\n</code></pre></p> </li> <li> <p>Ixia-C, UHD400, Ixia Chassis &amp; Appliances(Novus, AresOne): Support added in RSVP-TE Egress emulation to automatically respond to a Path message with Label Recording Desired flag set in Session Attribute with a RRO in the Resv message with corresponding Label Sub Object included.  </p> <ul> <li>User needs to set the following flag <code>devices[i].rsvp.lsp_ipv4_interfaces[j].p2p_ingress_ipv4_lsps[k].session_attribute.label_recording_desired</code>.</li> </ul> </li> </ul>"},{"location":"releases/#bug-fixs_8","title":"Bug Fix(s)","text":"<ul> <li>UHD400: Issue is fixed non default VLAN wiring was not working properly, resulting in ARP/ND failures.</li> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): Issue is fixed where Label Sub Objects were not being returned correctly for RSVP-TE learned information (<code>rsvp_lsps[i].rros[k].reported_label</code>) </li> <li>Ixia-C, UHD400: Issue is fixed where fetching ISIS learned information containing LSPs with Router Capability without any Segment Routing Sub TLV would result in an error \"grpc: failed to unmarshal the received message: proto: cannot parse invalid wire-format data\" in certain conditions.</li> </ul>"},{"location":"releases/#known-issues_12","title":"Known Issues","text":"<ul> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): If <code>keng-layer23-hw-server</code> version is upgraded/downgraded, the ports which will be used from this container must be rebooted once before running the tests.</li> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): <code>StartProtocols</code>/<code>set_control_state.protocol.all.start</code> can get stuck till the time all DHPCv4/v6 clients receive the leased IPv4/v6 addresses from the DHCPv4/v6 server/relay agent. This may result in getting <code>\"context deadline exceeded\"</code> error in the test program.</li> <li>UHD400: Packets will not be transmitted if <code>flows[i].rate.pps</code> is less than 50.</li> <li>UHD400: <code>values</code> for fields in flow packet headers can be created with maximum length of 1000 values. If larger set of values are required for a field which are random, please use <code>random</code> instead of <code>values</code>.</li> <li>Ixia-C: Flow Tx is incremented for flow with tx endpoints as LAG, even if no packets are sent on the wire when all active links of the LAG are down.</li> <li>Ixia-C: The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>Ixia-C: When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets. </li> </ul>"},{"location":"releases/#release-v1240-4","title":"Release  v1.24.0-4","text":"<p>7th March, 2025</p>"},{"location":"releases/#build-details_13","title":"Build Details","text":"Component Version Open Traffic Generator API 1.24.0 snappi 1.24.0 gosnappi 1.24.0 keng-controller 1.24.0-4 ixia-c-traffic-engine 1.8.0.245 keng-app-usage-reporter 0.0.1-52 ixia-c-protocol-engine 1.00.0.438 keng-layer23-hw-server 1.24.0-1 keng-operator 0.3.34 otg-gnmi-server 1.24.2 ixia-c-one 1.24.0-4 UHD400 1.5.3"},{"location":"releases/#release-featuress_13","title":"Release Features(s):","text":"<ul> <li> <p>Ixia-C &amp; UHD400: Support added for ISIS Simulated Topology. More Details</p> </li> <li> <p>Configuration for ISIS attributes for newly introduced simulated routers are identical to configuration for currently supported directly connected emulated routers.</p> </li> <li><code>devices[i].ethernets[j].connection.simulated_link</code> is introduced to create a simulated ethernet connection to build a Simulated Topology.</li> </ul> <pre><code>  simulatedRouterEthernet := simulatedRouter.Ethernets().Add().\n              SetName(\"simRtrEth\").\n              SetMac(\"00:00:11:02:02:02\")\n  simulatedRouterEthernet.Connection().SimulatedLink().SetRemoteSimulatedLink(\"connRtrSimEth\")\n\n  connectedRouterSimulatedEthernet := connectedRouter.Ethernets().Add().\n              SetName(\"connRtrSimEth\").\n              SetMac(\"00:00:01:01:01:01\")\n  connectedRouterSimulatedEthernet.Connection().SimulatedLink().SetRemoteSimulatedLink(\"simRtrEth\")\n</code></pre> <ul> <li>BGP/BGP+/RSVP-TE can also be configured on loopback interfaces on the simulated devices.     Note: <code>get_metrics/states</code> APIs are only applicable for the connected emulated routers and not for the simulated routers.</li> <li> <p>Ixia-C &amp; UHD400: Support added for ISIS Segment Routing for emulated ISIS routers.</p> </li> <li> <p>To configure Router Capability with Segment Routing in <code>devices[i].isis.segment_routing.router_capability</code> use the following snippet.</p> </li> </ul> <pre><code>    srCap := rtrCap.SrCapability()\n    srCap.Flags().SetIpv4Mpls(true).SetIpv6Mpls(true)\n    srCap.SrgbRanges().Add().SetStartingSid(uint32(srStartingSid)).SetRange(uint32(srRange))\n</code></pre> <ul> <li>To configure routes with Node-SID or Prefix-SID under <code>devices[i].isis.v4/6_routes[j].prefix_sids[0]</code> use the following snippet.</li> </ul> <pre><code>    isisV4Route.PrefixSids().Add().\n        SetSidIndex(sidOffset).\n        SetRFlag(true).\n        SetNFlag(true).\n        SetPFlag(true).\n        SetAlgorithm(1)\n</code></pre> <ul> <li>To configure Adjacency-SID under <code>devices[i].isis.interfaces[0].adjacency_sids[j]</code> use the following snippet.</li> </ul> <pre><code>    isisInterface.AdjacencySids().Add().\n        SetSidIndex(sidOffset).\n        SetPFlag(true).\n        SetWeight(10)\n</code></pre> <ul> <li>To configure traffic using Segment Routing MPLS Labels use the following snippet.</li> </ul> <pre><code>    eth := flow.Packet().Add().Ethernet()\n    eth.Src().SetValue(ethIntf.Mac())\n    eth.Dst().Auto()\n    mpls := flow.Packet().Add().Mpls()\n    mpls.Label().SetValue(uint32(900010)) // Use the Segment Routing MPLS Label to which traffic has to be steered.\n</code></pre> <p>Note: MPLS headers in flows is not yet supported for UHD400. * Ixia Chassis &amp; Appliances(Novus, AresOne), UHD400: gNMI support added to retrieve timestamp of the last link state change event of the test port. More Details</p> <p><pre><code>    ports/port[name=*]/state/last-change\n</code></pre>   Note: Please update featureprofiles/ondatra to latest if the setup is upgraded to this build, otherwise gnmi failures might be seen while fetching port metrics.</p>"},{"location":"releases/#bug-fixs_9","title":"Bug Fix(s)","text":"<ul> <li>Ixia-C &amp; UHD400:  Issue is fixed where DHCPv6 was intermittently crashing on stop.</li> </ul>"},{"location":"releases/#known-issues_13","title":"Known Issues","text":"<ul> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): If <code>keng-layer23-hw-server</code> version is upgraded/downgraded, the ports which will be used from this container must be rebooted once before running the tests.</li> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): <code>StartProtocols</code>/<code>set_control_state.protocol.all.start</code> can get stuck till the time all DHPCv4/v6 clients receive the leased IPv4/v6 addresses from the DHCPv4/v6 server/relay agent. This may result in getting <code>\"context deadline exceeded\"</code> error in the test program.</li> <li>UHD400: Non default virtual wiring configuration can result in ARP failures and traffic loss due to dropped packets on the rx path.</li> <li>UHD400: Packets will not be transmitted if <code>flows[i].rate.pps</code> is less than 50.</li> <li>UHD400: <code>values</code> for fields in flow packet headers can be created with maximum length of 1000 values. If larger set of values are required for a field which are random, please use <code>random</code> instead of <code>values</code>.</li> <li>Ixia-C: Flow Tx is incremented for flow with tx endpoints as LAG, even if no packets are sent on the wire when all active links of the LAG are down.</li> <li>Ixia-C: Supported value for <code>flows[i].metrics.latency.mode</code> is <code>cut_through</code>.</li> <li>Ixia-C: The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>Ixia-C: When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets.</li> </ul>"},{"location":"releases/#release-v1200-8","title":"Release  v1.20.0-8","text":"<p>26th February, 2025</p>"},{"location":"releases/#build-details_14","title":"Build Details","text":"Component Version Open Traffic Generator API 1.20.0 snappi 1.20.0 gosnappi 1.20.0 keng-controller 1.20.0-8 ixia-c-traffic-engine 1.8.0.245 keng-app-usage-reporter 0.0.1-52 ixia-c-protocol-engine 1.00.0.431 keng-layer23-hw-server 1.20.0-2 keng-operator 0.3.34 otg-gnmi-server 1.20.2 ixia-c-one 1.20.0-8 UHD400 1.5.3"},{"location":"releases/#bug-fixs_10","title":"Bug Fix(s)","text":"<ul> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): Issue is fixed where on running a test with a large number of <code>replay_updates</code> multiple times would cause a PCPU out of memory crash, resulting in <code>&lt;i&gt;</code>\"context deadline\"<code>&lt;/i&gt;</code> error on <code>set_config</code> or <code>set_control_state.protocol.start</code>.</li> </ul>"},{"location":"releases/#known-issues_14","title":"Known Issues","text":"<ul> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): If <code>keng-layer23-hw-server</code> version is upgraded/downgraded, the ports which will be used from this container must be rebooted once before running the tests.</li> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): <code>StartProtocols</code>/<code>set_control_state.protocol.all.start</code> can get stuck till the time all DHPCv4/v6 clients receive the leased IPv4/v6 addresses from the DHCPv4/v6 server/relay agent. This may result in getting <code>\"context deadline exceeded\"</code> error in the test program.</li> <li>UHD400: Non default virtual wiring configuration can result in ARP failures and traffic loss due to dropped packets on the rx path.</li> <li>UHD400: Packets will not be transmitted if <code>flows[i].rate.pps</code> is less than 50.</li> <li>UHD400: <code>values</code> for fields in flow packet headers can be created with maximum length of 1000 values. If larger set of values are required for a field which are random, please use <code>random</code> instead of <code>values</code>.</li> <li>Ixia-C: Flow Tx is incremented for flow with tx endpoints as LAG, even if no packets are sent on the wire when all active links of the LAG are down.</li> <li>Ixia-C: Supported value for <code>flows[i].metrics.latency.mode</code> is <code>cut_through</code>.</li> <li>Ixia-C: The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>Ixia-C: When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets.</li> </ul>"},{"location":"releases/#release-v1200-6","title":"Release  v1.20.0-6","text":"<p>11th February, 2025</p>"},{"location":"releases/#build-details_15","title":"Build Details","text":"Component Version Open Traffic Generator API 1.20.0 snappi 1.20.0 gosnappi 1.20.0 keng-controller 1.20.0-6 ixia-c-traffic-engine 1.8.0.245 keng-app-usage-reporter 0.0.1-52 ixia-c-protocol-engine 1.00.0.431 keng-layer23-hw-server 1.20.0-1 keng-operator 0.3.34 otg-gnmi-server 1.20.2 ixia-c-one 1.20.0-6 UHD400 1.5.3"},{"location":"releases/#release-featuress_14","title":"Release Features(s)","text":"<ul> <li>UHD400: Support added to retrieve timestamp of the last link state change event of the test port. More Details</li> <li> <p>This can be retrieved by accessing <code>port_metrics[i].last_change</code>.</p> <p>Note:</p> <ul> <li>Test ports and DUT must be time synced to the same time source if link state change timestamps need to be co-related.</li> </ul> </li> </ul>"},{"location":"releases/#bug-fixs_11","title":"Bug Fix(s)","text":"<ul> <li>Ixia-C &amp; UHD400: For certain asymmetric configurations of BGPv4/v6 <code>replay_updates</code> with a large number of updates, <code>set_config</code> or <code>set_control_state.protocol.start</code> would result in the protocol-engine container to get stuck and ultimately result in <code>context_deadline_exceeded</code> error and subsequent actions to not return a response. This issue is fixed.</li> </ul>"},{"location":"releases/#known-issues_15","title":"Known Issues","text":"<ul> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): If <code>keng-layer23-hw-server</code> version is upgraded/downgraded, the ports which will be used from this container must be rebooted once before running the tests.</li> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): <code>StartProtocols</code>/<code>set_control_state.protocol.all.start</code> can get stuck till the time all DHPCv4/v6 clients receive the leased IPv4/v6 addresses from the DHCPv4/v6 server/relay agent. This may result in getting <code>\"context deadline exceeded\"</code> error in the test program.</li> <li>UHD400: Packets will not be transmitted if <code>flows[i].rate.pps</code> is less than 50.</li> <li>UHD400: <code>values</code> for fields in flow packet headers can be created with maximum length of 1000 values. If larger set of values are required for a field which are random, please use <code>random</code> instead of <code>values</code>.</li> <li>Ixia-C: Flow Tx is incremented for flow with tx endpoints as LAG, even if no packets are sent on the wire when all active links of the LAG are down.</li> <li>Ixia-C: Supported value for <code>flows[i].metrics.latency.mode</code> is <code>cut_through</code>.</li> <li>Ixia-C: The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>Ixia-C: When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets.</li> </ul>"},{"location":"releases/#release-v1190-18","title":"Release  v1.19.0-18","text":"<p>24th January, 2025</p>"},{"location":"releases/#build-details_16","title":"Build Details","text":"Component Version Open Traffic Generator API 1.19.0 snappi 1.19.0 gosnappi 1.19.0 keng-controller 1.19.0-18 ixia-c-traffic-engine 1.8.0.245 keng-app-usage-reporter 0.0.1-52 ixia-c-protocol-engine 1.00.0.426 keng-layer23-hw-server 1.19.0-9 keng-operator 0.3.34 otg-gnmi-server 1.19.0 ixia-c-one 1.19.0-18 UHD400 1.5.1"},{"location":"releases/#release-featuress_15","title":"Release Features(s)","text":"<ul> <li>Ixia-C, Ixia Chassis &amp; Appliances(Novus, AresOne): Support added for GUEv1 IPv4/v6 over UDP traffic.</li> </ul> <p><pre><code>    f1Ip1 := f1.Packet().Add().Ipv4()\n    f1Ip1.Src().SetValue(\"1.1.1.1\")\n    f1Ip1.Dst().SetValue(\"1.1.1.2\")\n\n    f1Udp := f1.Packet().Add().Udp()\n    f1Udp.SrcPort().SetValue(30000)\n    f1Udp.DstPort().SetValue(6080)\n    // IPv4 Over UDP\n    f1Ip2 := f1.Packet().Add().Ipv4()\n    f1Ip2.Src().SetValues([]string{\n        \"2.2.2.1\",\n        \"2.2.2.2\",\n        \"2.2.2.3\",\n        \"2.2.2.4\",\n    })\n    f1Ip2.Dst().SetValue(\"3.3.3.1\")\n</code></pre> * Ixia-C, Ixia Chassis &amp; Appliances(Novus, AresOne): Support added for MPLS Over UDP traffic.</p> <pre><code>    //udp Dst port as 6635\n    f1Udp := f1.Packet().Add().Udp()\n    f1Udp.DstPort().SetValue(6635)\n    f1Udp.SrcPort().SetValue(65530)\n    //mpls over udp\n    f1Mpls1 := f1.Packet().Add().Mpls()\n    f1Mpls1.Label().SetValue(10001)\n    f1Mpls1.BottomOfStack().SetValue(0)\n    f1Mpls2 := f1.Packet().Add().Mpls()\n    f1Mpls2.Label().SetValue(10011)\n    //ipv4 over mpls over udp\n    f1MplsIp := f1.Packet().Add().Ipv4()\n    f1MplsIp.Dst().SetValues([]string{\n        \"20.20.20.1\",\n        \"20.20.20.2\",\n        \"20.20.20.3\",\n        \"20.20.20.4\",\n    })\n    f1MplsIp.Src().SetValue(\"10.10.10.1\")\n</code></pre> <p>Note: MPLS Over UDP with DTLS is not supported. * Ixia-C, Ixia Chassis &amp; Appliances(Novus, AresOne): Egress tracking is now supported for UDP, TCP(src/dst port fields), MPLS and IPv4/v6 inner header fields when encapsulated inside UDP/TCP.</p> <pre><code>    //egress tracking\n    f1.EgressPacket().Add().Ethernet()\n    f1.EgressPacket().Add().Ipv4()\n    f1.EgressPacket().Add().Udp()\n    f1.EgressPacket().Add().Mpls()\n    mplsLabelTracking := f1.EgressPacket().Add().Mpls()\n    tr1 := mplsLabelTracking.Label().MetricTags().Add()\n    tr1.SetName(\"MplsLabelEgressTracking\")\n    tr1.SetOffset(17)\n    tr1.SetLength(3)\n</code></pre>"},{"location":"releases/#bug-fixs_12","title":"Bug Fix(s)","text":"<ul> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): Issue is fixed where configs with RSVP and multiple Loopback interfaces was throwing error similar to <code>\"loopback p2.d2.lo and lo.d not compatible\"</code> on <code>set_config</code>.</li> <li>Ixia-C, Ixia Chassis &amp; Appliances(Novus, AresOne): Issue where config with large number of route ranges was causing error similar to <code>\"grpc: received message larger than max (114278270 vs. 104857600)\"</code> on <code>set_config</code> is fixed by increasing the default gRPC receive buffer size to 1GB.</li> <li>Note that for Ixia Chassis &amp; Appliances(Novus, AresOne) the buffer can now be controlled by setting the environment variable of <code>keng-controller</code> as given below.     <pre><code>    command:\n        ...\n        - \"--grpc-max-msg-size\"\n        - \"500\"\n</code></pre></li> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): Issue is fixed where <code>set_config</code> was throwing error if Traffic Engineering was enabled for ISIS interface, but Priority BandWidths were not explicitly specified.</li> <li>Ixia-C, UHD400: Issue is fixed where DHCPv4 was intermittently crashing on stop.</li> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): Issue is fixed where OSPFv2 Router Ids were not getting set properly when multiple OSPFv2 Routers were configured on a port.</li> </ul>"},{"location":"releases/#known-issues_16","title":"Known Issues","text":"<ul> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): If <code>keng-layer23-hw-server</code> version is upgraded/downgraded, the ports which will be used from this container must be rebooted once before running the tests.</li> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): <code>StartProtocols</code>/<code>set_control_state.protocol.all.start</code> can get stuck till the time all DHPCv4/v6 clients receive the leased IPv4/v6 addresses from the DHCPv4/v6 server/relay agent. This may result in getting <code>\"context deadline exceeded\"</code> error in the test program.</li> <li>UHD400: Packets will not be transmitted if <code>flows[i].rate.pps</code> is less than 50.</li> <li>UHD400: <code>values</code> for fields in flow packet headers can be created with maximum length of 1000 values. If larger set of values are required for a field which are random, please use <code>random</code> instead of <code>values</code>.</li> <li>Ixia-C: Flow Tx is incremented for flow with tx endpoints as LAG, even if no packets are sent on the wire when all active links of the LAG are down.</li> <li>Ixia-C: Supported value for <code>flows[i].metrics.latency.mode</code> is <code>cut_through</code>.</li> <li>Ixia-C: The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>Ixia-C: When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets.</li> </ul>"},{"location":"releases/#release-v1190-5","title":"Release  v1.19.0-5","text":"<p>23rd December, 2024</p>"},{"location":"releases/#build-details_17","title":"Build Details","text":"Component Version Open Traffic Generator API 1.19.0 snappi 1.19.0 gosnappi 1.19.0 keng-controller 1.19.0-5 ixia-c-traffic-engine 1.8.0.241 keng-app-usage-reporter 0.0.1-52 ixia-c-protocol-engine 1.00.0.424 keng-layer23-hw-server 1.19.0-5 keng-operator 0.3.34 otg-gnmi-server 1.19.0 ixia-c-one 1.19.0-5 UHD400 1.5.1"},{"location":"releases/#release-featuress_16","title":"Release Features(s)","text":"<ul> <li>Ixia-C: Support added to send flows over DHCPv6 endpoints.</li> </ul> <p><pre><code>  f1 := config.Flows().Add()\n  f1.SetName(flowName).\n    TxRx().Device().\n    SetTxNames([]string{\"p1d1dhcpv6_1\"}).\n    SetRxNames([]string{\"p2d1ipv6\"})\n  f1Ip := f1.Packet().Add().Ipv6()\n  // will be populated automatically with the the dynamically allocated Ip to DHCP client\n  f1Ip.Src().Auto().Dhcp()\n  \u2026\n  f2Ip.Dst().Auto().Dhcp()\n</code></pre> * Ixia Chassis &amp; Appliances(Novus, AresOne): Support added to retrieve timestamp of the last link state change event of the test port. More Details</p> <ul> <li> <p>This can be retrieved by accessing <code>port_metrics[i].last_change</code>.</p> <p>Note:</p> <ul> <li>As mentioned in the <code>Known Issues</code>, ports being used in the tests must be rebooted once after upgrading to the latest version of <code>keng-layer23-hw-server</code>.</li> <li>Test ports and DUT must be time synced to the same time source if link state change timestamps need to be co-related.</li> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): Support added for RSVP over ISIS Simulated Topology.</li> </ul> </li> </ul> <pre><code>  // Create RSVP neighbor on interface connected to DUT.\n  // Note that get_states and get_metrics are supported only for the connected RSVP neighbors.\n  p2RsvpNeighbor := p2d1.Rsvp().SetName(\"p2RsvpNbr\")\n  p2RsvpNeighbor.Ipv4Interfaces().\n          Add().SetIpv4Name(p2d1Ipv4.Name()).\n          SetNeighborIp(p2d1Ipv4.Gateway())\n\n  // Create RSVP ingress LSPs on the loopback behind the simulated topology.\n  fromLoRsvpIngress := fromLoRsvpLsp.P2PIngressIpv4Lsps().Add().SetName(\"ingressLsp\")\n  fromLoRsvpIngress.SetRemoteAddress(\"1.1.1.1\").SetTunnelId(100)\n\n  // Create RSVP egress endpoint on the loopback behind the simulated topology.\n  toLoRsvpLsp := toLoRsvpPeer.LspIpv4Interfaces().Add().SetIpv4Name(\"loopback\")\n  toLoRsvpLspEgress := toLoRsvpLsp.P2PEgressIpv4Lsps().SetName(\"egressLsp\")\n\n  // Note: for TE SPF to work properly on DUT, ensure you have added TrafficEngineering to all ISIS interfaces.\n  te = p2d1IsisIntf.TrafficEngineering().Add().SetMetricLevel(10)\n  te.PriorityBandwidths().\n          SetPb0(125000000).\n          ...\n          SetPb7(125000000)\n</code></pre>"},{"location":"releases/#bug-fixs_13","title":"Bug Fix(s)","text":"<ul> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): Issue is fixed where <code>set_config</code> was failing with the error <code>\"BgpIPRouteRange is missing\"</code> when IPv4 routes with IPv6 next-hops (RFC5549) was configured.</li> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): Issue is fixed where <code>get_states</code> on <code>bgpv4/6_prefixes</code> was returning error <code>\"Error occurred while fetching bgp_prefix states:Length cannot be less than zero. (Parameter 'length')\"</code> if the prefix contained <code>as_path</code> with multiple segments.</li> <li>Ixia-C, UHD400: Issue is fixed where <code>get_states</code> for <code>isis</code> was returning IPv6 prefixes in upper case causing prefix match for IPv6 prefixes to fail in tests.</li> <li>Ixia-C: Issue is fixed where <code>set_config</code> was failing with error <code>\"Error occurred while setting Traffic config (Layer1 only) for user common:Error fetching stats for port port9: unsuccessful Response: Port 7 is not added\"</code> when the traffic engine was deployed in multi nic mode (e.g. for lag setups with 8 ports).</li> <li>Ixia-C: Issue is fixed where the traffic engine was crashing on deployment using a single cpu core (<code>--cpuset-cpus=\"0-1\"</code>).</li> <li>VM Licensing: Issue is fixed for users using the VM License Server where,  after a reboot, license-server VM serving multiple keng-controller(s) did not come up and tests running with those controller(s) started failing.</li> </ul>"},{"location":"releases/#known-issues_17","title":"Known Issues","text":"<ul> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): If <code>keng-layer23-hw-server</code> version is upgraded/downgraded, the ports which will be used from this container must be rebooted once before running the tests.</li> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): <code>StartProtocols</code>/<code>set_control_state.protocol.all.start</code> can get stuck till the time all DHPCv4/v6 clients receive the leased IPv4/v6 addresses from the DHCPv4/v6 server/relay agent. This may result in getting <code>\"context deadline exceeded\"</code> error in the test program.</li> <li>UHD400: Packets will not be transmitted if <code>flows[i].rate.pps</code> is less than 50.</li> <li>UHD400: <code>values</code> for fields in flow packet headers can be created with maximum length of 1000 values. If larger set of values are required for a field which are random, please use <code>random</code> instead of <code>values</code>.</li> <li>Ixia-C: Flow Tx is incremented for flow with tx endpoints as LAG, even if no packets are sent on the wire when all active links of the LAG are down.</li> <li>Ixia-C: Supported value for <code>flows[i].metrics.latency.mode</code> is <code>cut_through</code>.</li> <li>Ixia-C: The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>Ixia-C: When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets.</li> </ul>"},{"location":"releases/#release-v1170-9","title":"Release  v1.17.0-9","text":"<p>29th November, 2024</p>"},{"location":"releases/#build-details_18","title":"Build Details","text":"Component Version Open Traffic Generator API 1.17.0 snappi 1.17.0 gosnappi 1.17.0 keng-controller 1.17.0-9 ixia-c-traffic-engine 1.8.0.193 keng-app-usage-reporter 0.0.1-52 ixia-c-protocol-engine 1.00.0.419 keng-layer23-hw-server 1.17.0-1 keng-operator 0.3.34 otg-gnmi-server 1.14.18 ixia-c-one 1.17.0-9 UHD400 1.5.1"},{"location":"releases/#release-featuress_17","title":"Release Features(s)","text":"<ul> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): Support added for BGP/BGP+ over ISIS Simulated Topology. More Details</li> </ul> <pre><code>  loopback = simRtr.Ipv4Loopbacks().\n              Add().\n              SetName(\"IPv4Loopback\").\n              SetAddress(dutIPv4).\n              SetEthName(simRtr.Ethernets().Items()[0].Name())\n  simRtrBgp= simRtr.Bgp().\n          SetRouterId(loopback.Address())\n  simRtrBgpIntf = simRtrBgp.Ipv4Interfaces().Add().\n          SetIpv4Name(loopback.Name())\n  simRtrBgpIntf.Peers().Add().\n          SetAsNumber(1111).\n          SetAsType(gosnappi.BgpV4PeerAsType.EBGP).\n          SetPeerAddress(fromPeerIp).\n          SetName(\"BgpPeer1\")\n</code></pre> <p>Note: For configuration of simulated topology please refer here. * Ixia-C, Ixia Chassis &amp; Appliances(Novus, AresOne): Support added for GRE header in traffic flows.</p> <pre><code>  flow1 := config.Flows().Add()\n  ...\n  gre := flow1.Packet().Add().Gre()\n  ...\n</code></pre> <p>Note: By default the correct GRE Protocol value will be set automatically depending on next header eg. IPv4/v6.</p>"},{"location":"releases/#bug-fixs_14","title":"Bug Fix(s)","text":"<ul> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): Issue is fixed where fetching ISIS learned information using <code>get_states</code> would sometimes fail with a error <code>&lt;i&gt;</code>Cannot clear data while transfer is in progress - data would be inconsistent<code>&lt;/i&gt;</code>.</li> <li>Ixia-C: Issue is fixed where ARP/ND resolution was failing for LAG configurations with a mix of Loopback and connected interfaces.</li> <li>Ixia-C: Issue is fixed where on fetching BGP/BGP+ learned prefix information using <code>get_states</code> would return an incorrect prefix in certain scenarios. This was more likely to happen for IPv6 prefixes.</li> <li>Ixia-C, UHD400: Issue is fixed where if the DHCPv6 client type is configured as IANAPD, DHCPv6 Server <code>get_states</code> doesn't show IAPD addresses.</li> <li>UHD400: Issue is fixed where Auto MAC resolution was not working properly for multinic scenarios such as LAG, resulting in flows being transmitted with dest MAC as 00:00:00:00:00:00 and DUT not forwarding these packets.</li> </ul>"},{"location":"releases/#known-issues_18","title":"Known Issues","text":"<ul> <li>Ixia-C, UHD400: When DHCPv6 Server is configured with multiple pools, The DHCPv6 clients are not accepting addresses from different pools.</li> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): If <code>keng-layer23-hw-server</code> version is upgraded/downgraded, the ports which will be used from this container must be rebooted once before running the tests.</li> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): <code>StartProtocols</code>/<code>set_control_state.protocol.all.start</code> can get stuck till the time all DHPCv4/v6 clients receive the leased IPv4/v6 addresses from the DHCPv4/v6 server/relay agent. This may result in getting <code>\"context deadline exceeded\"</code> error in the test program.</li> <li>UHD400: Packets will not be transmitted if <code>flows[i].rate.pps</code> is less than 50.</li> <li>UHD400: <code>values</code> for fields in flow packet headers can be created with maximum length of 1000 values. If larger set of values are required for a field which are random, please use <code>random</code> instead of <code>values</code>.</li> <li>Ixia-C: Flow Tx is incremented for flow with tx endpoints as LAG, even if no packets are sent on the wire when all active links of the LAG are down.</li> <li>Ixia-C: Supported value for <code>flows[i].metrics.latency.mode</code> is <code>cut_through</code>.</li> <li>Ixia-C: The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>Ixia-C: When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets.</li> </ul>"},{"location":"releases/#release-v1160-2","title":"Release  v1.16.0-2","text":"<p>18th November, 2024</p>"},{"location":"releases/#build-details_19","title":"Build Details","text":"Component Version Open Traffic Generator API 1.16.0 snappi 1.16.0 gosnappi 1.16.0 keng-controller 1.16.0-2 ixia-c-traffic-engine 1.8.0.193 keng-app-usage-reporter 0.0.1-52 ixia-c-protocol-engine 1.00.0.415 keng-layer23-hw-server 1.16.0-2 keng-operator 0.3.34 otg-gnmi-server 1.14.16 ixia-c-one 1.16.0-2 UHD400 1.5.1"},{"location":"releases/#release-featuress_18","title":"Release Features(s)","text":"<ul> <li> <p>Ixia-C, UHD400: Support added for DHCPv6 Client and Server in control plane.</p> </li> <li> <p>User will be the able to configure DHCPv6 Client and Server by the following code snippet.</p> </li> </ul> <p><pre><code>  // Configure a DHCP Client\n    dhcpv6client := d1Eth1.Dhcpv6Interfaces().Add().\n      SetName(\"p1d1dhcpv61\")\n\n    dhcpv6client.IaType().Iata()\n    dhcpv6client.DuidType().Llt()\n\n    // Configure a DHCPv6 Server\n    d1Dhcpv6Server := d2.DhcpServer().Ipv6Interfaces().Add().\n      SetName(\"p2d1Dhcpv6Server1\").\n\n    d1Dhcpv6ServerPool := d1Dhcpv6Server.SetIpv6Name(\"p2d1ipv6\").\n      Leases().Add().\n      SetLeaseTime(3600)\n    IaType := d1Dhcpv6ServerPool.IaType().Iata()\n    IaType.\n      SetStartAddress(\"2000:0:0:1::100\").\n      SetStep(1).\n      SetSize(10).\n      SetPrefixLen(64) \n</code></pre> * UHD400: Support of Egress Flow tracking for multiple flows is added any location of supported fields upto 10 bits.</p> <ul> <li>Supported fields are <code>ethernet.src/dst</code>, <code>vlan.id</code>, <code>vlan.priority</code>, <code>ipv4.src/dst</code>, <code>ipv4.precedence</code>, <code>ipv6.src/dst</code>, <code>ipv6.traffic_class</code>.</li> </ul> <p><pre><code>  eth := flow.EgressPacket().Add().Ethernet()\n  ipv4 := flow.EgressPacket().Add().Ipv4()\n  ipv4Tag := ipv4.Dst().MetricTags().Add()\n  ipv4Tag.SetName(\"flow_ipv4_dst\")\n  ipv4Tag.SetOffset(22)\n  ipv4Tag.SetLength(10)\n</code></pre> * Ixia Chassis &amp; Appliances(Novus, AresOne): Support added for ISIS Simulated Topology. More Details</p> <ul> <li>Configuration for ISIS attributes for newly introduced simulated routers are identical to configuration for currently supported directly connected emulated routers.</li> <li><code>devices[i].ethernets[j].connection.simulated_link</code> is introduced to create a simulated ethernet connection to build a Simulated Topology.</li> </ul> <pre><code>  simulatedRouterEthernet := simulatedRouter.Ethernets().Add().\n              SetName(\"simRtrEth\").\n              SetMac(\"00:00:11:02:02:02\")\n  simulatedRouterEthernet.Connection().SimulatedLink().SetRemoteSimulatedLink(\"connRtrSimEth\")\n\n  connectedRouterSimulatedEthernet := connectedRouter.Ethernets().Add().\n              SetName(\"connRtrSimEth\").\n              SetMac(\"00:00:01:01:01:01\")\n  connectedRouterSimulatedEthernet.Connection().SimulatedLink().SetRemoteSimulatedLink(\"simRtrEth\")\n</code></pre> <p>Note: <code>get_metrics/states</code> APIs are only applicable for the connected emulated routers and not for the simulated routers. * Ixia-C, UHD400, Ixia Chassis &amp; Appliances(Novus, AresOne): Support added for fetching <code>lldp_neighbors[i].custom_tlvs[j].information</code> as hex bytes using <code>get_states</code> API. More details</p>"},{"location":"releases/#bug-fixs_15","title":"Bug Fix(s)","text":"<ul> <li> <p>Ixia Chassis &amp; Appliances(Novus, AresOne): Issue is fixed where for certain scenarios such as retrieving large control capture buffer or fetching <code>get_metrics/states</code> for large amount of data results in errors similar to <code>&lt;i&gt;</code>\"grpc: received message larger than max (7934807 vs. 4194304)\"<code>&lt;/i&gt;</code>.</p> </li> <li> <p>For such scenarios note that the grpc receive buffer on the client should also be locally increased if necessary from default value of 4 MB.</p> </li> <li>Ixia-C: Issue is fixed for LLDP where, when multiple custom tlvs are configured to be sent, sometimes the bytes in the <code>information</code> field in the outgoing LLDP PDUs were corrupted.</li> </ul>"},{"location":"releases/#known-issues_19","title":"Known Issues","text":"<ul> <li>Ixia-C, UHD400: When the DHCPv6 client type is configured as IANAPD, DHCPv6 Server <code>get_states</code> doesn't show IAPD addresses</li> <li>Ixia-C, UHD400: When DHCPv6 Server is configured with multiple pools, The DHCPv6 clients are not accepting addresses from different pools.</li> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): If <code>keng-layer23-hw-server</code> version is upgraded/downgraded, the ports which will be used from this container must be rebooted once before running the tests.</li> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): <code>StartProtocols</code>/<code>set_control_state.protocol.all.start</code> can get stuck till the time all DHPCv4/v6 clients receive the leased IPv4/v6 addresses from the DHCPv4/v6 server/relay agent. This may result in getting <code>\"context deadline exceeded\"</code> error in the test program.</li> <li>UHD400: Packets will not be transmitted if <code>flows[i].rate.pps</code> is less than 50.</li> <li>UHD400: <code>values</code> for fields in flow packet headers can be created with maximum length of 1000 values. If larger set of values are required for a field which are random, please use <code>random</code> instead of <code>values</code>.</li> <li>Ixia-C: Flow Tx is incremented for flow with tx endpoints as LAG, even if no packets are sent on the wire when all active links of the LAG are down.</li> <li>Ixia-C: Supported value for <code>flows[i].metrics.latency.mode</code> is <code>cut_through</code>.</li> <li>Ixia-C: The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>Ixia-C: When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets.</li> </ul>"},{"location":"releases/#release-v1140-1","title":"Release  v1.14.0-1","text":"<p>25th October, 2024</p>"},{"location":"releases/#build-details_20","title":"Build Details","text":"Component Version Open Traffic Generator API 1.14.0 snappi 1.14.0 gosnappi 1.14.0 keng-controller 1.14.0-1 ixia-c-traffic-engine 1.8.0.99 keng-app-usage-reporter 0.0.1-52 ixia-c-protocol-engine 1.00.0.405 keng-layer23-hw-server 1.14.0-1 keng-operator 0.3.34 otg-gnmi-server 1.14.15 ixia-c-one 1.14.0-1 UHD400 1.4.0"},{"location":"releases/#release-featuress_19","title":"Release Features(s)","text":"<ul> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): Support added for OSPFv2. details</li> </ul> <pre><code>  ospfRouter := device1.Ospfv2().\n          SetName(\"OspfRtr\").\n          SetStoreLsa(true)\n\n  intf := ospfRouter.Interfaces().Add().\n                  SetName(\"OspfIntf\").\n                  SetIpv4Name(\"Ipv4Intf1\")\n\n  intf.Area().SetId(0)\n  intf.NetworkType().PointToPoint()\n  ospfRoutes := ospfRouter.V4Routes().\n                          Add().\n                          SetName(\"OspfRoutes\")\n  ospfRoutes.\n          Addresses().\n          Add().\n          SetAddress(\"10.10.10.0\").\n          SetPrefix(24).\n          SetCount(100).\n          SetStep(2)\n</code></pre> <ul> <li>Learned LSAs can be fetched by the following</li> </ul> <pre><code>  req := gosnappi.NewStatesRequest()\n  req.Ospfv2Lsas().SetRouterNames(routerNames)\n  res, err := client.GetStates(req)\n</code></pre> <ul> <li>OSPFv2 metrics can be fetched by the following</li> </ul> <p><pre><code>  req := gosnappi.NewMetricsRequest()\n  reqOspf := req.Ospfv2()\n  reqOspf.SetRouterNames(routerNames)\n</code></pre> * Ixia-C, Ixia Chassis &amp; Appliances(Novus, AresOne): Support added to update <code>flows[i].size</code> and <code>flows[i].rate</code> on the fly.</p> <pre><code>  flow = get_config.Flows().Items()[0]\n  flow.Rate().SetPps(120)\n  flow.Size().SetFixed(512)\n\n  flowUpdateCfg: = gosnappi.NewConfigUpdate().Flows()\n  flowUpdateCfg.Flows().Append(flow)\n  flowUpdateCfg.SetPropertyNames ([]gosnappi.FlowsUpdatePropertyNamesEnum{\n    gosnappi.FlowsUpdatePropertyNames.SIZE, gosnappi.FlowsUpdatePropertyNames.RATE\n  })\n\n  configUpdate = gosnappi.NewConfigUpdate()\n  configUpdate.SetFlows(flowUpdateCfg)\n  res, err := client.Api().UpdateConfig(configUpdate)\n</code></pre>"},{"location":"releases/#bug-fixs_16","title":"Bug Fix(s)","text":"<ul> <li>Ixia-C: Issue where flows containing <code>ipv4/v6</code> header without <code>src/dst</code> specified was returning error on <code>set_config</code> <code>&lt;i&gt;</code>\"Error flow [ flow-name ] has AUTO IPv4 src address and Tx device [ flow-end-point ] with no dhcpv4 interface\"<code>&lt;/i&gt;</code> is fixed.</li> </ul>"},{"location":"releases/#known-issues_20","title":"Known Issues","text":"<ul> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): If <code>keng-layer23-hw-server</code> version is upgraded/downgraded, the ports which will be used from this container must be rebooted once before running the tests.</li> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): <code>StartProtocols</code>/<code>set_control_state.protocol.all.start</code> can get stuck till the time all DHPCv4/v6 clients receive the leased IPv4/v6 addresses from the DHCPv4/v6 server/relay agent. This may result in getting <code>\"context deadline exceeded\"</code> error in the test program.</li> <li>UHD400: Packets will not be transmitted if <code>flows[i].rate.pps</code> is less than 50.</li> <li>UHD400: <code>values</code> for fields in flow packet headers can be created with maximum length of 1000 values. If larger set of values are required for a field which are random, please use <code>random</code> instead of <code>values</code>.</li> <li>Ixia-C: Flow Tx is incremented for flow with tx endpoints as LAG, even if no packets are sent on the wire when all active links of the LAG are down.</li> <li>Ixia-C: Supported value for <code>flows[i].metrics.latency.mode</code> is <code>cut_through</code>.</li> <li>Ixia-C: The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>Ixia-C: When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets.</li> </ul>"},{"location":"releases/#release-v1130-9","title":"Release  v1.13.0-9","text":"<p>4th October, 2024</p>"},{"location":"releases/#build-details_21","title":"Build Details","text":"Component Version Open Traffic Generator API 1.13.0 snappi 1.13.0 gosnappi 1.13.0 keng-controller 1.13.0-9 ixia-c-traffic-engine 1.8.0.90 keng-app-usage-reporter 0.0.1-52 ixia-c-protocol-engine 1.00.0.404 keng-layer23-hw-server 1.13.0-5 keng-operator 0.3.34 otg-gnmi-server 1.14.14 ixia-c-one 1.13.0-9 UHD400 1.4.0"},{"location":"releases/#release-featuress_20","title":"Release Features(s)","text":"<ul> <li>Keng-Operator: go version is upgraded to use <code>v1.23</code> along with security updates.</li> <li>Ixia-C: Support added to send flows over DHCPv4 endpoints.</li> </ul> <p><pre><code>  f1 := config.Flows().Add()\n  f1.SetName(flowName).\n    TxRx().Device().\n    SetTxNames([]string{\"p1d1dhcpv4_1\"}).\n    SetRxNames([]string{\"p2d1ipv4\"})\n  f1Ip := f1.Packet().Add().Ipv4()\n  // will be populated automatically with the the dynamically allocated Ip to DHCP client\n  f1Ip.Src().Auto().Dhcp()\n  \u2026\n  f2Ip.Dst().Auto().Dhcp()\n</code></pre> * Ixia Chassis &amp; Appliances(Novus, AresOne): Support added for LLDP.</p> <pre><code>  // LLDP configuration.\n  lldp := config.Lldp().Add()\n  lldp.SystemName().SetValue(lldpSrc.systemName)\n  lldp.SetName(lldpSrc.otgName)\n  lldp.Connection().SetPortName(portName)\n  lldp.ChassisId().MacAddressSubtype().\n    SetValue(lldpSrc.macAddress)\n</code></pre>"},{"location":"releases/#bug-fixs_17","title":"Bug Fix(s)","text":"<ul> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): There was degradation in time taken for starting large number of  BGP/BGP+ peers on one port. This issue is fixed.</li> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): There was an exception being returned from <code>set_config</code> on creating multiple loopbacks in a device and configuring protocols on top of that. This issue is fixed.</li> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): If multiple routes are received by a BGP/BGP+ peer with some having MED/Local Preference and some not having MED/Local Preference, in <code>get_states</code> MED/Local Preference were not being correctly returned. This issue is fixed.</li> </ul>"},{"location":"releases/#known-issues_21","title":"Known Issues","text":"<ul> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): If <code>keng-layer23-hw-server</code> version is upgraded/downgraded, the ports which will be used from this container must be rebooted once before running the tests.</li> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): <code>StartProtocols</code>/<code>set_control_state.protocol.all.start</code> can get stuck till the time all DHPCv4/v6 clients receive the leased IPv4/v6 addresses from the DHCPv4/v6 server/relay agent. This may result in getting <code>\"context deadline exceeded\"</code> error in the test program.</li> <li>UHD400: Packets will not be transmitted if <code>flows[i].rate.pps</code> is less than 50.</li> <li>UHD400: <code>values</code> for fields in flow packet headers can be created with maximum length of 1000 values.</li> <li>Ixia-C: Flow Tx is incremented for flow with tx endpoints as LAG, even if no packets are sent on the wire when all active links of the LAG are down.</li> <li>Ixia-C: Supported value for <code>flows[i].metrics.latency.mode</code> is <code>cut_through</code>.</li> <li>Ixia-C: The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>Ixia-C: When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets.</li> </ul>"},{"location":"releases/#release-v1130-1","title":"Release  v1.13.0-1","text":"<p>17th September, 2024</p>"},{"location":"releases/#build-details_22","title":"Build Details","text":"Component Version Open Traffic Generator API 1.13.0 snappi 1.13.0 gosnappi 1.13.0 keng-controller 1.13.0-1 ixia-c-traffic-engine 1.8.0.25 keng-app-usage-reporter 0.0.1-52 ixia-c-protocol-engine 1.00.0.399 keng-layer23-hw-server 1.13.0-3 keng-operator 0.3.30 otg-gnmi-server 1.14.14 ixia-c-one 1.13.0-1 UHD400 1.4.0"},{"location":"releases/#release-featuress_21","title":"Release Features(s)","text":"<ul> <li> <p>gosnappi: <code>gosnappi</code> is updated to work with <code>go</code> &gt;= <code>v1.21</code>.</p> </li> <li> <p>Older versions of <code>go</code> are no longer supported.</p> <ul> <li>When older version of <code>go</code> is installed on the server, User will be liable to get errors like <code>\"slices: package slices is not in GOROOT (/root/.local/go/src/slices)\"</code>.</li> </ul> </li> </ul> <p>Note: <code>keng-controller</code> and <code>otg-gnmi-server</code> are upgraded to use <code>go</code> <code>v1.23</code>. * Ixia-C, Ixia Chassis &amp; Appliances(Novus, AresOne), UHD400: Support added for BGP GracefulRestart Notification Enhancement based on RFC8538.</p> <ul> <li>To enable advertisement of Notification support in GracefulRestart capability:</li> </ul> <pre><code>    peer.GracefulRestart().SetEnableNotification(true)\n</code></pre> <ul> <li>To optionally send Notification when peer is going down during <code>InitiateGracefulRestart</code> trigger:</li> </ul> <p><pre><code>    grAction := gosnappi.NewControlAction()\n    bgpPeersRestart := grAction.Protocol().Bgp().InitiateGracefulRestart()\n    bgpPeersRestart.\n        SetPeerNames([]string{\"peer1\"}).\n        SetRestartDelay(20)\n    notification:= bgpPeersRestart.Notification()\n    if sendHardReset == true {            \n      notification.Cease().SetSubcode(\n        gosnappi.DeviceBgpCeaseErrorSubcode.HARD_RESET_CODE6_SUBCODE9)\n    } \n    else {\n      /* Send anything else except hard reset */ \n      notification.Cease().SetSubcode(\n          gosnappi.DeviceBgpCeaseErrorSubcode.OUT_OF_RESOURCES_CODE6_SUBCODE8)\n    }\n</code></pre> * Ixia Chassis &amp; Appliances(Novus, AresOne): Support added to update traffic rate on the fly.</p> <pre><code>  req := gosnappi.NewConfigUpdate()\n  reqFlow := req.Flows().SetPropertyNames([]gosnappi.FlowsUpdatePropertyNamesEnum{\n    gosnappi.FlowsUpdatePropertyNames.RATE,\n  })\n  f1.Rate().SetPps(100) // f1 is an existing flow in the config\n  reqFlow.Flows().Append(f1)\n    gosnappi.NewApi().UpdateConfig(req)\n</code></pre>"},{"location":"releases/#bug-fixs_18","title":"Bug Fix(s)","text":"<ul> <li>UHD400: Issue where <code>flows[i].packet.ipv6.dst.increment</code> was not being reflected in transmitted packets when two or more flows were configured, is now fixed.</li> </ul>"},{"location":"releases/#known-issues_22","title":"Known Issues","text":"<ul> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): If <code>keng-layer23-hw-server</code> version is upgraded/downgraded, the ports which will be used from this container must be rebooted once before running the tests.</li> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): <code>StartProtocols</code>/<code>set_control_state.protocol.all.start</code> can get stuck till the time all DHPCv4/v6 clients receive the leased IPv4/v6 addresses from the DHCPv4/v6 server/relay agent. This may result in getting <code>\"context deadline exceeded\"</code> error in the test program.</li> <li>UHD400: Packets will not be transmitted if <code>flows[i].rate.pps</code> is less than 50.</li> <li>UHD400: <code>values</code> for fields in flow packet headers can be created with maximum length of 1000 values.</li> <li>Ixia-C: Flow Tx is incremented for flow with tx endpoints as LAG, even if no packets are sent on the wire when all active links of the LAG are down.</li> <li>Ixia-C: Supported value for <code>flows[i].metrics.latency.mode</code> is <code>cut_through</code>.</li> <li>Ixia-C: The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>Ixia-C: When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets.</li> </ul>"},{"location":"releases/#release-v1120-1","title":"Release  v1.12.0-1","text":"<p>2nd September, 2024</p>"},{"location":"releases/#build-details_23","title":"Build Details","text":"Component Version Open Traffic Generator API 1.12.0 snappi 1.12.0 gosnappi 1.12.0 keng-controller 1.12.0-1 ixia-c-traffic-engine 1.8.0.25 keng-app-usage-reporter 0.0.1-52 ixia-c-protocol-engine 1.00.0.398 keng-layer23-hw-server 1.12.0-1 keng-operator 0.3.30 otg-gnmi-server 1.14.12 ixia-c-one 1.12.0-1 UHD400 1.3.5"},{"location":"releases/#release-featuress_22","title":"Release Features(s)","text":"<ul> <li> <p>Ixia Chassis &amp; Appliances(Novus, AresOne): Support added for DHCPv6 client interfaces to be used as source/destination for device traffic.</p> </li> <li> <p>In this the learned IPv6 address from the DHCPv6 server is automatically populated in <code>ipv6.src/dst</code> if the choice is set to auto.dhcp.</p> </li> </ul> <pre><code>  clientToServerFlow.SetName(\"ClientToServer\").TxRx().Device().\n  SetTxNames([]string{\"DHCPv6ClientName\"}).\n  SetRxNames([]string{\"DHCPv6ServerInterfaceName\"})\n  clientToServerFlow.Packet().Add().Ethernet()\n  clientToServerFlowIp := clientToServerFlow.Packet().Add().Ipv6()\n  clientToServerFlowIp.Src().Auto().Dhcp()\n\n  serverToClientFlow.SetName(\"ServerToClient\").TxRx().Device().\n      SetTxNames([]string{\"DHCPv6ServerInterfaceName\"}).\n      SetRxNames([]string{\"DHCPv6ClientName\"})\n  serverToClientFlow.Packet().Add().Ethernet()\n  serverToClientFlowIp := serverToClientFlow.Packet().Add().Ipv6()\n  serverToClientFlowIp.Dst().Auto().Dhcp()\n</code></pre> <p>Note: For DHCPv6 client to DHCPv6 server each flow supports only one source endpoint in tx_rx.device.tx_names, hence a separate flow has to be configured for each DHCPv6 client if packet[i].ipv6.src.auto.dhcp is set. * Ixia Chassis &amp; Appliances(Novus, AresOne): Support added for <code>devices[i].ethernets[j].dhcpv6_interfaces[k].options/options_request</code> and <code>devices[i].dhcp_server.ipv6_interfaces[j].options</code>.</p> <p><pre><code>      // Configure a DHCPv6 Client\n      dhcpv6Client := d1Eth1.Dhcpv6Interfaces().Add().\n        SetName(\"DHCPv6-Client\")\n\n      .........\n\n      //options\n      dhcpv6Client.Options().VendorInfo().\n        SetEnterpriseNumber(1000).\n        OptionData().\n        Add().\n        SetCode(88).\n        SetData(\"enterprise\")\n      dhcpv6Client.Options().VendorInfo().AssociatedDhcpMessages().All()\n\n      //option request\n      dhcpv6Client.OptionsRequest().Request().Add().BootfileUrl()\n      dhcpv6Client.OptionsRequest().Request().Add().Custom().SetType(3)\n      dhcpv6Client.OptionsRequest().AssociatedDhcpMessages().All()\n\n      // Configure a DHCPv6 Server\n      dhcpv6Server := d2.DhcpServer().Ipv6Interfaces().Add().\n        SetName(\"DHCPv6-Server\")\n\n      ............\n      dhcpv6Server.Options().BootfileUrl().SetUrl(\"URL\").AssociatedDhcpMessages().All()\n        dhcpv6Server.Options().Dns().SetPrimary(\"8::8\").SecondaryDns().Add().SetIp(\"9::9\")\n</code></pre> * Ixia Chassis &amp; Appliances(Novus, AresOne): Support added for <code>devices[i].dhcp_server.ipv6_interfaces[j].leases[k].ia_type.choice.iapd/ianapd</code>.</p> <p><pre><code>      // Configure a DHCPv6 Server\n      dhcpv6Server := d2.DhcpServer().Ipv6Interfaces().Add().\n        SetName(\"DHCPv6-Server\")\n\n      dhcpv6ServerPool := dhcpv6Server.SetIpv6Name(\"p2d1ipv6\").\n        Leases().Add().\n        SetLeaseTime(3600)\n      IaType := dhcpv6ServerPool.IaType().Iapd()\n      IaType.\n        SetAdvertisedPrefixLen(64).\n        SetStartPrefixAddress(\"2000:0:0:100::0\").\n        SetPrefixStep(1).\n        SetPrefixSize(10)\n</code></pre> * Ixia-c: Support added for sending Organizational tlvs in LLDP PDUs.</p> <pre><code>  lldp := config.Lldp().Items()[0]\n\n  orgInfos1 := lldp.OrgInfos().Add()\n  orgInfos1.Information().SetInfo(\"AABB11\")\n  orgInfos1.SetOui(\"1abcdf\").SetSubtype(1)\n</code></pre> <p>Note: Received Organizational tlvs can be seen in the <code>get_states</code> response of <code>lldp_neighbors</code>.</p>"},{"location":"releases/#known-issues_23","title":"Known Issues","text":"<ul> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): If <code>keng-layer23-hw-server</code> version is upgraded/downgraded, the ports which will be used from this container must be rebooted once before running the tests.</li> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): <code>StartProtocols</code>/<code>set_control_state.protocol.all.start</code> can get stuck till the time all DHPCv4/v6 clients receive the leased IPv4/v6 addresses from the DHCPv4/v6 server/relay agent. This may result in getting <code>\"context deadline exceeded\"</code> error in the test program.</li> <li>UHD400: Packets will not be transmitted if <code>flows[i].rate.pps</code> is less than 50.</li> <li>UHD400: <code>values</code> for fields in flow packet headers can be created with maximum length of 1000 values.</li> <li>Ixia-C: Flow Tx is incremented for flow with tx endpoints as LAG, even if no packets are sent on the wire when all active links of the LAG are down.</li> <li>Ixia-C: Supported value for <code>flows[i].metrics.latency.mode</code> is <code>cut_through</code>.</li> <li>Ixia-C: The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>Ixia-C: When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets.</li> </ul>"},{"location":"releases/#release-v180-1","title":"Release  v1.8.0-1","text":"<p>20th August, 2024</p>"},{"location":"releases/#build-details_24","title":"Build Details","text":"Component Version Open Traffic Generator API 1.8.0 snappi 1.8.0 gosnappi 1.8.0 keng-controller 1.8.0-1 ixia-c-traffic-engine 1.8.0.25 keng-app-usage-reporter 0.0.1-52 ixia-c-protocol-engine 1.00.0.393 keng-layer23-hw-server 1.8.0-1 keng-operator 0.3.30 otg-gnmi-server 1.14.8 ixia-c-one 1.8.0-1 UHD400 1.3.5"},{"location":"releases/#release-featuress_23","title":"Release Features(s)","text":"<ul> <li> <p>Ixia Chassis &amp; Appliances(Novus, AresOne): Support added for DHCPv6 Client and Server in control plane. details</p> </li> <li> <p>User will be the able to configure DHCPv6 Client and Server by the following code snippet.</p> </li> </ul> <pre><code>      // Configure a DHCP Client\n      dhcpv6client := d1Eth1.Dhcpv6Interfaces().Add().\n        SetName(\"p1d1dhcpv61\")\n\n      dhcpv6client.IaType().Iata()\n      dhcpv6client.DuidType().Llt()\n\n      // Configure a DHCPv6 Server\n      d1Dhcpv6Server := d2.DhcpServer().Ipv6Interfaces().Add().\n        SetName(\"p2d1Dhcpv6Server1\").\n\n      d1Dhcpv6ServerPool := d1Dhcpv6Server.SetIpv6Name(\"p2d1ipv6\").\n        Leases().Add().\n        SetLeaseTime(3600)\n      IaType := d1Dhcpv6ServerPool.IaType().Iata()\n      IaType.\n        SetStartAddress(\"2000:0:0:1::100\").\n        SetStep(1).\n        SetSize(10).\n        SetPrefixLen(64) \n</code></pre> <p>Note: Support for <code>devices[i].dhcp_server.ipv6_interfaces[j].options</code> and <code>devices[i].dhcp_server.ipv6_interfaces[j].leases[k].ia_type.choice.iapd/ianapd</code> will be available in the subsequent sprints. * Ixia Chassis &amp; Appliances(Novus, AresOne): gNMI support added to fetch control plane metics and states of DHCPv6 Client and Server.</p> <ul> <li>Support added for DHCPv6 Client/Server metrics using following gNMI paths.</li> </ul> <pre><code> // dhcpv6 client\n dhcpv6-clients/dhcpv6-client[name=*]/state/counters\n\n // dhcpv6 server\n dhcpv6-servers/dhcpv6-server[name=*]/state/counters\n</code></pre> <ul> <li>Support added for DHCPv6 Client/Server states using following gNMI paths.</li> </ul> <pre><code> // dhcpv6 client\n dhcpv6-clients/dhcpv6-client[name=*]/state/interface\n\n // dhcpv6 server\n dhcpv6-servers/dhcpv6-server[name=*]/state/interface\n</code></pre>"},{"location":"releases/#known-issues_24","title":"Known Issues","text":"<ul> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): If <code>keng-layer23-hw-server</code> version is upgraded/downgraded, the ports which will be used from this container must be rebooted once before running the tests.</li> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): <code>StartProtocols</code>/<code>set_control_state.protocol.all.start</code> can get stuck till the time all DHPCv4/v6 clients receive the leased IPv4/v6 addresses from the DHCPv4/v6 server/relay agent. This may result in getting <code>\"context deadline exceeded\"</code> error in the test program.</li> <li>UHD400: Packets will not be transmitted if <code>flows[i].rate.pps</code> is less than 50.</li> <li>UHD400: <code>values</code> for fields in flow packet headers can be created with maximum length of 1000 values.</li> <li>Ixia-C: Flow Tx is incremented for flow with tx endpoints as LAG, even if no packets are sent on the wire when all active links of the LAG are down.</li> <li>Ixia-C: Supported value for <code>flows[i].metrics.latency.mode</code> is <code>cut_through</code>.</li> <li>Ixia-C: The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>Ixia-C: When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets.</li> </ul>"},{"location":"releases/#release-v172-1","title":"Release  v1.7.2-1","text":"<p>7th August, 2024</p>"},{"location":"releases/#build-details_25","title":"Build Details","text":"Component Version Open Traffic Generator API 1.7.1 snappi 1.7.2 gosnappi 1.7.2 keng-controller 1.7.2-1 ixia-c-traffic-engine 1.8.0.25 keng-app-usage-reporter 0.0.1-52 ixia-c-protocol-engine 1.00.0.392 keng-layer23-hw-server 1.7.1-4 keng-operator 0.3.30 otg-gnmi-server 1.14.7 ixia-c-one 1.7.2-1 UHD400 1.3.5"},{"location":"releases/#release-featuress_24","title":"Release Features(s)","text":"<ul> <li> <p>Ixia Chassis &amp; Appliances(Novus, AresOne): Support added for new traffic applying infrastructure.</p> </li> <li> <p>Instead of \"Failed to apply flow configurations due to: Please contact Ixia Support.\" ,</p> <ul> <li>In scenarios where underlying hardware module doesn't have the resources to apply the flow a proper error message such as \"Failed to apply flow configurations due to: Error  occurred for flow 'ipv6flowlabel': The Tx Ports of the flow do not support the combinations of fields and size of value lists configured. Please reduce the size of the value lists or/and fields with value lists configured or use a load module ( or variant) with more resources.\" Based on this either test can be modified or appropriate load modules can be used for the test.</li> <li>There were certain scenarios with large <code>values</code> in packet fields in the flows which were failing with above error inspite of being within the modules capabilities and can now be applied without any error.</li> </ul> </li> <li>Earlier configuration with multiples flows with large <code>values</code> in packet fields would fail with error as \"Failed to apply flow configurations due to: Traffic configuration exceeds port background memory size.\". This issue is also fixed with the upgrade to new traffic applying infrastructure.</li> <li>Issue where  correct <code>values</code>/<code>increment</code>/<code>decrement</code> for <code>ethernet.src/dst</code> was not being transmitted on the wire is fixed.</li> <li>In this new infrastructure, traffic will be directly applied to the hardware ports resulting in better performance on <code>set_transmit_state</code>.</li> <li>gosnappi: Client side file organization of the <code>gosnappi</code> sdk is modified to allow for better auto-completion support when writing test programs.   Note: Client must be upgraded to gosnappi v1.7.2.</li> <li> <p>Ixia-C, UHD400: Support added for DHCPv4 Client and Server in control plane. details</p> </li> <li> <p>User will be the able to configure DHCPv4 Client and Server by the following code snippet. More comprehensive B2B example</p> </li> </ul> <p><pre><code>  // Configure a DHCP Client\n  dhcpclient := d1Eth1.Dhcpv4Interfaces().Add().\n      SetName(\"p1d1dhcpv41\")\n\n  dhcpclient.FirstServer()\n  dhcpclient.ParametersRequestList().\n      SetSubnetMask(true).\n      SetRouter(true).\n      SetRenewalTimer(true)\n\n// Configure a DHCP Server\n  d2Dhcpv4Server := d2.DhcpServer().Ipv4Interfaces().Add().\n      SetName(\"p2d1dhcpv4server\")\n\n  d2Dhcpv4Server.SetIpv4Name(\"p2d1ipv4\").AddressPools().\n      Add().SetName(\"pool1\").\n      SetLeaseTime(3600).\n      SetStartAddress(\"100.1.100.1\").\n      SetStep(1).\n      SetCount(1).\n      SetPrefixLength(16).Options().SetRouterAddress(\"100.1.0.1\").SetEchoRelayWithTlv82(true)\n</code></pre> * Ixia-C, Ixia Chassis &amp; Appliances(Novus, AresOne), UHD400: Support added for <code>random</code> in following flow fields. details</p> <ul> <li><code>ipv4.src/dst</code></li> <li><code>ipv6.flow_label</code></li> <li><code>tcp.src_port/dst_port</code></li> <li> <p><code>udp.src_port/dst_port</code></p> <ul> <li>User can configure by using following snippet.   <pre><code>  ipv6 := flow1.Packet().Add().Ipv6()\n  ipv6.FlowLabel().Random().SetMin(1).SetMax(1048574).SetCount(250000).SetSeed(1)\n</code></pre></li> </ul> <p>Note: For UHD400 an intermittent issue is present on using <code>random</code>, where <code>rx</code> fields of <code>flow_metrics</code> can return zero values. * Ixia-C: New environment variable <code>OPT_ADAPTIVE_CPU_USAGE=\"\"</code> is introduced for docker based ixia-c-traffic-engine setups which enables adaptive CPU usage on the <code>rx</code> port for a flow. By default a non adaptive receiver is used when the <code>rx</code> CPU core usage reaches up to 100%. The adaptive receiver reduces <code>rx</code> CPU core usage from 100% to less than 5% in idle mode. To disable the adaptive receiver please remove this environment variable from docker run command. It is recommended to also pin the <code>rx</code> to specific cpu cores using the <code>ARG_CORE_LIST</code> environment variable when enabling <code>OPT_ADAPTIVE_CPU_USAGE</code>.</p> </li> <li> <p>Example docker usage:</p> </li> </ul> <pre><code>  docker run --net=host --privileged --rm -d \\\n    -e OPT_LISTEN_PORT=\"5555\" \\\n    -e ARG_CORE_LIST=\"1 2 3\" \\\n    -e ARG_IFACE_LIST=\"virtual@af_packet,enp7s0\" \\\n    -e OPT_NO_HUGEPAGES=\"Yes\" \\\n    -e OPT_ADAPTIVE_CPU_USAGE=\"\" \\\n    --name ixia-c-traffic-engine \\\n    ixia-c-traffic-engine:1.8.0.25\n</code></pre>"},{"location":"releases/#bug-fixs_19","title":"Bug Fix(s)","text":"<ul> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): Issue where <code>flow_metrics</code> were not being returned within timeout resulting in \"Could not send message, error: unexpected queue Get(1) error: queue: disposed\" and \"Stats may be inconsistent\" error is fixed.</li> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): Issue where BGP/BGP+ learned information containing <code>origin</code> of type <code>incomplete</code> was not being returned properly by <code>get_states</code> is fixed. This would result in deserialization error while accessing BGP/BGP+ learned information using <code>otg-gNMI-server</code>.</li> <li>Ixia Chassis &amp; Appliances(AresOne): Issue where <code>port_metrics</code> were not available when load module of type <code>1 x 400G AresOne-M</code> with transceiver of type <code>800GE LAN QSFP-DD</code> was being used, is fixed.</li> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): Issue where <code>set_control_state.protocol.route.state=withdraw/advertise</code> is triggered with an empty <code>names</code> field, all configured route ranges were being not withdrawn or advertised, is fixed.</li> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): Issue where on <code>set_control_state.protocol.all.state=start</code>, a <code>l1</code> <code>up/down</code> event was triggered even when <code>l1</code> state was already <code>up</code>, is now fixed.</li> </ul> <p>Note: If port is in <code>down</code> state, it has to be brought back to <code>up</code> state before starting a test.</p>"},{"location":"releases/#known-issues_25","title":"Known Issues","text":"<ul> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): If <code>keng-layer23-hw-server</code> version is upgraded/downgraded, the ports which will be used from this container must be rebooted once before running the tests.</li> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): <code>StartProtocols</code>/<code>set_control_state.protocol.all.start</code> can get stuck till the time all DHPCv4 clients receive the leased IPv4 addresses from the DHCPv4 server/relay agent. This may result in getting <code>\"context deadline exceeded\"</code> error in the test program.</li> <li>UHD400: Packets will not be transmitted if <code>flows[i].rate.pps</code> is less than 50.</li> <li>UHD400: <code>values</code> for fields in flow packet headers can be created with maximum length of 1000 values.</li> <li>Ixia-C: Flow Tx is incremented for flow with tx endpoints as LAG, even if no packets are sent on the wire when all active links of the LAG are down.</li> <li>Ixia-C: Supported value for <code>flows[i].metrics.latency.mode</code> is <code>cut_through</code>.</li> <li>Ixia-C: The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>Ixia-C: When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets.</li> </ul>"},{"location":"releases/#release-v162-13","title":"Release  v1.6.2-13","text":"<p>19th July, 2024</p>"},{"location":"releases/#build-details_26","title":"Build Details","text":"Component Version Open Traffic Generator API 1.6.2 snappi 1.6.2 gosnappi 1.6.2 keng-controller 1.6.2-13 ixia-c-traffic-engine 1.8.0.12 keng-app-usage-reporter 0.0.1-52 ixia-c-protocol-engine 1.00.0.390 keng-layer23-hw-server 1.6.2-4 keng-operator 0.3.30 otg-gnmi-server 1.14.6 ixia-c-one 1.6.2-13 UHD400 1.3.3"},{"location":"releases/#release-featuress_25","title":"Release Features(s)","text":"<ul> <li> <p>Ixia-C, Ixia Chassis &amp; Appliances(Novus, AresOne): gNMI support added for <code>first-timestamp</code> and <code>last-timestamp</code> in flow metrics. details</p> </li> <li> <p>User needs to set <code>flows[i].metrics.timestamps=true</code> to fetch these new fields.</p> </li> </ul> <pre><code>  module: open-traffic-generator-flow\n  +--rw flows\n    +--ro flow* [name]\n      +--ro name              -&gt; ../state/name\n      +--ro state\n        |  +--ro name?              string\n        .........\n        |  +--ro first-timestamp?   decimal64\n        |  +--ro last-timestamp?    decimal64\n</code></pre>"},{"location":"releases/#bug-fixs_20","title":"Bug Fix(s)","text":"<ul> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): Issue where <code>devices[i].rsvp.ipv4_interfaces[j].summary_refresh_interval</code> was not setting correctly, is fixed.</li> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): Issue where destination mac address was not getting resolved properly for traffic over ISIS IPv6 routes, is fixed.</li> </ul>"},{"location":"releases/#known-issues_26","title":"Known Issues","text":"<ul> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): If <code>keng-layer23-hw-server</code> version is upgraded/downgraded, the ports which will be used from this container must be rebooted once before running the tests.</li> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): <code>StartProtocols</code>/<code>set_control_state.protocol.all.start</code> can get stuck till the time all DHPCv4 clients receive the leased IPv4 addresses from the DHCPv4 server/relay agent. This may result in getting <code>\"context deadline exceeded\"</code> error in the test program.</li> <li>UHD400: Packets will not be transmitted if <code>flows[i].rate.pps</code> is less than 50.</li> <li>UHD400: <code>values</code> for fields in flow packet headers can be created with maximum length of 1000 values.</li> <li>Ixia-C: Flow Tx is incremented for flow with tx endpoints as LAG, even if no packets are sent on the wire when all active links of the LAG are down.</li> <li>Ixia-C: Supported value for <code>flows[i].metrics.latency.mode</code> is <code>cut_through</code>.</li> <li>Ixia-C: The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>Ixia-C: When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets.</li> </ul>"},{"location":"releases/#release-v162-1","title":"Release  v1.6.2-1","text":"<p>28th June, 2024</p>"},{"location":"releases/#build-details_27","title":"Build Details","text":"Component Version Open Traffic Generator API 1.6.2 snappi 1.6.2 gosnappi 1.6.2 keng-controller 1.6.2-1 ixia-c-traffic-engine 1.8.0.12 keng-app-usage-reporter 0.0.1-52 ixia-c-protocol-engine 1.00.0.390 keng-layer23-hw-server 1.6.2-1 keng-operator 0.3.30 otg-gnmi-server 1.14.4 ixia-c-one 1.6.2-1 UHD400 1.3.3"},{"location":"releases/#release-featuress_26","title":"Release Features(s)","text":"<ul> <li> <p>Ixia Chassis &amp; Appliances(Novus, AresOne): Support added for DHCPv4 client interfaces to be used as source/destination for device traffic.</p> </li> <li> <p>In this the learned IPv4 address from the DHCPv4 server is automatically populated in <code>ipv4.src/dst</code> if the choice is set to <code>auto.dhcp</code>.</p> </li> </ul> <pre><code>  clientToServerFlow.SetName(\"ClientToServer\").TxRx().Device().\n  SetTxNames([]string{\"DHCPv4ClientName\"}).\n  SetRxNames([]string{\"DHCPv4ServerInterfaceName\"})\n  clientToServerFlowIp := clientToServerFlow.Packet().Add().Ipv4()\n  clientToServerFlowIp.Src().Auto().Dhcp()\n\n  serverToClientFlow.SetName(\"ServerToClient\").TxRx().Device().\n      SetTxNames([]string{\"DHCPv4ServerInterfaceName\"}).\n      SetRxNames([]string{\"DHCPv4ClientName\"})\n  serverToClientFlowIp := serverToClientFlow.Packet().Add().Ipv4()\n  serverToClientFlowIp.Dst().Auto().Dhcp()\n</code></pre> <p>Note: For DHCPv4 client to DHCPv4 server each flow supports only one source endpoint in <code>tx_rx.device.tx_names</code>, hence a separate flow has to be configured for each DHCPv4 client if <code>packet[i].ipv4.src.auto.dhcp</code> is set. * Ixia-C: Support added for multiple address groups in BGPv4/v6 routes.</p> <pre><code>  route = peer.V4Routes().Add().\n    SetNextHopIpv4Address(\"2.2.2.2\").\n    SetName(\"peer1.rr1\")\n\n  route.Addresses().Add().\n    SetAddress(\"20.20.20.1\").SetPrefix(32).SetCount(2).SetStep(2)\n\n  route.Addresses().Add().\n    SetAddress(\"20.20.21.1\").SetPrefix(32).SetCount(2).SetStep(2)\n</code></pre>"},{"location":"releases/#bug-fixs_21","title":"Bug Fix(s)","text":"<ul> <li>Ixia-C, Ixia Chassis &amp; Appliances(Novus, AresOne): Issue where if a BGPv4/v6 prefix with extended-community or community attributes was updated via a BGP Update with the extended-community or community attribute deleted without a Route Withdraw in between , the subsequent get_states call on the bgp prefixes would incorrectly continue to show the extended-community or community attributes learned via the previous received Update is fixed.</li> <li>Ixia-C: Issue where If a test was setup such that only test port would initiate ARP/ND and time taken to configure the soft-DUT connected to the test port was taking extended time such that it would not respond to ARP/ND requests within 10s, ARP/ND procedures would fail resulting in test failures in ARP/ND verification step is fixed.</li> <li>Ixia-C: Issue where if a IPv6 address on the emulated interface was configured in non-shortest format e.g.  <code>2001:0db8::192:0:2:2</code> instead of <code>2001:db8::192:0:2:2</code> (notice the redundant leading 0 in :0db8), the test port would not initiate IPv6 Neighbor Discovery for corresponding IPv6 gateway result in Neighbor Discovery failure is fixed.</li> <li>Keng-Operator: Some fixes are provided to handle security warnings raised by k8s security scanning tool such as <code>&lt;i&gt;'container \"manager\" in Deployment \"ixiatg-op-controller-manager\" does not set readOnlyRootFilesystem: true in its securityContext. This setting is encouraged because it can prevent attackers from writing malicious binaries into runnable locations in the container filesystem.'``&lt;/i&gt;</code>.</li> <li>UHD400: Issue is fixed where <code>frames_rx</code> is reported twice of <code>frames_tx</code> in <code>flow_metrics</code> is fixed.</li> </ul>"},{"location":"releases/#known-issues_27","title":"Known Issues","text":"<ul> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): If <code>keng-layer23-hw-server</code> version is upgraded/downgraded, the ports which will be used from this container must be rebooted once before running the tests.</li> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): <code>StartProtocols</code>/<code>set_control_state.protocol.all.start</code> can get stuck till the time all DHPCv4 clients receive the leased IPv4 addresses from the DHCPv4 server/relay agent. This may result in getting <code>\"context deadline exceeded\"</code> error in the test program.</li> <li>UHD400: Packets will not be transmitted if <code>flows[i].rate.pps</code> is less than 50.</li> <li>UHD400: <code>values</code> for fields in flow packet headers can be created with maximum length of 1000 values.</li> <li>Ixia-C: Flow Tx is incremented for flow with tx endpoints as LAG, even if no packets are sent on the wire when all active links of the LAG are down.</li> <li>Ixia-C: Supported value for <code>flows[i].metrics.latency.mode</code> is <code>cut_through</code>.</li> <li>Ixia-C: The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>Ixia-C: When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets.</li> </ul>"},{"location":"releases/#release-v151-12","title":"Release  v1.5.1-12","text":"<p>14th June, 2024</p>"},{"location":"releases/#build-details_28","title":"Build Details","text":"Component Version Open Traffic Generator API 1.5.1 snappi 1.5.1 gosnappi 1.5.1 keng-controller 1.5.1-12 ixia-c-traffic-engine 1.8.0.12 keng-app-usage-reporter 0.0.1-52 ixia-c-protocol-engine 1.00.0.383 keng-layer23-hw-server 1.5.1-6 keng-operator 0.3.29 otg-gnmi-server 1.14.2 ixia-c-one 1.5.1-12 UHD400 1.2.9"},{"location":"releases/#release-featuress_27","title":"Release Features(s)","text":"<ul> <li> <p>Ixia Chassis &amp; Appliances(Novus, AresOne): gNMI support for <code>GetStates</code> of DHCP Server added.</p> </li> <li> <p>DHCPv4 Server</p> </li> </ul> <p><pre><code>  # States information\n  dhcpv4-servers/dhcpv4-servers[name=serverName]/state/leases\n</code></pre> * UHD400: Value-list support added for IPv4 <code>dscp</code> field.</p> <pre><code>  flowEth := flow.Packet().Add().Ethernet()\n  .... \n  ipv4 := flow.Packet().Add().ipv4()\n    ipv4.Src().SetValue(srcAddr)\n    ipv4.Dst().SetValue(dstAddr)\n    ipv4.Priority().Dscp().Phb().SetValues([]uint32{10,12,14,18 ...})\n</code></pre>"},{"location":"releases/#bug-fixs_22","title":"Bug Fix(s)","text":"<ul> <li>Ixia-C: Issue where withdrawing BGP/BGP+ routes using <code>set_control_state.protocol.route.withdraw</code> was failing in multi-nic topology is fixed.</li> <li>Ixia Chassis &amp; Appliances(AresOne): Issue where after running BGP/BGP+ tests on multi-nic ports would result intermittently in <code>context deadline</code> errors for subsequent tests/sub tests is fixed.</li> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): Issue where after running tests involving continuous connect/reconnect of test ports for long duration (e.g. 2 - 3 hrs) would result in intermittent <code>context deadline</code> errors for a bunch of consecutive tests is fixed.</li> </ul>"},{"location":"releases/#known-issues_28","title":"Known Issues","text":"<ul> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): If <code>keng-layer23-hw-server</code> version is upgraded/downgraded, the ports which will be used from this container must be rebooted once before running the tests.</li> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): <code>StartProtocols</code>/<code>set_control_state.protocol.all.start</code> can get stuck till the time all DHPCv4 clients receive the leased IPv4 addresses from the DHCPv4 server/relay agent. This may result in getting <code>\"context deadline exceeded\"</code> error in the test program.</li> <li>UHD400: Packets will not be transmitted if <code>flows[i].rate.pps</code> is less than 50.</li> <li>UHD400: <code>values</code> for fields in flow packet headers can be created with maximum length of 1000 values.</li> <li>Ixia-C: Flow Tx is incremented for flow with tx endpoints as LAG, even if no packets are sent on the wire when all active links of the LAG are down.</li> <li>Ixia-C: Supported value for <code>flows[i].metrics.latency.mode</code> is <code>cut_through</code>.</li> <li>Ixia-C: The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>Ixia-C: When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets.</li> </ul>"},{"location":"releases/#release-v151-3","title":"Release  v1.5.1-3","text":"<p>1st June, 2024</p>"},{"location":"releases/#build-details_29","title":"Build Details","text":"Component Version Open Traffic Generator API 1.5.1 snappi 1.5.1 gosnappi 1.5.1 keng-controller 1.5.1-3 ixia-c-traffic-engine 1.8.0.12 keng-app-usage-reporter 0.0.1-52 ixia-c-protocol-engine 1.00.0.383 keng-layer23-hw-server 1.5.1-4 keng-operator 0.3.29 otg-gnmi-server 1.14.2 ixia-c-one 1.5.1-3 UHD400 1.2.8"},{"location":"releases/#release-featuress_28","title":"Release Features(s)","text":"<ul> <li> <p>Ixia Chassis &amp; Appliances(Novus, AresOne): Support added for DHCPv4 Client and Server in control plane. details</p> </li> <li> <p>User will be the able to configure DHCPv4 Client and Server by the following code snippet. More comprehensive B2B example</p> </li> </ul> <p><pre><code>  // Configure a DHCP Client\n    dhcpclient := d1Eth1.Dhcpv4Interfaces().Add().\n        SetName(\"p1d1dhcpv41\")\n\n    dhcpclient.FirstServer()\n    dhcpclient.ParametersRequestList().\n        SetSubnetMask(true).\n        SetRouter(true).\n        SetRenewalTimer(true)\n\n  // Configure a DHCP Server\n    d2Dhcpv4Server := d2.DhcpServer().Ipv4Interfaces().Add().\n        SetName(\"p2d1dhcpv4server\")\n\n    d2Dhcpv4Server.SetIpv4Name(\"p2d1ipv4\").AddressPools().\n        Add().SetName(\"pool1\").\n        SetLeaseTime(3600).\n        SetStartAddress(\"100.1.100.1\").\n        SetStep(1).\n        SetCount(1).\n        SetPrefixLength(16).Options().SetRouterAddress(\"100.1.0.1\").SetEchoRelayWithTlv82(true)\n</code></pre> * Ixia Chassis &amp; Appliances(Novus, AresOne): gNMI support added to fetch DHCPv4 Client and Server statistics.</p> <ul> <li>DHCPv4 Client</li> </ul> <pre><code>  # Combined metrics and states information\n  dhcpv4-clients/dhcpv4-client[name=clientName]/state\n\n  # Metrics information \n  dhcpv4-clients/dhcpv4-client[name=clientName]/state/counters\n\n  # States information\n  dhcpv4-clients/dhcpv4-client[name=clientName]/state/interface\n</code></pre> <ul> <li>DHCPv4 Server</li> </ul> <pre><code>  # Combined metrics and states information\n  dhcpv4-servers/dhcpv4-servers[name=serverName]/state\n\n  # Metrics information\n  dhcpv4-servers/dhcpv4-servers[name=serverName]/state/counters\n\n  # States information\n  dhcpv4-servers/dhcpv4-servers[name=serverName]/state/leases (For now it will return empty responses.)\n</code></pre> <p>Note: Support for <code>GetStates</code>/<code>dhcpv4-servers/dhcpv4-servers[name=serverName]/state/leases</code> of DHCP Server will be provided in subsequent release.</p>"},{"location":"releases/#bug-fixs_23","title":"Bug Fix(s)","text":"<ul> <li>UHD400: An issue has been fixed where, Despite proper ARP resolution, packets of <code>flows</code> of type <code>device</code> might not get forwarded by the DUT, resulting in 0 <code>rx</code> statistics.   This issue is visible for UHD400/ixia-c releases up to <code>v1.5.0-1</code>.</li> </ul>"},{"location":"releases/#known-issues_29","title":"Known Issues","text":"<ul> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): <code>set_control_state.protocol.all.start</code> can get stuck till the time all DHPCv4 clients receive the leased IPv4 addresses from the DHCPv4 server/relay agent. This may result in getting <code>\"context deadline exceeded\"</code> error in the test program.</li> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): If <code>keng-layer23-hw-server</code> version is upgraded/downgraded, the ports which will be used from this container must be rebooted once before running the tests.</li> <li>UHD400: Packets will not be transmitted if <code>flows[i].rate.pps</code> is less than 50.</li> <li>UHD400: <code>values</code> for fields in flow packet headers can be created with maximum length of 1000 values.</li> <li>Ixia-C: Flow Tx is incremented for flow with tx endpoints as LAG, even if no packets are sent on the wire when all active links of the LAG are down.</li> <li>Ixia-C: Supported value for <code>flows[i].metrics.latency.mode</code> is <code>cut_through</code>.</li> <li>Ixia-C: The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>Ixia-C: When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets.</li> </ul>"},{"location":"releases/#release-v150-1","title":"Release  v1.5.0-1","text":"<p>23rd May, 2024</p>"},{"location":"releases/#build-details_30","title":"Build Details","text":"Component Version Open Traffic Generator API 1.5.0 snappi 1.5.0 gosnappi 1.5.0 keng-controller 1.5.0-1 ixia-c-traffic-engine 1.8.0.7 keng-app-usage-reporter 0.0.1-52 ixia-c-protocol-engine 1.00.0.382 keng-layer23-hw-server 1.5.0-1 keng-operator 0.3.28 otg-gnmi-server 1.14.1 ixia-c-one 1.5.0-1 UHD400 1.2.7"},{"location":"releases/#bug-fixs_24","title":"Bug Fix(s)","text":"<ul> <li>Ixia-C: An issue has been detected whereby some internal certificates used in the ixia-c containerized solution has expired. This is fixed in this patch build.</li> </ul> <p>The most common manifestation of this is that despite proper ARP resolution, Traffic Start in tests will fail in combined protocol-engine/traffic-engine setups with <code>Error occurred while starting flows: [error starting tx port &lt;portname&gt;: unsuccessful Response: MAC address resolution failed for IP: &lt;ip address&gt;  ]</code>.</p> <p>This issue should not affect standalone traffic-engine setups using 'port' or raw traffic flows.</p> <p>This issue is visible for ixia-c community releases starting from <code>v0.1.0-3</code> to <code>v1.4.0-15</code>.</p>"},{"location":"releases/#known-issues_30","title":"Known Issues","text":"<ul> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): If <code>keng-layer23-hw-server</code> version is upgraded/downgraded, the ports which will be used from this container must be rebooted once before running the tests.</li> <li>UHD400: Packets will not be transmitted if <code>flows[i].rate.pps</code> is less than 50.</li> <li>UHD400: <code>values</code> for fields in flow packet headers can be created with maximum length of 1000 values.</li> <li>Ixia-C: Flow Tx is incremented for flow with tx endpoints as LAG, even if no packets are sent on the wire when all active links of the LAG are down.</li> <li>Ixia-C: Supported value for <code>flows[i].metrics.latency.mode</code> is <code>cut_through</code>.</li> <li>Ixia-C: The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>Ixia-C: When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets.</li> </ul>"},{"location":"releases/#release-v140-15","title":"Release  v1.4.0-15","text":"<p>20th May, 2024</p>"},{"location":"releases/#build-details_31","title":"Build Details","text":"Component Version Open Traffic Generator API 1.4.0 snappi 1.4.0 gosnappi 1.4.0 keng-controller 1.4.0-15 ixia-c-traffic-engine 1.8.0.3 keng-app-usage-reporter 0.0.1-52 ixia-c-protocol-engine 1.00.0.379 keng-layer23-hw-server 1.4.0-3 keng-operator 0.3.28 otg-gnmi-server 1.13.18 ixia-c-one 1.4.0-15 UHD400 1.2.7"},{"location":"releases/#bug-fixs_25","title":"Bug Fix(s)","text":"<ul> <li>Ixia-C, Ixia Chassis &amp; Appliances(Novus, AresOne), UHD400: Issue is fixed where metric columns were being returned that were not part of the requested metric columns in the <code>get_metrics</code> request for <code>port</code>/<code>flow</code>.</li> <li>Ixia-C, Ixia Chassis &amp; Appliances(Novus, AresOne), UHD400 Issue where BGP learned information intermittently fails to correctly fetch information from peers across multiple test ports is fixed.</li> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): Issue where <code>flow_metrics[i].timestamps.first_timestamp_ns/last_timestamp_ns</code> is being returned with wrong values is fixed.</li> </ul>"},{"location":"releases/#known-issues_31","title":"Known Issues","text":"<ul> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): If <code>keng-layer23-hw-server</code> version is upgraded/downgraded, the ports which will be used from this container must be rebooted once before running the tests.</li> <li>UHD400: Packets will not be transmitted if <code>flows[i].rate.pps</code> is less than 50.</li> <li>UHD400: <code>values</code> for fields in flow packet headers can be created with maximum length of 1000 values.</li> <li>Ixia-C: Flow Tx is incremented for flow with tx endpoints as LAG, even if no packets are sent on the wire when all active links of the LAG are down.</li> <li>Ixia-C: Supported value for <code>flows[i].metrics.latency.mode</code> is <code>cut_through</code>.</li> <li>Ixia-C: The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>Ixia-C: When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets.</li> </ul>"},{"location":"releases/#release-v140-1","title":"Release  v1.4.0-1","text":"<p>7th May, 2024</p>"},{"location":"releases/#build-details_32","title":"Build Details","text":"Component Version Open Traffic Generator API 1.4.0 snappi 1.4.0 gosnappi 1.4.0 keng-controller 1.4.0-1 ixia-c-traffic-engine 1.6.0.167 keng-app-usage-reporter 0.0.1-52 ixia-c-protocol-engine 1.00.0.379 keng-layer23-hw-server 1.4.0-2 keng-operator 0.3.28 otg-gnmi-server 1.13.18 ixia-c-one 1.4.0-1 UHD400 1.2.7"},{"location":"releases/#release-featuress_29","title":"Release Features(s)","text":"<ul> <li> <p>Ixia-C, Ixia Chassis &amp; Appliances(Novus, AresOne), UHD400: Support added for fetching information about received extended community attributes in <code>get_states</code> for <code>bgp_prefixes</code>.</p> </li> <li> <p>OTG support details. For more details and example please refer here.</p> <p><pre><code>monitor/get_state/responses/200/bgp_prefixes/ipv[4|6]_unicast_prefixes/extended_communities\n</code></pre>   - gNMI support details.</p> <pre><code>  bgp-peers/bgp-peer[name=*]/unicast-ipv4-prefixes/unicast-ipv4-prefix/state/extended-community\n\n  bgp-peers/bgp-peer[name=*]/unicast-ipv6-prefixes/unicast-ipv6-prefix/state/extended-community\n</code></pre> </li> </ul> <p>Note: To store the received routes, please set <code>devices[i].bgp.ipv4/v6_interfaces[j].peers[k].learned_information_filter.unicast_ipv4/v6_prefix=true</code>. * OTG-gNMI-Server: Support added for get software and sdk version of keng-controller. details</p> <ul> <li>gNMI query path     <pre><code>/components/component[name=keng-controller]/\n</code></pre></li> </ul>"},{"location":"releases/#bug-fixs_26","title":"Bug Fix(s)","text":"<ul> <li>Ixia-C, Ixia Chassis &amp; Appliances(Novus, AresOne), UHD400: Issue is fixed where metric columns were being returned that were not part of the requested metric columns in the <code>get_metrics</code> request for <code>bgpv4</code>/<code>bgpv6</code>/<code>isis</code>/<code>rsvp</code>/<code>lag</code>/<code>lacp</code>.</li> <li>Ixia-C: Issue is fixed where extended communities of type Transitive IPv4 were being sent with reversed bytes on the wire is fixed.</li> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): Issue where storage of learned LSPs for ISIS was always enabled is now fixed. User can enable it by setting <code>devices[i].isis.basic.learned_lsp_filter=true</code>.</li> <li>UHD400: Issue where tx and rx statistics returned erroneously for multiple runs on same traffic config is now fixed.</li> </ul>"},{"location":"releases/#known-issues_32","title":"Known Issues","text":"<ul> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): If <code>keng-layer23-hw-server</code> version is upgraded/downgraded, the ports which will be used from this container must be rebooted once before running the tests.</li> <li>UHD400: <code>values</code> for fields in flow packet headers can be created with maximum length of 1000 values.</li> <li>Ixia-C: Flow Tx is incremented for flow with tx endpoints as LAG, even if no packets are sent on the wire when all active links of the LAG are down.</li> <li>Ixia-C: Supported value for <code>flows[i].metrics.latency.mode</code> is <code>cut_through</code>.</li> <li>Ixia-C: The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>Ixia-C: When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets.</li> </ul>"},{"location":"releases/#release-v130-2","title":"Release  v1.3.0-2","text":"<p>19th April, 2024</p>"},{"location":"releases/#build-details_33","title":"Build Details","text":"Component Version Open Traffic Generator API 1.3.0 snappi 1.3.0 gosnappi 1.3.0 keng-controller 1.3.0-2 ixia-c-traffic-engine 1.6.0.167 keng-app-usage-reporter 0.0.1-52 ixia-c-protocol-engine 1.00.0.378 keng-layer23-hw-server 1.3.0-4 keng-operator 0.3.28 otg-gnmi-server 1.13.15 ixia-c-one 1.3.0-2 UHD400 1.2.4"},{"location":"releases/#release-featuress_30","title":"Release Features(s)","text":"<ul> <li>Ixia-C, Ixia Chassis &amp; Appliances(Novus, AresOne), UHD400: Support added for advertising Segment Routing Traffic Engineering(SR-TE) policy using <code>replay_updates</code>.   <pre><code>  peer.Capability().SetIpv4SrTePolicy(true) \n  updateReplayBlock := peer.ReplayUpdates().StructuredPdus()\n  adv := updateReplayBlock.Updates().Add()\n  ...\n  adv.PathAttributes().\n    Community().\n    Add().\n    NoAdvertised()\n  ipv4_sr_routes_adv := adv.PathAttributes().\n    MpReach().\n    Ipv4Srpolicy()\n  ipv4_sr_routes_adv.SetEndpoint(\"0.0.0.0\").\n    SetColor(100).\n    SetDistinguisher(1)\n  sr := adv.PathAttributes().\n    TunnelEncapsulation().\n    SrPolicy()\n  sr.Preference().SetValue(3)\n  sr.PolicyName().SetValue(\"TypeA Policy\")\n  ...\n  sr.BindingSegmentIdentifier().Mpls().\n    SetFlagSpecifiedBsidOnly(true).\n    MplsSid().\n    SetLabel(22222)\n  segmentList := sr.SegmentList().Add()\n  segmentList.Weight().\n    SetValue(200)\n  typeA := segmentList.Segments().Add().TypeA()\n  typeA.Flags().\n    SetSFlag(true)\n  typeA.MplsSid().\n    SetLabel(10000)\n  //More segments and segments lists\n</code></pre></li> <li>Ixia-C : Support added for zero and custom checksum in <code>TCP/UDP/ICMPv4/v6/IPv4/GRE</code> packet templates in flows.   <pre><code>  udp := cfg.Flows().Add().Packet().Add().Udp()\n  udp.Checksum().SetCustom(0)\n</code></pre></li> <li>Ixia-C : DPDK version upgraded from v21.11 to v23.11 for standalone <code>ixia-c-traffic-engine</code> container based deployment in DPDK mode.</li> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): Support added for IPv4/v6 route ranges with varying number of <code>communities</code>/<code>extended_communities</code> for BGP/BGP+ peers.   <pre><code>  route.Communities().Add().\n    SetAsNumber(65534).\n    SetAsCustom(20410).\n    SetType(gosnappi.BgpCommunityType.MANUAL_AS_NUMBER)\n</code></pre></li> </ul>"},{"location":"releases/#bug-fixs_27","title":"Bug Fix(s)","text":"<ul> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): Issue is fixed where sometimes fetching ISIS <code>get_states</code> would result in <code>Error occurred while fetching isis lsps states:Index was outside the bounds of the array</code> exception.</li> <li>Ixia-C, Ixia Chassis &amp; Appliances(Novus, AresOne), UHD400: Issue is fixed where sometimes misleading warnings were being returned from <code>set_config</code> when running consecutive <code>replay_updates</code> tests with different types of BGP peers configured(iBGP/eBGP).</li> <li>Ixia-C : Memory leak fixed for BGPv4/v6 peers with large number of routes configured.</li> </ul>"},{"location":"releases/#known-issues_33","title":"Known Issues","text":"<ul> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): If <code>keng-layer23-hw-server</code> version is upgraded/downgraded, the ports which will be used from this container must be rebooted once before running the tests.</li> <li>UHD400: <code>values</code> for fields in flow packet headers can be created with maximum length of 1000 values.</li> <li>UHD400: Port statistics are not getting cleared on <code>SetConfig</code>.</li> <li>Ixia-C: Flow Tx is incremented for flow with tx endpoints as LAG, even if no packets are sent on the wire when all active links of the LAG are down.</li> <li>Ixia-C: Supported value for <code>flows[i].metrics.latency.mode</code> is <code>cut_through</code>.</li> <li>Ixia-C: The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>Ixia-C: When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets.</li> </ul>"},{"location":"releases/#release-v110-21","title":"Release  v1.1.0-21","text":"<p>29th March, 2024</p>"},{"location":"releases/#build-details_34","title":"Build Details","text":"Component Version Open Traffic Generator API 1.1.0 snappi 1.1.1 gosnappi 1.1.1 keng-controller 1.1.0-21 ixia-c-traffic-engine 1.6.0.109 keng-app-usage-reporter 0.0.1-52 ixia-c-protocol-engine 1.00.0.375 keng-layer23-hw-server 1.1.0-6 keng-operator 0.3.28 otg-gnmi-server 1.13.14 ixia-c-one 1.1.0-21 UHD400 1.2.4"},{"location":"releases/#release-featuress_31","title":"Release Features(s)","text":"<ul> <li>Ixia Chassis &amp; Appliances(Novus + AresOne): Support added for BGP/BGP+ update replay. This feature can be used to configure the BGP/BGP+ peer to send series of updates containing advertised or withdrawn IPv4/v6 unicast routes.</li> </ul> <p><pre><code>  updateReplayBlock := bgpPeer.ReplayUpdates().StructuredPdus()\n  adv := updateReplayBlock.Updates().Add()\n  adv.PathAttributes().SetOrigin(gosnappi.BgpAttributesOrigin.IGP)\n  adv.PathAttributes().AsPath().\n        FourByteAsPath().\n        Segments().\n        Add().\n        SetType(gosnappi.BgpAttributesFourByteAsPathSegmentType.AS_SEQ).\n        SetAsNumbers([]uint32{2222, 1113, 7000, 80000})\n\n  adv.PathAttributes().Community().Add().CustomCommunity().SetAsNumber(65534).SetCustom(\"4FBA\")\n  adv.PathAttributes().Community().Add().CustomCommunity().SetAsNumber(65534).SetCustom(\"AAAA\")\n  ....\n  adv.PathAttributes().MpReach(). NextHop().SetIpv4(\"1.1.1.2\")\n  ipv4_unicast_routes_adv := adv.PathAttributes().MpReach().Ipv4Unicast() \n  ipv4_unicast_routes_adv.Add().SetAddress(\"10.10.10.10\").SetPrefix(32)\n  ...  \n</code></pre> * UHD400: Support added for setting ports state using <code>set_control_state.port.link.state=up/down</code>. * snappi: support added for python <code>v3.12</code>.</p>"},{"location":"releases/#bug-fixs_28","title":"Bug Fix(s)","text":"<ul> <li>Ixia-C: Issue where BGP/BGP+ sessions were intermittently flapping for large number of routes such as 1 million is fixed.</li> <li>Ixia-C: Issue where if <code>priority</code> bits were set in VLAN header for incoming ISIS PDUs session was not coming up is fixed.</li> <li>Ixia Chassis &amp; Appliances(AresOne): Issue where port stats were not coming for port type <code>TA1-KD08D</code> of AresOne is fixed.</li> <li>UHD400: Intermittent issue where <code>rx</code> counters were not being incremented for flow stats is fixed.</li> </ul>"},{"location":"releases/#known-issues_34","title":"Known Issues","text":"<ul> <li>UHD400: <code>values</code> for fields in flow packet headers can be created with maximum length of 1000 values.</li> <li>UHD400: Port statistics are not getting cleared on <code>SetConfig</code>.</li> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): If <code>keng-layer23-hw-server</code> version is upgraded/downgraded, the ports which will be used from this container must be rebooted once before running the tests.</li> <li>Ixia-C: Flow Tx is incremented for flow with tx endpoints as LAG, even if no packets are sent on the wire when all active links of the LAG are down.</li> <li>Ixia-C: Supported value for <code>flows[i].metrics.latency.mode</code> is <code>cut_through</code>.</li> <li>Ixia-C: The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>Ixia-C: When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets.</li> </ul>"},{"location":"releases/#release-v110-12","title":"Release  v1.1.0-12","text":"<p>22nd March, 2024</p>"},{"location":"releases/#build-details_35","title":"Build Details","text":"Component Version Open Traffic Generator API 1.1.0 snappi 1.1.0 gosnappi 1.1.0 keng-controller 1.1.0-12 ixia-c-traffic-engine 1.6.0.109 keng-app-usage-reporter 0.0.1-52 ixia-c-protocol-engine 1.00.0.370 keng-layer23-hw-server 1.1.0-5 keng-operator 0.3.28 otg-gnmi-server 1.13.13 ixia-c-one 1.1.0-12 UHD400 1.2.3"},{"location":"releases/#release-featuress_32","title":"Release Features(s)","text":"<ul> <li> <p>UHD400: Support for LAG and LACP protocol is added.</p> </li> <li> <p>LACP parameters are supported as per LAG/LACP section in OTG model <code>&lt;a href=\"https://redocly.github.io/redoc/?url=https://github.com/open-traffic-generator/models/releases/download/v1.1.0/openapi.yaml\"&gt;&lt;img alt=\"Release v1.1.0\" src=\"https://img.shields.io/badge/release-v1.1.0-brightgreen\"&gt;``&lt;/a&gt;</code></p> </li> <li>Per Port LACP Metrics can be retrieved using GNMI as per otg-models-yang <code>&lt;a href=\"https://github.com/open-traffic-generator/models-yang/blob/main/artifacts/open-traffic-generator-lacp.txt\"&gt;</code>details<code>&lt;/a&gt;</code>.</li> <li>Per LAG Metrics can be retrieved using GNMI as per otg-models-yang <code>&lt;a href=\"https://github.com/open-traffic-generator/models-yang/blob/main/artifacts/open-traffic-generator-lag.txt\"&gt;</code>details<code>&lt;/a&gt;</code>.</li> <li>UHD400: Support for data traffic over LAG is added for <code>rx</code> ports.</li> </ul>"},{"location":"releases/#known-issues_35","title":"Known Issues","text":"<ul> <li>UHD400: <code>values</code> for fields in flow packet headers can be created with maximum length of 1000 values.</li> <li>UHD400: Port statistics are not getting cleared on <code>SetConfig</code>.</li> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): If <code>keng-layer23-hw-server</code> version is upgraded/downgraded, the ports which will be used from this container must be rebooted once before running the tests.</li> <li>Ixia-C: Flow Tx is incremented for flow with tx endpoints as LAG, even if no packets are sent on the wire when all active links of the LAG are down.</li> <li>Ixia-C: Supported value for <code>flows[i].metrics.latency.mode</code> is <code>cut_through</code>.</li> <li>Ixia-C: The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>Ixia-C: When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets.</li> </ul>"},{"location":"releases/#release-v110-10","title":"Release  v1.1.0-10","text":"<p>20th March, 2024</p>"},{"location":"releases/#build-details_36","title":"Build Details","text":"Component Version Open Traffic Generator API 1.1.0 snappi 1.1.0 gosnappi 1.1.0 keng-controller 1.1.0-10 ixia-c-traffic-engine 1.6.0.109 keng-app-usage-reporter 0.0.1-37 ixia-c-protocol-engine 1.00.0.370 keng-layer23-hw-server 1.1.0-5 keng-operator 0.3.28 otg-gnmi-server 1.13.12 ixia-c-one 1.1.0-10 UHD400 1.1.1"},{"location":"releases/#release-featuress_33","title":"Release Features(s)","text":"<ul> <li>Ixia-C &amp; UHD400: Support added for BGP/BGP+ update replay. This feature can be used to configure the BGP/BGP+ peer to send series of updates containing advertised or withdrawn IPv4/v6 unicast routes.</li> </ul> <pre><code>  updateReplayBlock := bgpPeer.ReplayUpdates().StructuredPdus()\n  adv := updateReplayBlock.Updates().Add()\n  adv.PathAttributes().SetOrigin(gosnappi.BgpAttributesOrigin.IGP)\n  adv.PathAttributes().AsPath().\n        FourByteAsPath().\n        Segments().\n        Add().\n        SetType(gosnappi.BgpAttributesFourByteAsPathSegmentType.AS_SEQ).\n        SetAsNumbers([]uint32{2222, 1113, 7000, 80000})\n  ....\n  adv.PathAttributes().MpReach(). NextHop().SetIpv4(\"1.1.1.2\")\n  ipv4_unicast_routes_adv := adv.PathAttributes().MpReach().Ipv4Unicast() \n  ipv4_unicast_routes_adv.Add().SetAddress(\"10.10.10.10\").SetPrefix(32)\n  ...  \n</code></pre> <ul> <li>custom attributes can be added in following manner.</li> </ul> <pre><code>  adv1.PathAttributes().\n          OtherAttributes().Add().\n          SetFlagOptional(true).\n          SetFlagTransitive(true).\n          SetType(8).\n          SetRawValue(\"04ffff0007\")\n</code></pre> <ul> <li>Complete custom update packet can be added by using <code>RawBytes</code> option as shown below.</li> </ul> <p><pre><code>  updateReplayBlock := d1BgpIpv4Interface1Peer1.ReplayUpdates().RawBytes()\n      adv1 := updateReplayBlock.Updates().Add()\n      adv1.SetUpdateBytes(\"400101004002004005040\")\n</code></pre> * Ixia-C: Value-list support added for IPv4 <code>dscp</code> field.</p> <p><pre><code>  flowEth := flow.Packet().Add().Ethernet()\n  .... \n  ipv4 := flow.Packet().Add().ipv4()\n    ipv4.Src().SetValue(srcAddr)\n    ipv4.Dst().SetValue(dstAddr)\n    ipv4.Priority().Dscp().Phb().SetValues([]uint32{10,12,14,18 ...})\n</code></pre> * OTG-gNMI-Server: Support added for <code>InUpdates</code>, <code>OutUpdates</code>, <code>InOpens</code>, <code>OutOpens</code>, <code>InNotifications</code> and <code>OutNotifications</code> for gNMI path <code>/bgp-peers/bgp-peer/state/counters</code>.</p>"},{"location":"releases/#bug-fixs_29","title":"Bug Fix(s)","text":"<ul> <li>Ixia Chassis &amp; Appliances(Novus + AresOne): Issue where for protocol over LAG scenarios (e.g. BGP over LAG) <code>get_metrics</code> was returning empty protocol metrics, is fixed.</li> <li>Ixia-C: Issue where <code>get_states.ipv4/v6_neighbors</code> for interfaces created over LAG was failing, is now fixed.</li> <li>Ixia-C: Issue where <code>peers[i].advanced.time_to_live</code> attribute was not working as expected for BGPv4 peers is fixed.</li> </ul>"},{"location":"releases/#known-issues_36","title":"Known Issues","text":"<ul> <li>UHD400: <code>values</code> for fields in flow packet headers can be created with maximum length of 1000 values.</li> <li>UHD400: Port statistics are not getting cleared on <code>SetConfig</code>.</li> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): If <code>keng-layer23-hw-server</code> version is upgraded/downgraded, the ports which will be used from this container must be rebooted once before running the tests.</li> <li>Ixia-C: Flow Tx is incremented for flow with tx endpoints as LAG, even if no packets are sent on the wire when all active links of the LAG are down.</li> <li>Ixia-C: Supported value for <code>flows[i].metrics.latency.mode</code> is <code>cut_through</code>.</li> <li>Ixia-C: The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>Ixia-C: When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets.</li> </ul>"},{"location":"releases/#release-v100-104","title":"Release  v1.0.0-104","text":"<p>1st March, 2024</p>"},{"location":"releases/#build-details_37","title":"Build Details","text":"Component Version Open Traffic Generator API 1.0.2 snappi 1.0.2 gosnappi 1.0.2 keng-controller 1.0.0-104 ixia-c-traffic-engine 1.6.0.109 keng-app-usage-reporter 0.0.1-37 ixia-c-protocol-engine 1.00.0.367 keng-layer23-hw-server 1.0.2-4 keng-operator 0.3.28 otg-gnmi-server 1.13.10 ixia-c-one 1.0.1-104 UHD400 1.1.1"},{"location":"releases/#release-featuress_34","title":"Release Features(s)","text":"<ul> <li>UHD400: Value-list support added for IPv6 flow label.</li> </ul> <p><pre><code>  flowEth := flow.Packet().Add().Ethernet()\n  .... \n  ipv6 := flow.Packet().Add().Ipv6()\n    ipv6.Src().SetValue(srcAddr)\n    ipv6.Dst().SetValue(dstAddr)\n    ipv6.FlowLabel().SetValues([]uint32{1000,2000, ...})\n</code></pre> * UHD400: Support added for egress tracking on DSCP field in IPv4 traffic header using Priority.Raw field with appropriate offsets.</p> <p><pre><code>  eth := flow.EgressPacket().Add().Ethernet()\n  ipv4 := flow.EgressPacket().Add().Ipv4()\n  ipv4PhbTag := ipv4.Priority().Raw().MetricTags().Add()\n  ipv4PhbTag.SetName(\"flow_ipv4_dscp_phb\")\n  ipv4PhbTag.SetOffset(0)\n  ipv4PhbTag.SetLength(6)\n    ipv4EcnTag := ipv4.Priority().Raw().MetricTags().Add()\n  ipv4EcnTag.SetName(\"flow_ipv4_dscp_ecn\")\n  ipv4EcnTag.SetOffset(6)\n  ipv4EcnTag.SetLength(2)\n</code></pre> * Ixia Chassis &amp; Appliances(Novus + AresOne), Ixia-C and UHD400: Support added for partial Start / Stop for ISIS .</p> <p><pre><code>  s := gosnappi.NewControlState()\n  isisRouters := s.Protocol().Isis().Routers()      \n  isisRouters.SetRouterNames(routerNames).SetState(\"up/down\")\n  _ , err := client.Api().SetControlState(s)\n</code></pre> * Ixia Chassis &amp; Appliances(Novus + AresOne): Support added for partial Start / Stop for BGP.</p> <p><pre><code>  s := gosnappi.NewControlState()\n  bgpPeers := s.Protocol().Bgp().Peers()      \n  bgpPeers.SetPeerNames(peerNames).SetState(\"up/down\")\n  _ , err := client.Api().SetControlState(s)\n</code></pre> * Ixia Chassis &amp; Appliances(Novus + AresOne) and Ixia-C: Support for all objects including ERO and RRO are now available for RSVP packet header.</p> <ul> <li>User can encode <code>rsvp</code> packet using <code>flows</code> and invoke <code>set_control_state.traffic.flow_transmit</code> to transmit the <code>rsvp</code> packets.</li> </ul> <pre><code>  f1.Packet().Add().Ethernet()\n  ip := f1.Packet().Add().Ipv4()\n  ip.Options().Add().SetChoice(\"router_alert\")\n  rsvp := f1.Packet().Add().Rsvp()\n  rsvpPathMsg := rsvp.MessageType().Path()\n  session := rsvpPathMsg.Objects().Add().ClassNum().Session().CType().LspTunnelIpv4()\n  session.Ipv4TunnelEndPointAddress().SetValue(\"2.2.2.2\")\n  session.TunnelId().SetValue(1)\n  session.ExtendedTunnelId().AsIpv4().SetValue(\"1.1.1.1\")\n  rsvpHop := rsvpPathMsg.Objects().Add().ClassNum().RsvpHop().CType().Ipv4()\n  rsvpHop.Ipv4Address().SetValue(\"1.1.2.1\")\n  rsvpPathMsg.Objects().Add().ClassNum().TimeValues()\n  rsvpPathMsg.Objects().Add().ClassNum().LabelRequest()\n  ero := rsvpPathMsg.Objects().Add().ClassNum().ExplicitRoute().CType().Type1()\n  ero.Subobjects().Add().Type().Ipv4Prefix().Ipv4Address().SetValue(\"1.1.3.1\")\n  ero.Subobjects().Add().Type().Ipv4Prefix().Ipv4Address().SetValue(\"1.1.4.1\")\n  sessionAttribute := rsvpPathMsg.Objects().Add().ClassNum().SessionAttribute().CType().LspTunnel()\n  sessionAttribute.SetSessionName(\"otg_test_port\")\n  senderTemplate := rsvpPathMsg.Objects().Add().ClassNum().SenderTemplate().CType().LspTunnelIpv4()\n  senderTemplate.Ipv4TunnelSenderAddress().SetValue(\"1.1.1.1\")\n  senderTemplate.LspId().SetValue(1)\n  senderTspec := rsvpPathMsg.Objects().Add().ClassNum().SenderTspec().CType().IntServ()\n  senderTspec.MaximumPacketSize().SetValue(1500)\n  senderTspec.SetPeakDataRate(1e+10)\n  rro := rsvpPathMsg.Objects().Add().ClassNum().RecordRoute().CType().Type1()\n  rro.Subobjects().Add().Type().Ipv4Address().Ipv4Address().SetValue(\"1.1.1.1\")\n  rro.Subobjects().Add().Type().Ipv4Address().Ipv4Address().SetValue(\"1.1.2.1\")\n</code></pre> <ul> <li>Note:<ul> <li>Variable field values within the flow using <code>increment</code>, <code>decrement</code> and <code>values</code> are not supported for <code>rsvp</code> fields.</li> <li>Tracking should not be enabled if intention is for device under test to consume the generated packets.</li> </ul> </li> </ul>"},{"location":"releases/#bug-fixs_30","title":"Bug Fix(s)","text":"<ul> <li>Ixia-C and UHD400: Intermittent issue is fixed where for certain ISIS L1+L2 test scenarios, ISIS Hello PDUs were not being transmitted from test ports.</li> <li>Ixia-C and UHD400: Potential deadlock during <code>SetConfig</code> related to creation of interfaces is fixed.</li> <li>Ixia-C and UHD400: Intermittent issue is fixed where ixia-c-protocol-engine container was restarting during BGP session establishment in certain scenarios.</li> <li>Ixia Chassis &amp; Appliances(AresOne): Issue where <code>SetConfig</code> returns error <code>Object reference not set to an instance of an object.</code> for AresOne ports (QSFP-DD-400GE+200G+100G+50G) is fixed.</li> <li>Ixia Chassis &amp; Appliances(Novus + AresOne): Issue where <code>SetConfig</code> returns error <code>Somehow &lt;lag_name&gt; not available within BGP portData</code> for BGP over LAG is fixed (Please refer to Known Issues section for issue related to BGP metrics returning empty values for BGP over LAG scenario).</li> </ul>"},{"location":"releases/#known-issues_37","title":"Known Issues","text":"<ul> <li>Ixia Chassis &amp; Appliances(Novus + AresOne): For protocol over LAG scenarios (e.g. BGP over LAG) <code>get_metrics</code> is returning empty protocol metrics.</li> <li>Ixia-C: Get neighbor states for a LAG member port fails.</li> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): If <code>keng-layer23-hw-server</code> version is upgraded/downgraded, the ports which will be used from this container must be rebooted once before running the tests.</li> <li>Ixia-C: Flow Tx is incremented for flow with tx endpoints as LAG, even if no packets are sent on the wire when all active links of the LAG are down.</li> <li>Ixia-C: Supported value for <code>flows[i].metrics.latency.mode</code> is <code>cut_through</code>.</li> <li>Ixia-C: The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>Ixia-C: When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets.</li> </ul>"},{"location":"releases/#release-v100-92","title":"Release  v1.0.0-92","text":"<p>22nd February, 2024</p>"},{"location":"releases/#build-details_38","title":"Build Details","text":"Component Version Open Traffic Generator API 1.0.1 snappi 1.0.1 gosnappi 1.0.1 keng-controller 1.0.0-92 ixia-c-traffic-engine 1.6.0.109 keng-app-usage-reporter 0.0.1-37 ixia-c-protocol-engine 1.00.0.360 keng-layer23-hw-server 1.0.1-4 keng-operator 0.3.28 otg-gnmi-server 1.13.9 ixia-c-one 1.0.1-1 UHD400 1.1.1"},{"location":"releases/#release-featuress_35","title":"Release Features(s)","text":"<ul> <li>UHD400: Enabling metric_tags for egress tracking is now supported for ethernet.src/ dst, vlan.id, vlan.priority, ipv4.src/ dst, ipv4.precedence, ipv6.src/ dst, ipv6.traffic_class</li> </ul> <pre><code>eth := flow.EgressPacket().Add().Ethernet()\nipv4 := flow.EgressPacket().Add().Ipv4()\nipv4Tag := ipv4.Dst().MetricTags().Add()\nipv4Tag.SetName(\"flow_ipv4_dst\")\nipv4Tag.SetOffset(22)\nipv4Tag.SetLength(10)\n</code></pre> <ul> <li>Limitations:<ul> <li>Maximum of 10 tracking bits is supported.</li> <li>Only a single flow is supported when egress tracking is enabled, except when the tracking header field is Vlan.priority, IPv4.precedence or IPv6.traffic_class. Multiple flows are supported when tracking is enabled on these fields.</li> <li>Tracking is supported on the last 10 bits of header fields, except for IPv4 src/ dst where first 5 bit tracking is also supported.</li> </ul> </li> <li>UHD400: Support is added for <code>values</code> on header fields ethernet.src /dst, ipv4.src /dst, ipv6.src /dst, vlan.id, tcp.src_port, tcp.dst_port, udp.src_port, udp.dst_port.</li> <li> <p>Ixia-C: Support added for <code>rsvp</code> Path Message PDU in raw traffic.</p> </li> <li> <p>User can encode <code>rsvp</code> packet using <code>flows</code> and invoke <code>set_control_state.traffic.flow_transmit</code> to transmit the <code>rsvp</code> packets.</p> </li> </ul> <pre><code>  f1.Packet().Add().Ethernet()\n  ip := f1.Packet().Add().Ipv4()\n  ip.Options().Add().SetChoice(\"router_alert\")\n  rsvp := f1.Packet().Add().Rsvp()\n  rsvpPathMsg := rsvp.MessageType().Path()\n  session := rsvpPathMsg.Objects().Add().ClassNum().Session().CType().LspTunnelIpv4()\n  session.Ipv4TunnelEndPointAddress().SetValue(\"2.2.2.2\")\n  session.TunnelId().SetValue(1)\n  session.ExtendedTunnelId().AsIpv4().SetValue(\"1.1.1.1\")\n  rsvpHop := rsvpPathMsg.Objects().Add().ClassNum().RsvpHop().CType().Ipv4()\n  rsvpHop.Ipv4Address().SetValue(\"1.1.2.1\")\n  rsvpPathMsg.Objects().Add().ClassNum().TimeValues()\n  rsvpPathMsg.Objects().Add().ClassNum().LabelRequest()\n  sessionAttribute := rsvpPathMsg.Objects().Add().ClassNum().SessionAttribute().CType().LspTunnel()\n  sessionAttribute.SetSessionName(\"otg_test_port\")\n  senderTemplate := rsvpPathMsg.Objects().Add().ClassNum().SenderTemplate().CType().LspTunnelIpv4()\n  senderTemplate.Ipv4TunnelSenderAddress().SetValue(\"1.1.1.1\")\n  senderTemplate.LspId().SetValue(1)\n  senderTspec := rsvpPathMsg.Objects().Add().ClassNum().SenderTspec().CType().IntServ()\n  senderTspec.MaximumPacketSize().SetValue(1500)\n  senderTspec.SetPeakDataRate(1e+10)\n</code></pre> <ul> <li>Note:<ul> <li>Variable field values within the flow using <code>increment</code>, <code>decrement</code> and <code>values</code> are not supported for <code>rsvp</code> fields.</li> <li>Optional objects <code>ClassNum().ExplicitRoute()</code> and <code>ClassNum().RecordRoute()</code> are not yet supported.</li> <li>Tracking should not be enabled if intention is for device under test to consume the generated packets.</li> </ul> </li> </ul>"},{"location":"releases/#bug-fixs_31","title":"Bug Fix(s)","text":"<ul> <li>keng-operator: Issue is fixed where <code>Ixia-C</code> containers would incorrectly signal readiness even when containers were not fully started in kne deployment, resulting in <code>SetConfig</code> and licensing errors.</li> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): Issue is fixed where <code>SetConfig</code> fails for a traffic flow where inner header (v4/v6) has DSCP value set.</li> </ul>"},{"location":"releases/#known-issues_38","title":"Known Issues","text":"<ul> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): If <code>keng-layer23-hw-server</code> version is upgraded/downgraded, the ports which will be used from this container must be rebooted once before running the tests.</li> <li>Ixia-C: Flow Tx is incremented for flow with tx endpoints as LAG, even if no packets are sent on the wire when all active links of the LAG are down.</li> <li>Ixia-C: Supported value for <code>flows[i].metrics.latency.mode</code> is <code>cut_through</code>.</li> <li>Ixia-C: The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>Ixia-C: When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets.</li> </ul>"},{"location":"releases/#release-v100-7","title":"Release  v1.0.0-7","text":"<p>5th February, 2024</p>"},{"location":"releases/#about","title":"About","text":"<p>This release introduces <code>snappi v1.0</code> and <code>keng-controller v1.0</code>. Backwards API compatibility will be maintained within  <code>1.x</code> versions of Open Traffic Generator, <code>go-snappi</code> and <code>snappi</code> APIs.</p>"},{"location":"releases/#build-details_39","title":"Build Details","text":"Component Version Open Traffic Generator API 1.0.0 snappi 1.0.0 gosnappi 1.0.0 keng-controller 1.0.0-7 ixia-c-traffic-engine 1.6.0.109 keng-app-usage-reporter 0.0.1-37 ixia-c-protocol-engine 1.00.0.358 keng-layer23-hw-server 1.0.0-1 keng-operator 0.3.22 otg-gnmi-server 1.13.8 ixia-c-one 1.0.0-7 UHD400 1.0.28"},{"location":"releases/#release-featuress_36","title":"Release Features(s)","text":"<ul> <li> <p>Ixia Chassis &amp; Appliances(Novus, AresOne): Support added for <code>snmpv2c</code> raw traffic.</p> </li> <li> <p>User can encode <code>snmpv2c</code> packet using <code>flows</code> and invoke <code>set_control_state.traffic.flow_transmit</code> to transmit the <code>snmpv2c</code> packets.</p> </li> </ul> <pre><code>  flowEth := flow.Packet().Add().Ethernet()\n  .... \n  flowIp := flow.Packet().Add().Ipv4()\n  ....\n  flowUdp := flow.Packet().Add().Udp()\n  ....\n  flowUdp.DstPort().SetValue(uint32(161)) // 161 = SNMP\n  flowSnmpv2c := flow.Packet().Add().Snmpv2C()\n  pdu := flowSnmpv2c.Data().GetRequest()\n  pdu.RequestId().SetValue(77777)\n  varBinds := pdu.VariableBindings().Add()\n  varBinds.SetObjectIdentifier(\n    \"1.3.6....\",\n  )\n</code></pre> <p>Note: Variable field values within the same flow using <code>increment</code>, <code>decrement</code> and <code>values</code> are not supported for <code>snmpv2c</code> fields. * Ixia Chassis &amp; Appliances(Novus, AresOne): Support added for <code>AresOne-M 800G`` load modules. For using this,</code>IXOS 10.00 <code>must be installed on the chassis. For other load modules, it will continue to work with</code>IXOS 9.20 and 9.30` setups.</p>"},{"location":"releases/#bug-fixs_32","title":"Bug Fix(s)","text":"<ul> <li>Ixia-C: Issue where <code>set_control_state.port.link.state</code> was not working when applied to member ports of a LAG is now fixed.</li> </ul>"},{"location":"releases/#known-issues_39","title":"Known Issues","text":"<ul> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): If <code>keng-layer23-hw-server</code> version is upgraded/downgraded, the ports which will be used from this container must be rebooted once before running the tests.</li> <li>Ixia-C: Flow Tx is incremented for flow with tx endpoints as LAG, even if no packets are sent on the wire when all active links of the LAG are down.</li> <li>Ixia-C: Supported value for <code>flows[i].metrics.latency.mode</code> is <code>cut_through</code>.</li> <li>Ixia-C: The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>Ixia-C: When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets.</li> </ul>"},{"location":"releases/#release-v010-222","title":"Release  v0.1.0-222","text":"<p>19th January, 2024</p>"},{"location":"releases/#about_1","title":"About","text":"<p>This build includes new features and bug fixes.</p>"},{"location":"releases/#build-details_40","title":"Build Details","text":"Component Version Open Traffic Generator API 0.13.7 snappi 0.13.7 gosnappi 0.13.7 keng-controller 0.1.0-222 ixia-c-traffic-engine 1.6.0.109 keng-app-usage-reporter 0.0.1-37 ixia-c-protocol-engine 1.00.0.355 keng-layer23-hw-server 0.13.7-1 keng-operator 0.3.15 otg-gnmi-server 1.13.7 ixia-c-one 0.1.0-222 UHD400 1.0.28"},{"location":"releases/#release-featuress_37","title":"Release Features(s)","text":"<ul> <li> <p>Ixia-C: Support added for <code>snmpv2c</code> raw traffic.</p> </li> <li> <p>User can encode <code>snmpv2c</code> packet using <code>flows</code> and invoke <code>set_control_state.traffic.flow_transmit</code> to transmit the <code>snmpv2c</code> packets.</p> </li> </ul> <pre><code>  flowEth := flow.Packet().Add().Ethernet()\n  .... \n  flowIp := flow.Packet().Add().Ipv4()\n  ....\n  flowUdp := flow.Packet().Add().Udp()\n  ....\n  flowUdp.DstPort().SetValue(uint32(161)) // 161 = SNMP\n  flowSnmpv2c := flow.Packet().Add().Snmpv2C()\n  pdu := flowSnmpv2c.Data().GetRequest()\n  pdu.RequestId().SetValue(77777)\n  varBinds := pdu.VariableBindings().Add()\n  varBinds.SetObjectIdentifier(\n    \"1.3.6....\",\n  )\n</code></pre> <p>Note: Variable field values within the same flow using <code>increment</code>, <code>decrement</code> and <code>values</code> are not supported for <code>snmpv2c</code> fields. * Ixia-C: Support added for <code>ipv4.options</code> in <code>ipv4</code> header of raw traffic.</p> <ul> <li><code>router_alert</code> option allows devices to intercept packets not addressed to them directly as defined in RFC2113.</li> <li><code>custom</code> option is provided for to be able to configure user defined <code>ipv4.options</code> as needed.</li> </ul> <p><pre><code>  // Sample of router_alert option:\n  ip.Options().Add().SetChoice(\"router_alert\")\n\n  // Sample of user defined custom TLV options (Stream ID)\n  ipOptionCustom := ip.Options().Add().SetChoice(\"custom\")\n  ipOptionCustom.Custom().Type().CopiedFlag().SetChoice(\"value\").SetValue(0)\n  ipOptionCustom.Custom().Type().OptionClass().SetChoice(\"value\").SetValue(0)\n  ipOptionCustom.Custom().Type().OptionNumber().SetChoice(\"value\").SetValue(8)\n\n  ipOptionCustom.Custom().Length().SetChoice(\"value\").SetValue(4)\n  ipOptionCustom.Custom().SetValue(\"0088\")\n</code></pre> * Ixia-C: Support added to enable/disable LACP sessions on the fly.</p> <pre><code>  lagOnlyStart := port2.NewControlState().\n      SetChoice(gosnappi.ControlStateChoice.PROTOCOL)\n  lagMembers := lagOnlyStart.Protocol().\n      Lacp().\n      MemberPorts()\n  lagMembers.\n      SetState(gosnappi.StateProtocolLacpMemberPortsState.UP)\n</code></pre>"},{"location":"releases/#bug-fixs_33","title":"Bug Fix(s)","text":"<ul> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): Issue where egress tracking(<code>metric_tags</code>) was returning an error when trying to track on 'ipv4.priority.raw'(for DSCP) is fixed.</li> <li>Ixia-C: Issue where <code>BGP</code> AS4 number was being logged incorrectly in <code>ixia-c-protocol-engine</code> logs is fixed. #217</li> <li>Ixia-C: Couple of memory leak issues fixed in BGP seen for multiple start/stop of large number of BGP sessions on a port.</li> </ul>"},{"location":"releases/#known-issues_40","title":"Known Issues","text":"<ul> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): If <code>keng-layer23-hw-server</code> version is upgraded/downgraded, the ports which will be used from this container must be rebooted once before running the tests.</li> <li>Ixia-C: Flow Tx is incremented for flow with tx endpoints as LAG, even if no packets are sent on the wire when all active links of the LAG are down.</li> <li>Ixia-C: Supported value for <code>flows[i].metrics.latency.mode</code> is <code>cut_through</code>.</li> <li>Ixia-C: The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>Ixia-C: When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets.</li> </ul>"},{"location":"releases/#release-v010-158","title":"Release  v0.1.0-158","text":"<p>21st December, 2023</p>"},{"location":"releases/#about_2","title":"About","text":"<p>This build includes new features and bug fixes.</p>"},{"location":"releases/#build-details_41","title":"Build Details","text":"Component Version Open Traffic Generator API 0.13.4 snappi 0.13.4 gosnappi 0.13.4 keng-controller 0.1.0-158 ixia-c-traffic-engine 1.6.0.109 keng-app-usage-reporter 0.0.1-37 ixia-c-protocol-engine 1.00.0.348 keng-layer23-hw-server 0.13.4-1 keng-operator 0.3.14 otg-gnmi-server 1.13.4 ixia-c-one 0.1.0-158 UHD400 1.0.28"},{"location":"releases/#release-featuress_38","title":"Release Features(s)","text":"<ul> <li>Ixia-C, UHD400, Ixia Chassis &amp; Appliances(Novus, AresOne): Support added for BGP/BGP+ peers to use <code>custom</code> ports instead of default <code>179</code> tcp port.</li> <li>Listen Port - TCP port number on which to accept BGP/BGP+ connections from the remote peer.</li> <li>Neighbor Port - Destination TCP port number to be used by the BGP/BGP+ peer when initiating a session to the remote peer.</li> </ul> <p><pre><code>  bgpPeer.Advanced().SetListenPort(55555)\n  bgpPeer.Advanced().SetNeighborPort(55555)\n</code></pre> * Ixia-C: Support added to enable/disable BGP/BGP+ peers on the fly.   <pre><code>  s := gosnappi.NewControlState().             \n      SetChoice(gosnappi.ControlStateChoice.PROTOCOL)\n  bgpPeers := s.Protocol().Bgp().Peers()      \n  bgpPeers.SetPeerNames(peerNames).\n  SetState(gosnappi.StateProtocolBgpPeersState.UP/DOWN)\n  _ , err := client.Api().SetControlState(s)\n</code></pre> * Public API in <code>gosnappi</code> SDK has been cleaned up and refactored. PR with the details   - <code>GosnappiApi</code> interface is now renamed to <code>Api</code> interface.   - All public methods for creation of structs are now removed from <code>GosnappiApi</code> interface.   - There were helper methods defined on each struct which have been reorganized or hidden.   - Choice setter <code>SetChoice()</code> has been made private and is now implicitly set based on the <code>choice</code> property set by the user.   - Impact on backward compatibility:     - Updating of gosnappi to <code>0.13.4</code> or higher will need change of test programs/implementations utilizing <code>gosnappi</code> SDK.     - If gosnappi is not updated on the client current tests will continue to work with new <code>keng-controller:0.1.0-158</code>.</p>"},{"location":"releases/#bug-fixs_34","title":"Bug Fix(s)","text":"<ul> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): If a port was in link down state, the state was not being cleared on fresh <code>SetConfig</code> for <code>AresOne</code> ports and <code>Novus100G</code> mode, affecting future tests. This issue is fixed.</li> </ul>"},{"location":"releases/#known-issues_41","title":"Known Issues","text":"<ul> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): If <code>keng-layer23-hw-server</code> version is upgraded/downgraded, the ports which will be used from this container must be rebooted once before running the tests.</li> <li>Ixia-C: Flow Tx is incremented for flow with tx endpoints as LAG, even if no packets are sent on the wire when all active links of the LAG are down.</li> <li>Ixia-C: Supported value for <code>flows[i].metrics.latency.mode</code> is <code>cut_through</code>.</li> <li>Ixia-C: The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>Ixia-C: When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets.</li> </ul>"},{"location":"releases/#release-v010-84","title":"Release  v0.1.0-84","text":"<p>7th December, 2023</p>"},{"location":"releases/#about_3","title":"About","text":"<p>This build includes new features.</p>"},{"location":"releases/#build-details_42","title":"Build Details","text":"Component Version Open Traffic Generator API 0.13.2 snappi 0.13.2 gosnappi 0.13.2 keng-controller 0.1.0-84 ixia-c-traffic-engine 1.6.0.100 keng-app-usage-reporter 0.0.1-37 ixia-c-protocol-engine 1.00.0.340 keng-layer23-hw-server 0.13.2-2 keng-operator 0.3.13 otg-gnmi-server 1.13.2 ixia-c-one 0.1.0-84 UHD400 1.0.27"},{"location":"releases/#release-featuress_39","title":"Release Features(s)","text":"<ul> <li> <p>Ixia-C: Support added to trigger link <code>up/down</code> on test ports using the API <code>set_control_state.port.link</code>. This applicable only when the test port is directly connected to device under test via <code>veth</code> connection, e.g in KNE single node cluster, containerlab.   <pre><code>  portStateAction := gosnappi.NewControlState()\n  linkState := portStateAction.Port().Link().\n                  SetPortNames([]string{port.Name()}).\n                  SetState(gosnappi.StatePortLinkState.DOWN/UP)\n  api.SetControlState(portStateAction)\n</code></pre></p> </li> <li> <p>It removes the deviation (<code>deviation_ate_port_link_state_operations_unsupported</code>) which was added in <code>featuresprofile</code> tests for no supporting the LinkState trigger in Ixia-C.</p> </li> </ul>"},{"location":"releases/#known-issues_42","title":"Known Issues","text":"<ul> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): If <code>keng-layer23-hw-server</code> version is upgraded/downgraded, the ports which will be used from this container must be rebooted once before running the tests.</li> <li>Ixia-C: Flow Tx is incremented for flow with tx endpoints as LAG, even if no packets are sent on the wire when all active links of the LAG are down.</li> <li>Ixia-C: Supported value for <code>flows[i].metrics.latency.mode</code> is <code>cut_through</code>.</li> <li>Ixia-C: The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>Ixia-C: When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets.</li> </ul>"},{"location":"releases/#release-v010-81","title":"Release  v0.1.0-81","text":"<p>24th November, 2023</p>"},{"location":"releases/#about_4","title":"About","text":"<p>This build includes new features and bug fixes.</p>"},{"location":"releases/#build-details_43","title":"Build Details","text":"Component Version Open Traffic Generator API 0.13.2 snappi 0.13.2 gosnappi 0.13.2 keng-controller 0.1.0-81 ixia-c-traffic-engine 1.6.0.100 keng-app-usage-reporter 0.0.1-37 ixia-c-protocol-engine 1.00.0.339 keng-layer23-hw-server 0.13.2-2 keng-operator 0.3.13 otg-gnmi-server 1.13.2 ixia-c-one 0.1.0-81 UHD400 1.0.27"},{"location":"releases/#release-featuress_40","title":"Release Features(s)","text":"<ul> <li> <p>Support for BGP/BGP+ passive mode Ixia-C, UHD400 and Ixia Chassis &amp; Appliances(Novus, AresOne). If <code>passive_mode</code> of a peer is set to true, it will wait for the remote peer to initiate the BGP session.</p> </li> <li> <p>User needs to set <code>devices[i].bgp.ipv4/v6_interfaces[j].peers[k].advance.passive_mode</code> to <code>true</code> for enabling passive mode.</p> </li> <li> <p>When <code>layer1[i].speed</code> is not explicitly set, the current speed of underlying test interface shall be assumed.</p> </li> <li> <p>This allows setting of <code>layer1</code> MTU in tests to run on  setups with different port speeds on Ixia-C and Ixia Chassis &amp; Appliances(Novus, AresOne) without any modifications.     <pre><code>  otgConfig.Layer1().Add().\n      SetName(\"layerOne\").\n      SetPortNames(portNames).\n      SetMtu(9000)\n</code></pre></p> </li> <li>For traffic with <code>flow.rate.percentage</code> specified and <code>layer1[i].speed</code> not specified, the rate is now automatically calculated based on the port speed of the port from where traffic is being transmitted.</li> </ul>"},{"location":"releases/#bug-fixs_35","title":"Bug Fix(s)","text":"<ul> <li>Issue where <code>devices[i].bgp.ipv4/v6_interfaces[j].peers[k].v4/v6_routes[m].communities</code> was not being sent properly for Ixia Chassis &amp; Appliances(Novus, AresOne) is now fixed.</li> </ul>"},{"location":"releases/#known-issues_43","title":"Known Issues","text":"<ul> <li>Ixia Chassis &amp; Appliances(Novus, AresOne): If <code>keng-layer23-hw-server</code> version is upgraded/downgraded, the ports which will be used from this container must be rebooted once before running the tests.</li> <li>Ixia-C: Flow Tx is incremented for flow with tx endpoints as LAG, even if no packets are sent on the wire when all active links of the LAG are down.</li> <li>Ixia-C: Supported value for <code>flows[i].metrics.latency.mode</code> is <code>cut_through</code>.</li> <li>Ixia-C: The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>Ixia-C: When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets.</li> </ul>"},{"location":"releases/#release-v010-53","title":"Release  v0.1.0-53","text":"<p>10th November, 2023</p>"},{"location":"releases/#about_5","title":"About","text":"<p>This build includes new features and bug fixes.</p>"},{"location":"releases/#build-details_44","title":"Build Details","text":"Component Version Open Traffic Generator API 0.13.0 snappi 0.13.0 gosnappi 0.13.0 keng-controller 0.1.0-53 ixia-c-traffic-engine 1.6.0.85 keng-app-usage-reporter 0.0.1-37 ixia-c-protocol-engine 1.00.0.337 keng-layer23-hw-server 0.13.0-6 keng-operator 0.3.13 otg-gnmi-server 1.13.0 ixia-c-one 0.1.0-53 UHD400 1.0.27"},{"location":"releases/#release-featuress_41","title":"Release Features(s)","text":"<ul> <li>Support added for link <code>up/down</code> trigger for UHD400.   <pre><code>  portStateAction := gosnappi.NewControlState().\n                        Port().\n                        Link().\n                        SetPortNames([]string{\"port1\"}).\n                        SetState(gosnappi.StatePortLinkState.DOWN)\n  gosnappi.setControlState(portStateAction)\n</code></pre></li> <li>Support added for 0x8100(Vlan) and 0x6007(Google Discovery Protocol) ether types in data plane traffic in UHD400.</li> </ul>"},{"location":"releases/#bug-fixs_36","title":"Bug Fix(s)","text":"<ul> <li>Some tests were failing because packets were not sent on wire due to frame size of flows not being sufficient to include tracking information in Ixia Chassis &amp; Appliances(AresOne only) is fixed.</li> <li><code>egress</code> tracking on VLAN id or other fields for more than 3 bits was not working in Ixia Chassis &amp; Appliances(Novus, AresOne), is fixed.</li> <li><code>egress</code> tracking now supports upto 11 bits.</li> <li>Issue in ARP resolution in certain cases is now fixed in UHD400.</li> </ul>"},{"location":"releases/#known-issues_44","title":"Known Issues","text":"<ul> <li>If <code>keng-layer23-hw-server</code> version is upgraded/downgraded, the ports from Ixia Chassis &amp; Appliances(Novus, AresOne) which will be used from this container must be rebooted once before running the tests.</li> <li>Adding more than 256 devices on a single ixia-c-port causing failure for Ixia Chassis &amp; Appliances(Novus, AresOne).</li> <li>Flow Tx is incremented for flow with tx endpoints as LAG, even if no packets are sent on the wire when all active links of the LAG are down.</li> <li>With certain DUTs, ssh service hangs if ISIS L1 MD5 is enabled.</li> <li>Supported value for <code>flows[i].metrics.latency.mode</code> is <code>cut_through</code>.</li> <li>The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets.</li> <li>#118</li> </ul>"},{"location":"releases/#release-v010-26","title":"Release  v0.1.0-26","text":"<p>3rd November, 2023</p>"},{"location":"releases/#about_6","title":"About","text":"<p>This build includes stability fixes.</p>"},{"location":"releases/#build-details_45","title":"Build Details","text":"Component Version Open Traffic Generator API 0.13.0 snappi 0.13.0 gosnappi 0.13.0 keng-controller 0.1.0-26 ixia-c-traffic-engine 1.6.0.85 keng-app-usage-reporter 0.0.1-37 ixia-c-protocol-engine 1.00.0.337 keng-layer23-hw-server 0.13.0-2 keng-operator 0.3.13 otg-gnmi-server 1.13.0 ixia-c-one 0.1.0-26 UHD400 1.0.26"},{"location":"releases/#known-issues_45","title":"Known Issues","text":"<ul> <li>If <code>keng-layer23-hw-server</code> version is upgraded/downgraded, the ports from Ixia Chassis &amp; Appliances(Novus, AresOne) which will be used from this container must be rebooted once before running the tests.</li> <li>Adding more than 256 devices on a single ixia-c-port causing failure for Ixia Chassis &amp; Appliances(Novus, AresOne).</li> <li>Flow Tx is incremented for flow with tx endpoints as LAG, even if no packets are sent on the wire when all active links of the LAG are down.</li> <li>With certain DUTs, ssh service hangs if ISIS L1 MD5 is enabled.</li> <li>Supported value for <code>flows[i].metrics.latency.mode</code> is <code>cut_through</code>.</li> <li>The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets.</li> <li>#118</li> </ul>"},{"location":"releases/#release-v010-3","title":"Release  v0.1.0-3","text":"<p>20th October, 2023</p>"},{"location":"releases/#about_7","title":"About","text":"<p>This build includes new features, stability and bug fixes.</p>"},{"location":"releases/#build-details_46","title":"Build Details","text":"Component Version Open Traffic Generator API 0.13.0 snappi 0.13.0 gosnappi 0.13.0 keng-controller 0.1.0-3 ixia-c-traffic-engine 1.6.0.85 keng-app-usage-reporter 0.0.1-37 ixia-c-protocol-engine 1.00.0.337 keng-layer23-hw-server 0.13.0-2 keng-operator 0.3.13 otg-gnmi-server 1.13.0 ixia-c-one 0.1.0-3"},{"location":"releases/#release-features","title":"Release Feature(s)","text":"<ul> <li>Ixia-C now offers following existing licensed features free for community use (without requiring Keysight Licensing Solution):</li> <li><code>ixia-c-protocol-engine</code>, which enables control plane emulation in Ixia-C is now publicly downloadable.</li> <li>Emulation of one or more IPv4 and IPv6 interfaces with Address Resolution Protocol (ARP) and Neighbor Discovery (ND), respectively, is now supported.</li> <li>Automatic destination MAC address resolution for flows with IPv4 / IPv6 endpoints is now supported.</li> <li>Configuring one BGP session over IPv4 / IPv6, advertising V4 / V6 routes is now supported.</li> <li>Users exercising full feature set (Keysight Elastic Network Generator aka KENG) will now have to subscribe to Keysight Licensing Solution. Please reach out to Keysight for more details.</li> <li><code>keng-layer23-hw-server</code>, which facilitates control and data plane operations on Ixia Chassis &amp; Appliances(Novus, AresOne) is now publicly downloadable (but can only be used with Keysight Licensing Solution)</li> <li>Support is added for overload bit and extended ipv4 reachability in <code>get_states</code> for isis_lsps in Ixia Chassis &amp; Appliances(Novus, AresOne); gNMI path for <code>isis_lsps</code>:   <pre><code>  +--rw isis-routers\n    +--ro isis-router* [name]\n        +--ro name     -&gt; ../state/name\n        +--ro state\n          +--ro name?                  string\n          .\n          .\n          +--ro link-state-database\n              +--ro lsp-states\n</code></pre></li> </ul> <p>The container image paths have changed for some Ixia-C artifacts. Please review Build Details for correct paths.</p>"},{"location":"releases/#bug-fixs_37","title":"Bug Fix(s)","text":"<ul> <li>Memory leak in Ixia Chassis &amp; Appliances(Novus, AresOne) is fixed for long duration tests.</li> <li><code>gosnappi</code> now correctly validates required primitive types when they're not explicitly set by users.</li> <li>IS-IS metric is no longer sent as 63 when configured as 200 (or more than 63) with wide metrics enabled on Ixia Chassis &amp; Appliances(Novus, AresOne).</li> </ul>"},{"location":"releases/#known-issues_46","title":"Known Issues","text":"<ul> <li>If <code>keng-layer23-hw-server</code> version is upgraded/downgraded, the ports from Ixia Chassis &amp; Appliances(Novus, AresOne) which will be used from this container must be rebooted once before running the tests.</li> <li>Adding more than 256 devices on a single ixia-c-port causing failure for Ixia Chassis &amp; Appliances(Novus, AresOne).</li> <li>Flow Tx is incremented for flow with tx endpoints as LAG, even if no packets are sent on the wire when all active links of the LAG are down.</li> <li>With certain DUTs, ssh service hangs if ISIS L1 MD5 is enabled.</li> <li>Supported value for <code>flows[i].metrics.latency.mode</code> is <code>cut_through</code>.</li> <li>The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets.</li> <li>#118</li> </ul>"},{"location":"releases/#release-v001-4554","title":"Release  v0.0.1-4554","text":"<p>29th September, 2023</p>"},{"location":"releases/#about_8","title":"About","text":"<p>This build includes bug fixes.</p>"},{"location":"releases/#build-details_47","title":"Build Details","text":"Component Version Open Traffic Generator API 0.12.5 snappi 0.12.6 gosnappi 0.12.6 ixia-c-controller 0.0.1-4554 ixia-c-traffic-engine 1.6.0.85 ixia-c-app-usage-reporter 0.0.1-37 ixia-c-protocol-engine 1.00.0.331 ixia-c-ixhw-server 0.12.5-1 ixia-c-operator 0.3.6 ixia-c-gnmi-server 1.12.7 ixia-c-one 0.0.1-4554"},{"location":"releases/#bug-fixs_38","title":"Bug Fix(s)","text":"<ul> <li><code>monitor.flow_metrics</code> will now correctly reports <code>bytes_tx</code>.</li> <li>The VLAN TPID field in flow packet header configuration is now set to correct default of 65535 when it\u2019s not encapsulating known protocol header.</li> </ul>"},{"location":"releases/#known-issues_47","title":"Known Issues","text":"<ul> <li>Supported value for <code>flows[i].metrics.latency.mode</code> is <code>cut_through</code>.</li> <li>The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets.</li> <li>#118</li> </ul>"},{"location":"releases/#release-v001-4478","title":"Release  v0.0.1-4478","text":"<p>14th September, 2023</p>"},{"location":"releases/#about_9","title":"About","text":"<p>This build includes stability fixes.</p>"},{"location":"releases/#build-details_48","title":"Build Details","text":"Component Version Open Traffic Generator API 0.12.3 snappi 0.12.3 gosnappi 0.12.3 ixia-c-controller 0.0.1-4478 ixia-c-traffic-engine 1.6.0.45 ixia-c-app-usage-reporter 0.0.1-37 ixia-c-protocol-engine 1.00.0.326 ixia-c-ixhw-server 0.12.3-2 ixia-c-operator 0.3.6 ixia-c-gnmi-server 1.12.5 ixia-c-one 0.0.1-4478"},{"location":"releases/#known-issues_48","title":"Known Issues","text":"<ul> <li>Supported value for <code>flows[i].metrics.latency.mode</code> is <code>cut_through</code>.</li> <li>The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets.</li> <li>#118</li> </ul>"},{"location":"releases/#release-v001-4435","title":"Release  v0.0.1-4435","text":"<p>1st September, 2023</p>"},{"location":"releases/#about_10","title":"About","text":"<p>This build includes bug fixes.</p>"},{"location":"releases/#build-details_49","title":"Build Details","text":"Component Version Open Traffic Generator API 0.12.2 snappi 0.12.2 gosnappi 0.12.2 ixia-c-controller 0.0.1-4435 ixia-c-traffic-engine 1.6.0.35 ixia-c-app-usage-reporter 0.0.1-37 ixia-c-protocol-engine 1.00.0.325 ixia-c-ixhw-server 0.12.2-2 ixia-c-operator 0.3.4 ixia-c-gnmi-server 1.12.4 ixia-c-one 0.0.1-4435 `"},{"location":"releases/#bug-fixs_39","title":"Bug Fix(s)","text":"<ul> <li><code>set_config</code> fails with <code>unsuccessful Response: RX runtime not configured for port:</code> if large port testbed is used on subsequent test runs is fixed.</li> </ul>"},{"location":"releases/#known-issues_49","title":"Known Issues","text":"<ul> <li>Supported value for <code>flows[i].metrics.latency.mode</code> is <code>cut_through</code>.</li> <li>The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets.</li> <li>#118</li> </ul>"},{"location":"releases/#release-v001-4399","title":"Release  v0.0.1-4399","text":"<p>21st August, 2023</p>"},{"location":"releases/#about_11","title":"About","text":"<p>This build includes new features.</p>"},{"location":"releases/#build-details_50","title":"Build Details","text":"Component Version Open Traffic Generator API 0.12.1 snappi 0.12.1 gosnappi 0.12.1 ixia-c-controller 0.0.1-4399 ixia-c-traffic-engine 1.6.0.35 ixia-c-app-usage-reporter 0.0.1-37 ixia-c-protocol-engine 1.00.0.320 ixia-c-ixhw-server 0.12.1-2 ixia-c-operator 0.3.4 ixia-c-gnmi-server 1.12.2 ixia-c-one 0.0.1-4399 `"},{"location":"releases/#release-features_1","title":"Release Feature(s)","text":"<ul> <li>Support for deprecated control, action and update APIs (<code>set_transmit_state</code>, <code>set_link_state</code>, <code>set_capture_state</code>, <code>update_flows</code>, <code>set_route_state</code>, <code>send_ping</code>, <code>set_protocol_state</code>, <code>set_device_state</code>) have been removed. Please use following <code>set_control_state</code>, <code>set_control_action</code> and <code>update_config</code> APIs instead of the previous ones. Please refer to go utils and python utils for further details usage.</li> <li>Most properties in OTG with integer data type have been assigned correct integer format (from <code>uint32</code>, <code>uint64</code>, <code>int32</code> and <code>int64</code>). Please click here to examine all changes.</li> <li>Once you upgrade the new ixia-c release, in addition to removing the deprecated APIs from the test programs, data types of some variables in the test programs might need to be changed to avoid compilation errors.</li> </ul>"},{"location":"releases/#known-issues_50","title":"Known Issues","text":"<ul> <li>Supported value for <code>flows[i].metrics.latency.mode</code> is <code>cut_through</code>.</li> <li>The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets.</li> <li>#118</li> </ul>"},{"location":"releases/#release-v001-4306","title":"Release  v0.0.1-4306","text":"<p>4th August, 2023</p>"},{"location":"releases/#about_12","title":"About","text":"<p>This build includes stability fixes.</p>"},{"location":"releases/#build-details_51","title":"Build Details","text":"Component Version Open Traffic Generator API 0.11.11 snappi 0.11.17 gosnappi 0.11.17 ixia-c-controller 0.0.1-4306 ixia-c-traffic-engine 1.6.0.35 ixia-c-app-usage-reporter 0.0.1-37 ixia-c-protocol-engine 1.00.0.318 ixia-c-ixhw-server 0.11.11-2 ixia-c-operator 0.3.4 ixia-c-gnmi-server 1.11.16 ixia-c-one 0.0.1-4306 `"},{"location":"releases/#known-issues_51","title":"Known Issues","text":"<ul> <li>Supported value for <code>flows[i].metrics.latency.mode</code> is <code>cut_through</code>.</li> <li>The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets.</li> <li>#118</li> </ul>"},{"location":"releases/#release-v001-4167","title":"Release  v0.0.1-4167","text":"<p>21st July, 2023</p>"},{"location":"releases/#about_13","title":"About","text":"<p>This build includes new features.</p>"},{"location":"releases/#build-details_52","title":"Build Details","text":"Component Version Open Traffic Generator API 0.11.10 snappi 0.11.16 gosnappi 0.11.16 ixia-c-controller 0.0.1-4167 ixia-c-traffic-engine 1.6.0.35 ixia-c-app-usage-reporter 0.0.1-37 ixia-c-protocol-engine 1.00.0.316 ixia-c-ixhw-server 0.11.10-13 ixia-c-operator 0.3.4 ixia-c-gnmi-server 1.11.16 ixia-c-one 0.0.1-4167"},{"location":"releases/#release-features_2","title":"Release Feature(s)","text":"<ul> <li>Enabling <code>metric_tags</code> for egress tracking is now also supported on ipv6.src/dst, ipv6.traffic_class, ipv6.flow_label and ipv6.payload_length. [Ixia-C] <pre><code>  eth := flow.EgressPacket().Add().Ethernet()\n  ipv6 := flow.EgressPacket().Add().Ipv6()\n  ipv6Tag := ipv6.Dst().MetricTags().Add()\n  ipv6Tag.SetName(\"flow_ipv6_dst\")\n  ipv6Tag.SetOffset(120)\n  ipv6Tag.SetLength(8)\n</code></pre></li> <li>Support is available in gNMI to fetch the drill-down statistics for egress tracking as follows [Ixia-C] details:   <pre><code>  1. Flow level metrics + Tagged Metrics:\n      example path: \"flows/flow[name=f1]\u201c\n  2. Only Flow level metrics:\n      example path: \"flows/flow[name=f1]/state\u201c\n  3. Only Tagged metrics \n      example path: \"flows/flow[name=f1]/tagged-metrics\u201c\n  4. Filtered Tagged metrics: \n      example path: \"flows/flow[name=f1]/tagged-metrics/tagged-metric[name-value-pairs=flow_ipv6_dst=0x2]\u201d\n</code></pre></li> </ul>"},{"location":"releases/#bug-fixs_40","title":"Bug Fix(s)","text":"<ul> <li>For <code>flow.duration.continuous</code> type of traffic in Ixia-C, intermittent issue where last few packets in a traffic flow were not accounted for in <code>flow_metrics.frames_rx</code> statistics after stopping a flow is fixed.</li> <li>Proper error mesage is propagated to user if user has used community edition of Ixia-C (instead of licensed edition) and invoked any API/Configuration not supported by it.   example: <code>Device configuration is not supported in free version of controller.</code></li> </ul>"},{"location":"releases/#known-issues_52","title":"Known Issues","text":"<ul> <li>Supported value for <code>flows[i].metrics.latency.mode</code> is <code>cut_through</code>.</li> <li>The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets.</li> <li>#118</li> </ul>"},{"location":"releases/#release-v001-4139","title":"Release  v0.0.1-4139","text":"<p>29th June, 2023</p>"},{"location":"releases/#about_14","title":"About","text":"<p>This build includes new features.</p>"},{"location":"releases/#build-details_53","title":"Build Details","text":"Component Version Open Traffic Generator API 0.11.10 snappi 0.11.16 gosnappi 0.11.16 ixia-c-controller 0.0.1-4139 ixia-c-traffic-engine 1.6.0.35 ixia-c-app-usage-reporter 0.0.1-37 ixia-c-protocol-engine 1.00.0.315 ixia-c-ixhw-server 0.11.10-2 ixia-c-operator 0.3.1 ixia-c-gnmi-server 1.11.16 ixia-c-one 0.0.1-4139"},{"location":"releases/#release-featuress_42","title":"Release Features(s)","text":"<ul> <li>Support added for multiple Rx\u00a0endpoints both port traffic.</li> </ul> <p><pre><code>// Port Traffic\nflow.SetName(\"flow:p1-&gt;p2,p3\").\n  TxRx().Port().\n  SetTxName(\"p1\").\n  SetRxNames([]string{\"p2\", \"p3\"})\n</code></pre> * Support added for Rx port disaggregation of flow metrics.</p> <pre><code>flow := config.Flows().Add().SetName(\"flow\")\nflow.Metrics(). PredefinedMetricTags().SetRxName(true)\n</code></pre> <pre><code>// gNMI state fetch on flows will show the drilldown as given below\n\"updates\": [\n  {\n  \"Path\": \"flows/flow[name=f1]\",\n  \"values\": {\n    \"flows/flow\": {\n    \"open-traffic-generator-flow:name\": \"f1\",\n    \"open-traffic-generator-flow:state\": {                     // Contains the aggregated per-flow stats\n      ....\n    },\n    \"open-traffic-generator-flow:tag-metrics\": {              // Contains the disaggregated per-flow stats\n      \"tag-metric\": [\n      {\n        \"name-value\": \"rx_name=p2\",\n        \"state\": {\n          ....\n          \"name-value\": \"rx_name=p2\",\n          \"tags\": [\n            {\n            \"tag-name\": \"rx_name\",\n            \"tag-value\": \n              {\n                \"value-as-string\": \"p2\",\n                \"value-type\": \"STRING\"\n              }\n        ....\n      },\n      {\n        \"name-value\": \"rx_name=p3\",\n        \"state\": {\n          ....\n        }\n      }\n    ....\n  }\n]\n</code></pre>"},{"location":"releases/#known-issues_53","title":"Known Issues","text":"<ul> <li>Supported value for <code>flows[i].metrics.latency.mode</code> is <code>cut_through</code>.</li> <li>The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets.</li> <li>#118</li> </ul>"},{"location":"releases/#release-v001-4124","title":"Release  v0.0.1-4124","text":"<p>16th June, 2023</p>"},{"location":"releases/#about_15","title":"About","text":"<p>This build includes new features.</p>"},{"location":"releases/#build-details_54","title":"Build Details","text":"Component Version Open Traffic Generator API 0.11.9 snappi 0.11.15 gosnappi 0.11.15 ixia-c-controller 0.0.1-4124 ixia-c-traffic-engine 1.6.0.35 ixia-c-app-usage-reporter 0.0.1-37 ixia-c-protocol-engine 1.00.0.310 ixia-c-ixhw-server 0.11.9-6 ixia-c-operator 0.3.1 ixia-c-gnmi-server 1.11.14 ixia-c-one 0.0.1-4124"},{"location":"releases/#release-featuress_43","title":"Release Features(s)","text":"<ul> <li>Support added for weighted pairs for packet size distribution in traffic flows.</li> <li><code>predefined</code> packet size distributions supported are <code>imix</code>, <code>ipsec_imix</code>, <code>ipv6_imix</code>, <code>standard_imix</code>, <code>tcp_imix</code>. It can be configured as follows:     <pre><code>  myFlow.Size().WeightPairs().SetPredefined(gosnappi.FlowSizeWeightPairsPredefined.IMIX)\n</code></pre></li> <li>Custom packet size distribution is also supported. It can configured as follows,     <pre><code>  customWeightPairs := myFlow.Size().WeightPairs().Custom()\n  customWeightPairs.Add().SetSize(64).SetWeight(7)\n  customWeightPairs.Add().SetSize(570).SetWeight(4)\n  customWeightPairs.Add().SetSize(1518).SetWeight(1)\n</code></pre></li> <li>Support is added for egress tracking based on IPv4 total length.</li> </ul>"},{"location":"releases/#known-issues_54","title":"Known Issues","text":"<ul> <li>Supported value for <code>flows[i].metrics.latency.mode</code> is <code>cut_through</code>.</li> <li>The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets.</li> <li>#118</li> </ul>"},{"location":"releases/#release-v001-4080","title":"Release  v0.0.1-4080","text":"<p>2nd June, 2023</p>"},{"location":"releases/#about_16","title":"About","text":"<p>This build includes bug fix.</p>"},{"location":"releases/#build-details_55","title":"Build Details","text":"Component Version Open Traffic Generator API 0.11.9 snappi 0.11.15 gosnappi 0.11.15 ixia-c-controller 0.0.1-4080 ixia-c-traffic-engine 1.6.0.35 ixia-c-app-usage-reporter 0.0.1-37 ixia-c-protocol-engine 1.02.21.29 ixia-c-ixhw-server 0.11.9-3 ixia-c-operator 0.3.1 ixia-c-gnmi-server 1.11.14 ixia-c-one 0.0.1-4080"},{"location":"releases/#known-issues_55","title":"Known Issues","text":"<ul> <li>Supported value for <code>flows[i].metrics.latency.mode</code> is <code>cut_through</code>.</li> <li>The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets.</li> <li>#118</li> </ul>"},{"location":"releases/#release-v001-4064","title":"Release  v0.0.1-4064","text":"<p>18th May, 2023</p>"},{"location":"releases/#about_17","title":"About","text":"<p>This build includes bug fix.</p>"},{"location":"releases/#build-details_56","title":"Build Details","text":"Component Version Open Traffic Generator API 0.11.8 snappi 0.11.14 gosnappi 0.11.14 ixia-c-controller 0.0.1-4064 ixia-c-traffic-engine 1.6.0.35 ixia-c-app-usage-reporter 0.0.1-37 ixia-c-protocol-engine 1.02.21.17 ixia-c-ixhw-server 0.11.8-12 ixia-c-operator 0.3.1 ixia-c-gnmi-server 1.11.13 ixia-c-one 0.0.1-4064"},{"location":"releases/#bug-fixs_41","title":"Bug Fix(s)","text":"<ul> <li>Stop exposing TLS 1.0/1.1  in <code>ixia-c-controller</code>.</li> </ul>"},{"location":"releases/#known-issues_56","title":"Known Issues","text":"<ul> <li>Supported value for <code>flows[i].metrics.latency.mode</code> is <code>cut_through</code>.</li> <li>The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets.</li> <li>#118</li> </ul>"},{"location":"releases/#release-v001-4013","title":"Release  v0.0.1-4013","text":"<p>5th May, 2023</p>"},{"location":"releases/#about_18","title":"About","text":"<p>This build includes new features.</p>"},{"location":"releases/#build-details_57","title":"Build Details","text":"Component Version Open Traffic Generator API 0.11.8 snappi 0.11.14 gosnappi 0.11.14 ixia-c-controller 0.0.1-4013 ixia-c-traffic-engine 1.6.0.35 ixia-c-app-usage-reporter 0.0.1-37 ixia-c-protocol-engine 1.00.0.299 ixia-c-ixhw-server 0.11.8-8 ixia-c-operator 0.3.1 ixia-c-gnmi-server 1.11.13 ixia-c-one 0.0.1-4013"},{"location":"releases/#release-featuress_44","title":"Release Features(s)","text":"<ul> <li>Egress tracking now also supports tracking for <code>vlan</code>, <code>mpls</code> packet headers.</li> <li>Support added in <code>ixia-c-gnmi-server</code> for fetching Latency measurements.</li> <li>User can enable latency measurement by setting <code>f1.Metrics().SetEnable(true).Latency().SetEnable(true)</code>.<ul> <li>Only <code>cut_through</code> latency mode  is supported.</li> </ul> </li> <li>User can fetch latency measurements using given models-yang path.     <pre><code>  module: open-traffic-generator-flow\n  +--rw flows\n    +--ro flow* [name]\n        +--ro name              -&gt; ../state/name\n        +--ro state\n        |  ....\n        |  ....\n        |  +--ro minimum-latency?   otg-types:timeticks64\n        |  +--ro maximum-latency?   otg-types:timeticks64\n        |  +--ro average-latency?   otg-types:timeticks64\n        |  ....\n        |  ....\n</code></pre></li> </ul>"},{"location":"releases/#bug-fixs_42","title":"Bug Fix(s)","text":"<ul> <li>Intermittent crash in ixia-c-controller while fetching <code>flow_metrics</code> is fixed.</li> </ul>"},{"location":"releases/#known-issues_57","title":"Known Issues","text":"<ul> <li>Supported value for <code>flows[i].metrics.latency.mode</code> is <code>cut_through</code>.</li> <li>The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets.</li> <li>#118</li> </ul>"},{"location":"releases/#release-v001-3927","title":"Release  v0.0.1-3927","text":"<p>24th April, 2023</p>"},{"location":"releases/#about_19","title":"About","text":"<p>This build includes new features.</p>"},{"location":"releases/#build-details_58","title":"Build Details","text":"Component Version Open Traffic Generator API 0.11.8 snappi 0.11.14 gosnappi 0.11.14 ixia-c-controller 0.0.1-3927 ixia-c-traffic-engine 1.6.0.35 ixia-c-app-usage-reporter 0.0.1-37 ixia-c-protocol-engine 1.00.0.298 ixia-c-ixhw-server 0.11.8-1 ixia-c-operator 0.3.1 ixia-c-gnmi-server 1.11.10 ixia-c-one 0.0.1-3927"},{"location":"releases/#release-featuress_45","title":"Release Features(s)","text":"<ul> <li>A new property <code>egress_packet</code> inside flow has been introduced to configure expected packet shape as it is received on the test port.   <code>go eth := flow.EgressPacket().Add().Ethernet() ipv4 := flow.EgressPacket().Add().Ipv4()</code></li> <li>A new property <code>metric_tags</code> has been introduced for fields inside headers configured in <code>egress_packet</code> to enable tracking metrics for each applicable value corresponding to a portion of or all bits inside the field.</li> </ul> <pre><code>  ipv4Tag := ipv4.Dst().MetricTags().Add()\n  ipv4Tag.SetName(\"flow_ipv4_dst\")\n  ipv4Tag.SetOffset(24)\n  ipv4Tag.SetLength(8)\n</code></pre> <ul> <li>As of this release, enabling metric_tags is only supported on ethernet.src/dst, ipv4.src/dst, ipv4.tos. Support for more fields shall be added in upcoming releases.</li> <li> <p>Limitations:</p> <ul> <li>The total number of tracking bits available on an ixia-c Rx port is 12 bits. Out of these some of the bits are needed for tracking flows, example 2 flows need 1 bit, 4 flows need 2 bits, 8 flows need 3 bits etc. The sum of <code>metric_tag.length</code> for each field inside each header configured in <code>egress_packet</code> cannot exceed the remaining bits available on the Rx port.</li> <li>The total number of tracking fields that can be configured across a set of flows which have the same Rx port, is two.</li> <li>A new property is introduced in <code>get_metrics.flow</code> to fetch tagged metrics.</li> </ul> </li> <li> <p>User can set <code>get_metrics.flow.tagged_metrics.include=false</code> not to include <code>tagged_metrics</code> in the <code>flow_metrics</code> response.</p> </li> <li>Specific <code>tagged_metrics</code> can be fetched by setting <code>get_metrics.flow.tagged_metrics.filters[i].name</code>.</li> </ul>"},{"location":"releases/#known-issues_58","title":"Known Issues","text":"<ul> <li>Supported value for <code>flows[i].metrics.latency.mode</code> is <code>cut_through</code>.</li> <li>The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets.</li> <li>#118</li> </ul>"},{"location":"releases/#release-v001-3889","title":"Release  v0.0.1-3889","text":"<p>31st March, 2023</p>"},{"location":"releases/#about_20","title":"About","text":"<p>This build includes new features.</p>"},{"location":"releases/#build-details_59","title":"Build Details","text":"Component Version Open Traffic Generator API 0.11.4 snappi 0.11.6 gosnappi 0.11.6 ixia-c-controller 0.0.1-3889 ixia-c-traffic-engine 1.6.0.35 ixia-c-app-usage-reporter 0.0.1-37 ixia-c-protocol-engine 1.00.0.290 ixia-c-ixhw-server 0.11.4-1 ixia-c-operator 0.3.1 ixia-c-gnmi-server 1.11.5 ixia-c-one 0.0.1-3889"},{"location":"releases/#featuress","title":"Features(s)","text":"<ul> <li>All API response errors over gRPC and HTTP transport can now be inspected like so:</li> </ul> <pre><code>    # snippet of error handling in snappi\n    try:\n    # call set config\n    api.set_config(payload)\n    except Exception as e:\n        err = api.from_exception(e)  # helper function to parse exception\n        if err is not None: # exception was of otg error format\n            print(err.code)\n            print(err.errors)\n        else: # some other exception\n            print(e)\n</code></pre> <pre><code>    // gosnappi snippet for error handling\n    resp, err := api.SetConfig(config)\n    if err != nil {\n        // helper function to parse error\n        // retuns a bool with err, indicating wheather the error was of otg error format \n        errSt, ok := api.FromError(err)\n        if ok {\n            fmt.Println(errSt.Code())\n            if errSt.errSt.HasKind() {\n            fmt.Println(errSt.Kind())\n            }\n            fmt.Println(errSt.Errors())\n        } else {\n            fmt.Println(err.Error())\n        }\n    }\n</code></pre>"},{"location":"releases/#known-issues_59","title":"Known Issues","text":"<ul> <li>Supported value for <code>flows[i].metrics.latency.mode</code> is <code>cut_through</code>.</li> <li>The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets.</li> <li>#118</li> </ul>"},{"location":"releases/#release-v001-3865","title":"Release  v0.0.1-3865","text":"<p>16th March, 2023</p>"},{"location":"releases/#about_21","title":"About","text":"<p>This build includes new features.</p>"},{"location":"releases/#build-details_60","title":"Build Details","text":"Component Version Open Traffic Generator API 0.11.1 snappi 0.11.1 gosnappi 0.11.1 ixia-c-controller 0.0.1-3865 ixia-c-traffic-engine 1.6.0.35 ixia-c-app-usage-reporter 0.0.1-37 ixia-c-protocol-engine 1.00.0.283 ixia-c-ixhw-server 0.11.1-1 ixia-c-operator 0.3.1 ixia-c-gnmi-server 1.11.1 ixia-c-one 0.0.1-3865"},{"location":"releases/#featuress_1","title":"Features(s)","text":"<ul> <li>Warning messages shall now be automatically printed on STDOUT if a property or an API with status deprecated or under-review is exercised in <code>snappi</code> / <code>gosnappi</code>. This may also lead to linters raising deprecation error.</li> <li>New API endpoints <code>/control/state</code> and <code>/control/action</code> have been exposed consolidating pre-existing API endpoints inside <code>/control/</code> (now deprecated) in order to reduce API surface and introducing clean organization. Please see snappi-tests utils for usage.</li> <li>API endpoints <code>/results/*</code> have now been renamed to <code>/monitor/*</code> .</li> </ul>"},{"location":"releases/#known-issues_60","title":"Known Issues","text":"<ul> <li>Supported value for <code>flows[i].metrics.latency.mode</code> is <code>cut_through</code>.</li> <li>The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets.</li> <li>#118</li> </ul>"},{"location":"releases/#release-v001-3841","title":"Release  v0.0.1-3841","text":"<p>3rd March, 2023</p>"},{"location":"releases/#announcement","title":"Announcement","text":"<p><code>ixia-c</code> container images are hosted on GitHub Container Registry, We stopped publishing <code>ixia-c</code> container images to DockerHub.</p>"},{"location":"releases/#about_22","title":"About","text":"<p>This build includes new features.</p>"},{"location":"releases/#build-details_61","title":"Build Details","text":"Component Version Open Traffic Generator API 0.10.12 snappi 0.10.9 gosnappi 0.10.9 ixia-c-controller 0.0.1-3841 ixia-c-traffic-engine 1.6.0.35 ixia-c-app-usage-reporter 0.0.1-37 ixia-c-protocol-engine 1.00.0.279 ixia-c-ixhw-server 0.10.12-2 ixia-c-operator 0.3.1 ixia-c-gnmi-server 1.10.19 ixia-c-one 0.0.1-3841"},{"location":"releases/#featuress_2","title":"Features(s)","text":"<ul> <li>API version compatibility check is now automatically performed between ixia-c containers upon API calls to <code>ixia-c-controller</code> . It can be disabled by booting <code>ixia-c-controller</code> container with <code>--disable-version-check</code> flag.</li> <li> <p>API version compatibility check can now be automatically performed between <code>snappi</code>/<code>gosnappi</code> and ixia-c-controller upon API calls by enabling version check flag in API handle like so:</p> </li> <li> <p>gosnappi</p> </li> </ul> <pre><code>    api := gosnappi.NewApi()\n    api.SetVersionCompatibilityCheck(true)\n</code></pre> <ul> <li>snappi</li> </ul> <pre><code>    api = snappi.api(version_check=True)\n</code></pre> <p>In upcoming releases, this will be enabled by default.</p>"},{"location":"releases/#known-issues_61","title":"Known Issues","text":"<ul> <li>Supported value for <code>flows[i].metrics.latency.mode</code> is <code>cut_through</code>.</li> <li>The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets.</li> <li>#118</li> </ul>"},{"location":"releases/#release-v001-3807","title":"Release  v0.0.1-3807","text":"<p>17th February, 2023</p>"},{"location":"releases/#announcement_1","title":"Announcement","text":"<p><code>ixia-c</code> container images are hosted on GitHub Container Registry, We stopped publishing <code>ixia-c</code> container images to DockerHub.</p>"},{"location":"releases/#about_23","title":"About","text":"<p>This build contains bug fixes.</p>"},{"location":"releases/#build-details_62","title":"Build Details","text":"Component Version Open Traffic Generator API 0.10.9 snappi 0.10.7 gosnappi 0.10.7 ixia-c-controller 0.0.1-3807 ixia-c-traffic-engine 1.6.0.30 ixia-c-app-usage-reporter 0.0.1-37 ixia-c-protocol-engine 1.00.0.271 ixia-c-ixhw-server 0.10.7-8 ixia-c-operator 0.3.1 ixia-c-gnmi-server 1.10.14 ixia-c-one 0.0.1-3807"},{"location":"releases/#bug-fixs_43","title":"Bug Fix(s)","text":"<ul> <li>Concurrent API calls (where at least one call was <code>set_config</code>) to <code>ixia-c-controller</code> was resulting in crash.</li> </ul>"},{"location":"releases/#known-issues_62","title":"Known Issues","text":"<ul> <li>Supported value for <code>flows[i].metrics.latency.mode</code> is <code>cut_through</code>.</li> <li>The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets.</li> <li>#118</li> </ul>"},{"location":"releases/#release-v001-3767","title":"Release  v0.0.1-3767","text":"<p>2nd February, 2023</p>"},{"location":"releases/#announcement_2","title":"Announcement","text":"<p><code>ixia-c</code> container images are hosted on GitHub Container Registry, We stopped publishing <code>ixia-c</code> container images to DockerHub.</p>"},{"location":"releases/#about_24","title":"About","text":"<p>This build contains bug fixes.</p>"},{"location":"releases/#build-details_63","title":"Build Details","text":"Component Version Open Traffic Generator API 0.10.7 snappi 0.10.5 gosnappi 0.10.5 ixia-c-controller 0.0.1-3768 ixia-c-traffic-engine 1.6.0.29 ixia-c-app-usage-reporter 0.0.1-37 ixia-c-protocol-engine 1.00.0.271 ixia-c-ixhw-server 0.10.7-1 ixia-c-operator 0.3.1 ixia-c-gnmi-server 1.10.8 ixia-c-one 0.0.1-3768"},{"location":"releases/#bug-fixs_44","title":"Bug Fix(s)","text":"<ul> <li>Issue where TCP header length was not set correctly is fixed. #117</li> </ul>"},{"location":"releases/#known-issues_63","title":"Known Issues","text":"<ul> <li>Supported value for <code>flows[i].metrics.latency.mode</code> is <code>cut_through</code>.</li> <li>The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets.</li> <li>#118</li> </ul>"},{"location":"releases/#release-v001-3724","title":"Release  v0.0.1-3724","text":"<p>20th January, 2023</p>"},{"location":"releases/#announcement_3","title":"Announcement","text":"<p><code>ixia-c</code> container images are hosted on GitHub Container Registry, We stopped publishing <code>ixia-c</code> container images to DockerHub.</p>"},{"location":"releases/#about_25","title":"About","text":"<p>This build contains bug fixes.</p>"},{"location":"releases/#build-details_64","title":"Build Details","text":"Component Version Open Traffic Generator API 0.10.6 snappi 0.10.4 gosnappi 0.10.4 ixia-c-controller 0.0.1-3724 ixia-c-traffic-engine 1.6.0.24 ixia-c-app-usage-reporter 0.0.1-37 ixia-c-protocol-engine 1.00.0.256 ixia-c-ixhw-server 0.10.6-1 ixia-c-operator 0.3.1 ixia-c-gnmi-server 1.10.6 ixia-c-one 0.0.1-3722"},{"location":"releases/#bug-fixs_45","title":"Bug Fix(s)","text":"<ul> <li>Payload size field in all inner headers for tunneling protocols do not take into account inner FCS is fixed. #112</li> </ul>"},{"location":"releases/#known-issues_64","title":"Known Issues","text":"<ul> <li>Supported value for <code>flows[i].metrics.latency.mode</code> is <code>cut_through</code>.</li> <li>The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets.</li> </ul>"},{"location":"releases/#release-v001-3698","title":"Release  v0.0.1-3698","text":"<p>15th December, 2022</p>"},{"location":"releases/#announcement_4","title":"Announcement","text":"<p><code>ixia-c</code> container images are hosted on GitHub Container Registry, We stopped publishing <code>ixia-c</code> container images to DockerHub.</p>"},{"location":"releases/#about_26","title":"About","text":"<p>This build contains stability fixes.</p>"},{"location":"releases/#build-details_65","title":"Build Details","text":"Component Version Open Traffic Generator API 0.10.5 snappi 0.10.3 gosnappi 0.10.3 ixia-c-controller 0.0.1-3698 ixia-c-traffic-engine 1.6.0.19 ixia-c-app-usage-reporter 0.0.1-37 ixia-c-protocol-engine 1.00.0.252 ixia-c-operator 0.3.1 ixia-c-gnmi-server 1.10.5 ixia-c-one 0.0.1-3698"},{"location":"releases/#known-issues_65","title":"Known Issues","text":"<ul> <li>Supported value for <code>flows[i].metrics.latency.mode</code> is <code>cut_through</code>.</li> <li>The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets.</li> </ul>"},{"location":"releases/#release-v001-3662","title":"Release  v0.0.1-3662","text":"<p>1st December, 2022</p>"},{"location":"releases/#announcement_5","title":"Announcement","text":"<p><code>ixia-c</code> container images are hosted on GitHub Container Registry. However we will continue publishing <code>ixia-c</code> container images to DockerHub until 18th November, 2022.</p>"},{"location":"releases/#build-details_66","title":"Build Details","text":"Component Version Open Traffic Generator API 0.9.10 snappi 0.9.8 gosnappi 0.9.8 ixia-c-controller 0.0.1-3662 ixia-c-traffic-engine 1.6.0.19 ixia-c-app-usage-reporter 0.0.1-37 ixia-c-protocol-engine 1.00.0.243 ixia-c-operator 0.3.0 ixia-c-gnmi-server 1.9.9 ixia-c-one 0.0.1-3662"},{"location":"releases/#featuress_3","title":"Features(s)","text":"<ul> <li><code>ixia-c-controller</code> now runs with a non-root user inside the container (instead of root user previously)</li> <li><code>ixia-c-controller</code> now listens on non-privileged HTTPs port 8443 (instead of 443 previously)</li> </ul>"},{"location":"releases/#known-issues_66","title":"Known Issues","text":"<ul> <li>Supported value for <code>flows[i].metrics.latency.mode</code> is <code>cut_through</code>.</li> <li>The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets.</li> </ul>"},{"location":"releases/#release-v001-3619","title":"Release  v0.0.1-3619","text":"<p>10th November, 2022</p>"},{"location":"releases/#announcement_6","title":"Announcement","text":"<p><code>ixia-c</code> container images are hosted on GitHub Container Registry. However we will continue publishing <code>ixia-c</code> container images to DockerHub until 18th November, 2022.</p>"},{"location":"releases/#build-details_67","title":"Build Details","text":"Component Version Open Traffic Generator API 0.9.1 snappi 0.9.4 gosnappi 0.9.4 ixia-c-controller 0.0.1-3619 ixia-c-traffic-engine 1.6.0.19 ixia-c-app-usage-reporter 0.0.1-37 ixia-c-protocol-engine 1.00.0.238 ixia-c-operator 0.2.6 ixia-c-gnmi-server 1.9.7 ixia-c-one 0.0.1-3619"},{"location":"releases/#featuress_4","title":"Features(s)","text":"<ul> <li><code>ixia-c-controller</code> and <code>ixia-c-gnmi-server</code> can now accept the environment variables <code>HTTP_PORT</code> and <code>HTTP_SERVER</code> respectively, overriding the values provided for corresponding arguments <code>--http-port</code> and <code>--http-server</code>.</li> <li><code>ixia-c-controller</code> and <code>ixia-c-gnmi-server</code> can now be run using an arbitrary UID (user ID), to support deployment in OpenShift environment.</li> </ul>"},{"location":"releases/#bug-fixs_46","title":"Bug Fix(s)","text":"<ul> <li>Fixed #15.</li> </ul>"},{"location":"releases/#known-issues_67","title":"Known Issues","text":"<ul> <li>Supported value for <code>flows[i].metrics.latency.mode</code> is <code>cut_through</code>.</li> <li>The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets.</li> </ul>"},{"location":"releases/#release-v001-3587","title":"Release  v0.0.1-3587","text":"<p>28th October, 2022</p>"},{"location":"releases/#announcement_7","title":"Announcement","text":"<p><code>ixia-c</code> container images are hosted on GitHub Container Registry. However we will continue publishing <code>ixia-c</code> container images to DockerHub until 18th November, 2022.</p>"},{"location":"releases/#about_27","title":"About","text":"<p>This build contains bug fixes.</p>"},{"location":"releases/#build-details_68","title":"Build Details","text":"Component Version Open Traffic Generator API 0.9.1 snappi 0.9.4 gosnappi 0.9.4 ixia-c-controller 0.0.1-3587 ixia-c-traffic-engine 1.6.0.19 ixia-c-app-usage-reporter 0.0.1-37 ixia-c-protocol-engine 1.00.0.236 ixia-c-operator 0.2.5 ixia-c-gnmi-server 1.9.5 ixia-c-one 0.0.1-3587"},{"location":"releases/#bug-fixs_47","title":"Bug Fix(s)","text":"<ul> <li>#101 fixed.</li> </ul>"},{"location":"releases/#known-issues_68","title":"Known Issues","text":"<ul> <li>Supported value for <code>flows[i].metrics.latency.mode</code> is <code>cut_through</code>.</li> <li>The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets.</li> </ul>"},{"location":"releases/#release-v001-3423","title":"Release  v0.0.1-3423","text":"<p>29th September, 2022</p>"},{"location":"releases/#announcement_8","title":"Announcement","text":"<p><code>ixia-c</code> container images are hosted on GitHub Container Registry. However we will continue publishing <code>ixia-c</code> container images to DockerHub until 18th November, 2022.</p>"},{"location":"releases/#about_28","title":"About","text":"<p>This build contains stability fixes.</p>"},{"location":"releases/#build-details_69","title":"Build Details","text":"Component Version Open Traffic Generator API 0.9.1 snappi 0.9.4 gosnappi 0.9.4 ixia-c-controller 0.0.1-3423 ixia-c-traffic-engine 1.6.0.19 ixia-c-app-usage-reporter 0.0.1-37 ixia-c-protocol-engine 1.00.0.232 ixia-c-operator 0.2.2 ixia-c-gnmi-server 1.9.5 ixia-c-one 0.0.1-3423"},{"location":"releases/#known-limitations","title":"Known Limitations","text":"<ul> <li>Supported value for <code>flows[i].metrics.latency.mode</code> is <code>cut_through</code>.</li> <li>The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets.</li> </ul>"},{"location":"releases/#release-v001-3383","title":"Release  v0.0.1-3383","text":"<p>16th September, 2022</p>"},{"location":"releases/#announcement_9","title":"Announcement","text":"<p><code>ixia-c</code> container images are hosted on GitHub Container Registry. However we will continue publishing <code>ixia-c</code> container images to DockerHub until 18th November, 2022.</p>"},{"location":"releases/#build-details_70","title":"Build Details","text":"Component Version Open Traffic Generator API 0.9.1 snappi 0.9.4 gosnappi 0.9.4 ixia-c-controller 0.0.1-3383 ixia-c-traffic-engine 1.6.0.17 ixia-c-app-usage-reporter 0.0.1-37 ixia-c-protocol-engine 1.00.0.225 ixia-c-operator 0.2.1 ixia-c-gnmi-server 1.9.3 ixia-c-one 0.0.1-3380"},{"location":"releases/#release-featuress_46","title":"Release Features(s)","text":"<ul> <li>Support added for <code>increment</code> and <code>decrement</code> <code>values</code> in all <code>MPLS</code> packet header fields.</li> <li>Support added for raw traffic where <code>tx</code> and <code>rx</code> endpoints could be same.</li> <li>Support added in <code>traffic-engine-service</code> deployment to disable IPv6 networking.</li> <li><code>OPT_ENABLE_IPv6</code> environment flag is introduced. If it is <code>Yes</code> ipv6 networking will be enabled and if it is <code>No</code> ipv6 networking status will be unchanged.</li> </ul>"},{"location":"releases/#bug-fixs_48","title":"Bug Fix(s)","text":"<ul> <li><code>get_config</code> is failing, if config contains TCP header. it is fixed now. #184</li> </ul>"},{"location":"releases/#known-issues_69","title":"Known Issues","text":"<ul> <li>The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets</li> </ul>"},{"location":"releases/#release-v001-3182-latest","title":"Release  v0.0.1-3182 (Latest)","text":"<p>1st September, 2022</p>"},{"location":"releases/#announcement_10","title":"Announcement","text":"<p><code>ixia-c</code> container images are hosted on GitHub Container Registry. However we will continue publishing <code>ixia-c</code> container images to DockerHub until 18th November, 2022.</p>"},{"location":"releases/#build-details_71","title":"Build Details","text":"Component Version Open Traffic Generator API 0.9.1 snappi 0.9.3 gosnappi 0.9.3 ixia-c-controller 0.0.1-3182 ixia-c-traffic-engine 1.6.0.9 ixia-c-app-usage-reporter 0.0.1-37 ixia-c-protocol-engine 1.00.0.217 ixia-c-operator 0.2.1 ixia-c-gnmi-server 1.9.1 ixia-c-one 0.0.1-3182"},{"location":"releases/#release-featuress_47","title":"Release Features(s)","text":"<ul> <li><code>ixia-c-controller</code> container now supports gRPC requests on default TCP port 40051 (alongside TCP port 8443 for HTTP) and hence <code>ixia-c-grpc-server</code> container is no longer needed.</li> <li>There has been a breaking change in OTG API to provide stronger compatibility guarantees across different <code>semver patch versions</code> of snappi and ixia-c-controller.</li> </ul>"},{"location":"releases/#known-issues_70","title":"Known Issues","text":"<ul> <li>The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets</li> </ul>"},{"location":"releases/#release-v001-3113","title":"Release  v0.0.1-3113","text":"<p>18th August, 2022</p>"},{"location":"releases/#announcement_11","title":"Announcement","text":"<p>From now onwards <code>ixia-c</code> container images will be hosted on GitHub Container Registry. However we will continue publishing <code>ixia-c</code> container images to DockerHub as well for the next 3 months. (until 18th November, 2022)</p>"},{"location":"releases/#build-details_72","title":"Build Details","text":"Component Version Open Traffic Generator API 0.8.6 snappi 0.8.8 gosnappi 0.8.8 ixia-c-controller 0.0.1-3113 ixia-c-traffic-engine 1.6.0.9 ixia-c-app-usage-reporter 0.0.1-37 ixia-c-protocol-engine 1.00.0.214 ixia-c-operator 0.1.95 ixia-c-gnmi-server 1.8.13 ixia-c-grpc-server 0.8.9 ixia-c-one 0.0.1-3113"},{"location":"releases/#release-featuress_48","title":"Release Features(s)","text":"<ul> <li>Support added for setting transmit state on subset of configured flows.   https://github.com/open-traffic-generator/ixia-c/issues/56</li> </ul>"},{"location":"releases/#bug-fixs_49","title":"Bug Fix(s)","text":"<ul> <li>When flow duration is configured using <code>fixed_seconds</code>, then in some cases packet transmission does not stop after specified duration has elapsed.   https://github.com/open-traffic-generator/ixia-c/issues/95</li> </ul>"},{"location":"releases/#known-issues_71","title":"Known Issues","text":"<ul> <li>The metric <code>loss</code> in flow metrics is currently not supported.</li> <li>When flow transmit is started, transmission will be restarted on any existing flows already transmitting packets</li> </ul>"},{"location":"releases/#release-v001-3027","title":"Release  v0.0.1-3027","text":"<p>4th August, 2022</p>"},{"location":"releases/#about_29","title":"About","text":"<p>Support added for static <code>MPLS</code> packet header in flows.</p>"},{"location":"releases/#build-details_73","title":"Build Details","text":"Component Version Open Traffic Generator API 0.8.6 snappi 0.8.8 gosnappi 0.8.8 ixia-c-controller 0.0.1-3027 ixia-c-traffic-engine 1.4.1.29 ixia-c-app-usage-reporter 0.0.1-37 ixia-c-protocol-engine 1.00.0.209 ixia-c-operator 0.1.94 ixia-c-gnmi-server 1.8.10 ixia-c-grpc-server 0.8.8 ixia-c-one 0.0.1-3027"},{"location":"releases/#release-featuress_49","title":"Release Features(s)","text":"<ul> <li>Support added for static <code>MPLS</code> packet header in flows.</li> <li>Fixed value is supported for all fields.</li> <li>Dynamic <code>MPLS</code> is not supported yet.<ul> <li><code>label</code> field's  default choice is <code>value</code> if it is selected as <code>auto</code>.</li> </ul> </li> </ul>"},{"location":"releases/#known-issues_72","title":"Known Issues","text":"<ul> <li>The metric <code>loss</code> in flow metrics is currently not supported.</li> </ul>"},{"location":"releases/#release-v001-3002","title":"Release  v0.0.1-3002","text":"<p>27th July, 2022</p>"},{"location":"releases/#about_30","title":"About","text":"<p>This build contains stability fixes.</p>"},{"location":"releases/#build-details_74","title":"Build Details","text":"Component Version Open Traffic Generator API 0.8.5 snappi 0.8.5 gosnappi 0.8.5 ixia-c-controller 0.0.1-3002 ixia-c-traffic-engine 1.4.1.29 ixia-c-app-usage-reporter 0.0.1-37 ixia-c-protocol-engine 1.00.0.205 ixia-c-operator 0.1.94 ixia-c-gnmi-server 1.8.8 ixia-c-grpc-server 0.8.7 ixia-c-one 0.0.1-3002"},{"location":"releases/#known-issues_73","title":"Known Issues","text":"<ul> <li>The metric <code>loss</code> in flow metrics is currently not supported.</li> </ul>"},{"location":"releases/#release-v001-3000","title":"Release  v0.0.1-3000","text":"<p>21st July, 2022</p>"},{"location":"releases/#about_31","title":"About","text":"<p>This build contains stability fixes.</p>"},{"location":"releases/#build-details_75","title":"Build Details","text":"Component Version Open Traffic Generator API 0.8.5 snappi 0.8.5 gosnappi 0.8.5 ixia-c-controller 0.0.1-3000 ixia-c-traffic-engine 1.4.1.29 ixia-c-app-usage-reporter 0.0.1-37 ixia-c-protocol-engine 1.00.0.203 ixia-c-operator 0.1.94 ixia-c-gnmi-server 1.8.8 ixia-c-grpc-server 0.8.7 ixia-c-one 0.0.1-3000"},{"location":"releases/#known-issues_74","title":"Known Issues","text":"<ul> <li>The metric <code>loss</code> in flow metrics is currently not supported.</li> </ul>"},{"location":"releases/#release-v001-2994","title":"Release  v0.0.1-2994","text":"<p>1st July, 2022</p>"},{"location":"releases/#about_32","title":"About","text":"<p>This build contains stability fixes.</p>"},{"location":"releases/#build-details_76","title":"Build Details","text":"Component Version Open Traffic Generator API 0.8.1 snappi 0.8.2 gosnappi 0.8.2 ixia-c-controller 0.0.1-2994 ixia-c-traffic-engine 1.4.1.29 ixia-c-app-usage-reporter 0.0.1-37 ixia-c-protocol-engine 1.00.0.192 ixia-c-operator 0.1.94 ixia-c-gnmi-server 1.8.3 ixia-c-grpc-server 0.8.2 ixia-c-one 0.0.1-2994"},{"location":"releases/#known-issues_75","title":"Known Issues","text":"<ul> <li>The metric <code>loss</code> in flow metrics is currently not supported.</li> </ul>"},{"location":"releases/#release-v001-2992","title":"Release  v0.0.1-2992","text":"<p>30th June, 2022</p>"},{"location":"releases/#about_33","title":"About","text":"<p>This build contains stability fixes.</p>"},{"location":"releases/#build-details_77","title":"Build Details","text":"Component Version Open Traffic Generator API 0.8.1 snappi 0.8.2 gosnappi 0.8.2 ixia-c-controller 0.0.1-2992 ixia-c-traffic-engine 1.4.1.29 ixia-c-app-usage-reporter 0.0.1-37 ixia-c-protocol-engine 1.00.0.191 ixia-c-operator 0.1.94 ixia-c-gnmi-server 1.8.3 ixia-c-grpc-server 0.8.2 ixia-c-one 0.0.1-2992"},{"location":"releases/#known-issues_76","title":"Known Issues","text":"<ul> <li>The metric <code>loss</code> in flow metrics is currently not supported.</li> </ul>"},{"location":"releases/#release-v001-2969","title":"Release  v0.0.1-2969","text":"<p>16th June, 2022</p>"},{"location":"releases/#about_34","title":"About","text":"<p>This build contains stability fixes.</p>"},{"location":"releases/#build-details_78","title":"Build Details","text":"Component Version Open Traffic Generator API 0.7.15 snappi 0.7.41 gosnappi 0.7.41 ixia-c-controller 0.0.1-2969 ixia-c-traffic-engine 1.4.1.29 ixia-c-app-usage-reporter 0.0.1-37 ixia-c-protocol-engine 1.00.0.181 ixia-c-operator 0.1.94 ixia-c-gnmi-server 1.7.31 ixia-c-grpc-server 0.7.17 ixia-c-one 0.0.1-2969"},{"location":"releases/#known-issues_77","title":"Known Issues","text":"<ul> <li>The metric <code>loss</code> in flow metrics is currently not supported.</li> </ul>"},{"location":"releases/#release-v001-2934","title":"Release  v0.0.1-2934","text":"<p>2nd June, 2022</p>"},{"location":"releases/#about_35","title":"About","text":"<p>This build contains bug fixes.</p>"},{"location":"releases/#build-details_79","title":"Build Details","text":"Component Version Open Traffic Generator API 0.7.13 snappi 0.7.37 gosnappi 0.7.37 ixia-c-controller 0.0.1-2934 ixia-c-traffic-engine 1.4.1.26 ixia-c-app-usage-reporter 0.0.1-37 ixia-c-protocol-engine 1.00.0.174 ixia-c-operator 0.1.94 ixia-c-gnmi-server 1.7.27 ixia-c-grpc-server 0.7.15 ixia-c-one 0.0.1-2934"},{"location":"releases/#bug-fixs_50","title":"Bug Fix(s)","text":"<ul> <li><code>ixia-c-controller</code> will return an empty response instead of error when <code>metrics</code> / <code>states</code> are queried right after boot-up.</li> <li><code>ixia-c-gnmi-server</code> will return an empty response instead of error when <code>metrics</code> / <code>states</code> are queried without ever setting config</li> </ul>"},{"location":"releases/#known-issues_78","title":"Known Issues","text":"<ul> <li>The metric <code>loss</code> in flow metrics is currently not supported.</li> </ul>"},{"location":"releases/#release-v001-2897","title":"Release  v0.0.1-2897","text":"<p>19th May, 2022</p>"},{"location":"releases/#build-details_80","title":"Build Details","text":"Component Version Open Traffic Generator API 0.7.8 snappi 0.7.18 gosnappi 0.7.18 ixia-c-controller 0.0.1-2897 ixia-c-traffic-engine 1.4.1.26 ixia-c-app-usage-reporter 0.0.1-37 ixia-c-protocol-engine 1.00.0.165 ixia-c-operator 0.1.94 ixia-c-gnmi-server 1.7.23 ixia-c-grpc-server 0.7.12 ixia-c-one 0.0.1-2897"},{"location":"releases/#new-features","title":"New Feature(s)","text":"<ul> <li><code>ixia-c-one</code> is now supported on platforms with <code>cgroupv2</code> enabled. https://github.com/open-traffic-generator/ixia-c/issues/77</li> </ul>"},{"location":"releases/#known-issues_79","title":"Known Issues","text":"<ul> <li>The metric <code>loss</code> in flow metrics is currently not supported.</li> </ul>"},{"location":"releases/#release-v001-2801","title":"Release  v0.0.1-2801","text":"<p>9th May, 2022</p>"},{"location":"releases/#about_36","title":"About","text":"<p>This build includes stability fixes.</p>"},{"location":"releases/#build-details_81","title":"Build Details","text":"Component Version Open Traffic Generator API 0.7.8 snappi 0.7.18 gosnappi 0.7.18 ixia-c-controller 0.0.1-2801 ixia-c-traffic-engine 1.4.1.26 ixia-c-app-usage-reporter 0.0.1-37 ixia-c-protocol-engine 1.00.0.158 ixia-c-operator 0.1.89 ixia-c-gnmi-server 1.7.15 ixia-c-grpc-server 0.7.8"},{"location":"releases/#known-issues_80","title":"Known Issues","text":"<ul> <li>The metric <code>loss</code> in flow metrics is currently not supported.</li> </ul>"},{"location":"releases/#release-v001-2790","title":"Release  v0.0.1-2790","text":"<p>5th May, 2022</p>"},{"location":"releases/#about_37","title":"About","text":"<p>This build includes stability fixes.</p>"},{"location":"releases/#build-details_82","title":"Build Details","text":"Component Version Open Traffic Generator API 0.7.8 snappi 0.7.18 gosnappi 0.7.18 ixia-c-controller 0.0.1-2790 ixia-c-traffic-engine 1.4.1.26 ixia-c-app-usage-reporter 0.0.1-37 ixia-c-protocol-engine 1.00.0.158 ixia-c-operator 0.0.80 ixia-c-gnmi-server 1.7.15 ixia-c-grpc-server 0.7.8"},{"location":"releases/#known-issues_81","title":"Known Issues","text":"<ul> <li>The metric <code>loss</code> in flow metrics is currently not supported.</li> </ul>"},{"location":"releases/#release-v001-2770","title":"Release  v0.0.1-2770","text":"<p>21st April, 2022</p>"},{"location":"releases/#about_38","title":"About","text":"<p>This build includes stability fixes.</p>"},{"location":"releases/#build-details_83","title":"Build Details","text":"Component Version Open Traffic Generator API 0.7.8 snappi 0.7.18 gosnappi 0.7.18 ixia-c-controller 0.0.1-2770 ixia-c-traffic-engine 1.0.0.275 ixia-c-app-usage-reporter 0.0.1-37 ixia-c-protocol-engine 1.00.0.154 ixia-c-operator 0.0.80 ixia-c-gnmi-server 1.7.13 ixia-c-grpc-server 0.7.8"},{"location":"releases/#known-issues_82","title":"Known Issues","text":"<ul> <li>The metric <code>loss</code> in flow metrics is currently not supported.</li> </ul>"},{"location":"releases/#release-v001-2755","title":"Release  v0.0.1-2755","text":"<p>7th April, 2022</p>"},{"location":"releases/#about_39","title":"About","text":"<p>This build includes following bug fix</p> <ul> <li>Clearing of <code>port</code> and <code>flow</code> statistics as part of <code>set_config</code>.</li> </ul>"},{"location":"releases/#build-details_84","title":"Build Details","text":"Component Version Open Traffic Generator API 0.7.8 snappi 0.7.18 gosnappi 0.7.18 ixia-c-controller 0.0.1-2755 ixia-c-traffic-engine 1.4.1.23 ixia-c-app-usage-reporter 0.0.1-37 ixia-c-protocol-engine 1.00.0.152 ixia-c-operator 0.0.75 ixia-c-gnmi-server 0.7.8 ixia-c-grpc-server 0.7.8"},{"location":"releases/#bug-fixs_51","title":"Bug Fix(s)","text":"<ul> <li>Clearing of <code>port</code> and <code>flow</code> statistics is now part of <code>set_config</code>.</li> </ul>"},{"location":"releases/#known-issues_83","title":"Known Issues","text":"<ul> <li>The metric <code>loss</code> in flow metrics is currently not supported.</li> </ul>"},{"location":"releases/#release-v001-2738","title":"Release  v0.0.1-2738","text":"<p>25th March, 2022</p>"},{"location":"releases/#about_40","title":"About","text":"<p>This build includes following new functionalities</p> <ul> <li>fix in handling of <code>ether_type</code> field of ethernet packet</li> </ul>"},{"location":"releases/#build-details_85","title":"Build Details","text":"Component Version Open Traffic Generator API 0.7.8 snappi 0.7.18 gosnappi 0.7.18 ixia-c-controller 0.0.1-2738 ixia-c-traffic-engine 1.4.1.23 ixia-c-app-usage-reporter 0.0.1-37 ixia-c-protocol-engine 1.00.0.151 ixia-c-operator 0.0.75 ixia-c-gnmi-server 0.7.8 ixia-c-grpc-server 0.7.8"},{"location":"releases/#new-features_1","title":"New Feature(s)","text":"<ul> <li>Users would be able to set <code>ether_type</code> in ethernet header which may not be based on the next header type.</li> </ul>"},{"location":"releases/#known-issues_84","title":"Known Issues","text":"<ul> <li>The metric <code>loss</code> in flow metrics is currently not supported.</li> </ul>"},{"location":"releases/#release-v001-2727","title":"Release  v0.0.1-2727","text":"<p>24th March, 2022</p>"},{"location":"releases/#about_41","title":"About","text":"<p>This build includes following new functionalities</p> <ul> <li>correct received(rx) rate statistics in port metrics</li> <li>auto destination mac learning support in destination mac field of ethernet packet</li> </ul>"},{"location":"releases/#build-details_86","title":"Build Details","text":"Component Version Open Traffic Generator API 0.7.8 snappi 0.7.18 gosnappi 0.7.18 ixia-c-controller 0.0.1-2727 ixia-c-traffic-engine 1.4.1.23 ixia-c-app-usage-reporter 0.0.1-37 ixia-c-protocol-engine 1.00.0.151 ixia-c-operator 0.0.75 ixia-c-gnmi-server 0.7.8 ixia-c-grpc-server 0.7.8"},{"location":"releases/#new-features_2","title":"New Feature(s)","text":"<ul> <li> <p>Correct received(rx) rate statistics support is incorporated as part of port metrics.</p> </li> <li> <p><code>frames_rx_rate</code></p> </li> <li><code>bytes_rx_rate</code></li> <li>[Breaking Change] Auto learning of destination MAC is currently supported for both IPv4 and IPv6 Flows without any VLAN(originated from device endpoints) by setting ethernet destination with <code>choice</code> as <code>auto</code> in the packet. Earlier this was working by setting ethernet destination mac with \"00:00:00:00:00:00\" in the packet header.</li> </ul> <pre><code>    {\n        \"choice\": \"ethernet\",\n        \"ethernet\": {\n            \"dst\": {\n                \"choice\": \"auto\"\n            },\n            \"src\": {\n                \"choice\": \"value\",\n                \"value\": \"00:00:01:01:01:01\"\n            }\n        }\n    },\n</code></pre>"},{"location":"releases/#known-issues_85","title":"Known Issues","text":"<ul> <li>The metric <code>loss</code> in flow metrics is currently not supported.</li> </ul>"},{"location":"releases/#release-v001-2678","title":"Release  v0.0.1-2678","text":"<p>11th March, 2022</p>"},{"location":"releases/#about_42","title":"About","text":"<p>This build contains stability and debuggability enhancements.</p>"},{"location":"releases/#build-details_87","title":"Build Details","text":"Component Version Open Traffic Generator API 0.7.3 snappi 0.7.13 gosnappi 0.7.13 ixia-c-controller 0.0.1-2678 ixia-c-traffic-engine 1.4.1.23 ixia-c-app-usage-reporter 0.0.1-37 ixia-c-protocol-engine 1.00.0.146 ixia-c-operator 0.0.75 ixia-c-gnmi-server 0.7.5 ixia-c-grpc-server 0.7.7"},{"location":"releases/#known-issues_86","title":"Known Issues","text":"<ul> <li>The metric <code>loss</code> in flow metrics is currently not supported.</li> </ul>"},{"location":"releases/#release-v001-2662","title":"Release  v0.0.1-2662","text":"<p>24th February, 2022</p>"},{"location":"releases/#about_43","title":"About","text":"<p>This build implements transmit(tx) statistics &amp; transmit state of flow metrics.</p>"},{"location":"releases/#build-details_88","title":"Build Details","text":"Component Version Open Traffic Generator API 0.7.3 snappi 0.7.13 gosnappi 0.7.13 ixia-c-controller 0.0.1-2662 ixia-c-traffic-engine 1.4.1.23 ixia-c-app-usage-reporter 0.0.1-37 ixia-c-protocol-engine 1.00.0.144 ixia-c-operator 0.0.75 ixia-c-gnmi-server 0.7.5 ixia-c-grpc-server 0.7.6"},{"location":"releases/#new-features_3","title":"New Feature(s)","text":"<ul> <li>Transmit(tx) statistics &amp; Transmit state support is incorporated as part of flow metrics.</li> <li><code>transmit</code></li> <li><code>frames_tx</code></li> <li><code>frames_tx_rate</code></li> </ul>"},{"location":"releases/#known-issues_87","title":"Known Issues","text":"<ul> <li>The metric <code>loss</code> in flow metrics is currently not supported.</li> </ul>"},{"location":"releases/#release-v001-2610","title":"Release v0.0.1-2610","text":"<p>10th February, 2022</p>"},{"location":"releases/#about_44","title":"About","text":"<p>This build contains stability fixes.</p>"},{"location":"releases/#build-details_89","title":"Build Details","text":"Component Version Open Traffic Generator API 0.7.3 snappi 0.7.13 gosnappi 0.7.13 ixia-c-controller 0.0.1-2610 ixia-c-traffic-engine 1.4.1.5 ixia-c-app-usage-reporter 0.0.1-37 ixia-c-protocol-engine 1.00.0.133 ixia-c-operator 0.0.72 ixia-c-gnmi-server 0.7.5 ixia-c-grpc-server 0.7.5"},{"location":"releases/#known-issues_88","title":"Known Issues","text":"<ul> <li>The metric <code>loss</code> in flow metrics is currently not supported.</li> </ul>"},{"location":"releases/#release-v001-2597","title":"Release v0.0.1-2597","text":"<p>27th January, 2022</p>"},{"location":"releases/#about_45","title":"About","text":"<p>This build contains debuggability enhancements.</p>"},{"location":"releases/#build-details_90","title":"Build Details","text":"Component Version Open Traffic Generator API 0.7.2 snappi 0.7.6 gosnappi 0.7.6 ixia-c-controller 0.0.1-2597 ixia-c-traffic-engine 1.4.1.2 ixia-c-app-usage-reporter 0.0.1-37 ixia-c-protocol-engine 1.00.0.133 ixia-c-operator 0.0.70 ixia-c-gnmi-server 0.7.4 ixia-c-grpc-server 0.7.4"},{"location":"releases/#known-issues_89","title":"Known Issues","text":"<ul> <li>The metric <code>loss</code> in flow metrics is currently not supported.</li> </ul>"},{"location":"releases/#release-v001-2543","title":"Release v0.0.1-2543","text":"<p>16th December, 2021</p>"},{"location":"releases/#about_46","title":"About","text":"<p>This build contains stability fixes.</p>"},{"location":"releases/#build-details_91","title":"Build Details","text":"Component Version Open Traffic Generator API 0.7.2 snappi 0.7.3 gosnappi 0.7.3 ixia-c-controller 0.0.1-2543 ixia-c-traffic-engine 1.4.1.2 ixia-c-app-usage-reporter 0.0.1-37 ixia-c-protocol-engine 1.00.0.127 ixia-c-operator 0.0.70 ixia-c-gnmi-server 0.7.2 ixia-c-grpc-server 0.7.2"},{"location":"releases/#known-issues_90","title":"Known Issues","text":"<ul> <li>The metric <code>loss</code> in flow metrics is currently not supported.</li> </ul>"},{"location":"releases/#release-v001-2446","title":"Release v0.0.1-2446","text":"<p>2nd December, 2021</p>"},{"location":"releases/#about_47","title":"About","text":"<p>This build introduces ability to return large <code>FramesTx/RX</code> values by <code>metric</code> APIs.</p>"},{"location":"releases/#build-details_92","title":"Build Details","text":"Component Version Open Traffic Generator API 0.6.13 snappi 0.6.21 gosnappi 0.6.21 ixia-c-controller 0.0.1-2446 ixia-c-traffic-engine 1.4.0.15 ixia-c-app-usage-reporter 0.0.1-37 ixia-c-protocol-engine 1.00.0.115 ixia-c-operator 0.0.70 ixia-c-gnmi-server 0.6.18 ixia-c-grpc-server 0.6.17"},{"location":"releases/#new-features_4","title":"New Feature(s)","text":"<ul> <li>Maximum <code>FramesTx</code> and <code>FramesRx</code> value that can be correctly returned by <code>flow_metrics</code> and <code>port_metrics</code> has been increased from 2147483648 to 9.223372e+18</li> </ul>"},{"location":"releases/#known-issues_91","title":"Known Issues","text":"<ul> <li>The metric <code>loss</code> in flow metrics is currently not supported.</li> </ul>"},{"location":"releases/#release-v001-2399","title":"Release v0.0.1-2399","text":"<p>18th November, 2021</p>"},{"location":"releases/#about_48","title":"About","text":"<p>This build introduces ability to auto plug in default values for missing fields with primitive types upon receiving JSON payload.</p>"},{"location":"releases/#build-details_93","title":"Build Details","text":"Component Version Open Traffic Generator API 0.6.10 snappi 0.6.16 gosnappi 0.6.16 ixia-c-controller 0.0.1-2399 ixia-c-traffic-engine 1.4.0.15 ixia-c-app-usage-reporter 0.0.1-37 ixia-c-protocol-engine 1.00.0.111 ixia-c-operator 0.0.70 ixia-c-gnmi-server 0.6.14 ixia-c-grpc-server 0.6.15"},{"location":"releases/#new-features_5","title":"New Feature(s)","text":"<ul> <li>Upon receiving JSON payload, ixia-c-controller will now automatically plug in default values for missing fields with primitive types.</li> </ul>"},{"location":"releases/#known-issues_92","title":"Known Issues","text":"<ul> <li>The metric <code>loss</code> in flow metrics is currently not supported.</li> </ul>"},{"location":"releases/#release-v001-2367","title":"Release v0.0.1-2367","text":"<p>5th November, 2021</p>"},{"location":"releases/#about_49","title":"About","text":"<p>This build introduces uniform logging across some Ixia-c components.</p>"},{"location":"releases/#build-details_94","title":"Build Details","text":"Component Version Open Traffic Generator API 0.6.7 snappi 0.6.12 gosnappi 0.6.12 ixia-c-controller 0.0.1-2367 ixia-c-traffic-engine 1.4.0.15 ixia-c-app-usage-reporter 0.0.1-37 ixia-c-protocol-engine 1.00.0.96 ixia-c-operator 0.0.1-65 ixia-c-gnmi-server 0.6.11 ixia-c-grpc-server 0.6.11"},{"location":"releases/#bug-fixs_52","title":"Bug Fix(s)","text":"<ul> <li>Introduced structured logging for <code>ixia-c-gnmi-server</code> and <code>ixia-c-grpc-server</code> to aid uniform logging across Ixia-c components.</li> </ul>"},{"location":"releases/#known-issues_93","title":"Known Issues","text":"<ul> <li>The metric <code>loss</code> in flow metrics is currently not supported.</li> </ul>"},{"location":"releases/#release-v001-2342","title":"Release v0.0.1-2342","text":"<p>27th October, 2021</p>"},{"location":"releases/#about_50","title":"About","text":"<p>This build contains validation bug fixes.</p>"},{"location":"releases/#build-details_95","title":"Build Details","text":"Component Version Open Traffic Generator API 0.6.5 snappi 0.6.5 gosnappi 0.6.5 ixia-c-controller 0.0.1-2342 ixia-c-traffic-engine 1.4.0.15 ixia-c-app-usage-reporter 0.0.1-37 ixia-c-protocol-engine 1.00.0.83 ixia-c-operator 0.0.1-65 ixia-c-gnmi-server 0.6.6 ixia-c-grpc-server 0.6.6"},{"location":"releases/#bug-fixs_53","title":"Bug Fix(s)","text":"<ul> <li>Validation has been fixed for traffic configuration consisting of IPv4 and IPv6 interface names</li> </ul>"},{"location":"releases/#known-issues_94","title":"Known Issues","text":"<ul> <li>The metric <code>loss</code> in flow metrics is currently not supported.</li> </ul>"},{"location":"releases/#release-v001-2337","title":"Release v0.0.1-2337","text":"<p>21st October, 2021</p>"},{"location":"releases/#about_51","title":"About","text":"<p>This build contains bugfixes for SetConfig and FPS values in GetMetrics.</p>"},{"location":"releases/#build-details_96","title":"Build Details","text":"Component Version Open Traffic Generator API 0.6.5 snappi 0.6.5 gosnappi 0.6.5 ixia-c-controller 0.0.1-2337 ixia-c-traffic-engine 1.4.0.14 ixia-c-app-usage-reporter 0.0.1-37 ixia-c-protocol-engine 1.00.0.83 ixia-c-operator 0.0.1-65 ixia-c-gnmi-server 0.6.6 ixia-c-grpc-server 0.6.6"},{"location":"releases/#new-features_6","title":"New Feature(s)","text":"<ul> <li>The race condition during connection initialization in <code>SetConfig</code> is fixed for scenarios involving large port count.</li> <li>FPS value in <code>GetMetrics</code> for ports and flows is fixed for scenarios involving multiple consecutive SetTransmitState calls.</li> </ul>"},{"location":"releases/#known-issues_95","title":"Known Issues","text":"<ul> <li>The metric <code>loss</code> in flow metrics is currently not supported.</li> </ul>"},{"location":"releases/#release-v001-2289","title":"Release v0.0.1-2289","text":"<p>29th September, 2021</p>"},{"location":"releases/#about_52","title":"About","text":"<p>This build contains support for performance optimisation through concurrent port operations.</p>"},{"location":"releases/#build-details_97","title":"Build Details","text":"Component Version Open Traffic Generator API 0.6.1 snappi 0.6.1 ixia-c-controller 0.0.1-2289 ixia-c-traffic-engine 1.4.0.13 ixia-c-app-usage-reporter 0.0.1-37 ixia-c-protocol-engine 1.00.0.70 otg-gnmi-server 0.6.1 otg-grpc-server 0.6.1"},{"location":"releases/#new-features_7","title":"New Feature(s)","text":"<ul> <li>Performance is optimised through concurrent port operations.</li> </ul>"},{"location":"releases/#known-issues_96","title":"Known Issues","text":"<ul> <li>The metric <code>loss</code> in flow metrics is currently not supported.</li> </ul>"},{"location":"releases/#release-v001-2185","title":"Release v0.0.1-2185","text":"<p>8th September, 2021</p>"},{"location":"releases/#about_53","title":"About","text":"<p>This build contains support for updating flow rate without disrupting transmit state.</p>"},{"location":"releases/#build-details_98","title":"Build Details","text":"Component Version Open Traffic Generator API 0.5.4 snappi 0.5.3 ixia-c-controller 0.0.1-2185 ixia-c-traffic-engine 1.4.0.11 ixia-c-app-usage-reporter 0.0.1-37 ixia-c-protocol-engine 1.00.0.56 otg-gnmi-server 0.5.2 otg-grpc-server 0.5.3"},{"location":"releases/#new-features_8","title":"New Feature(s)","text":"<ul> <li>Updating flow rate without disrupting transmit state is now supported. Rate of multiple flows can be updated simultaneously through <code>update_flows</code> api without stopping the traffic.</li> </ul>"},{"location":"releases/#known-issues_97","title":"Known Issues","text":"<ul> <li>The metric <code>loss</code> in flow metrics is currently not supported.</li> </ul>"},{"location":"releases/#release-v001-2120","title":"Release v0.0.1-2120","text":"<p>27th August, 2021</p>"},{"location":"releases/#about_54","title":"About","text":"<p>This build contains support for capture filter, setting GRE checksum flag, redirecting Ixia-c controller log to stdout and some bug fixes.</p>"},{"location":"releases/#build-details_99","title":"Build Details","text":"Component Version Open Traffic Generator API 0.4.12 snappi 0.4.25 ixia-c-controller 0.0.1-2120 ixia-c-traffic-engine 1.4.0.9 ixia-c-app-usage-reporter 0.0.1-37 ixia-c-protocol-engine 1.00.0.50 otg-gnmi-server 0.4.4 otg-grpc-server 0.0.9"},{"location":"releases/#new-features_9","title":"New Feature(s)","text":"<ul> <li>Capture filters are now supported. Multiple patterns can be specified in the configuration.</li> <li>Controller log is now redirected to stdout. <code>docker logs</code> can now be used to access Ixia-c controller logs.</li> <li>Checksum field in <code>GRE</code> header now can be set.</li> </ul>"},{"location":"releases/#bug-fixes","title":"Bug Fixes","text":"<ul> <li>All patterns of IPv6 value now can be set for <code>increment</code> and <code>decrement</code> properties in flow header fields.</li> <li>Default value of step for <code>decrement</code> properties in flow header fields is now set correctly.</li> </ul>"},{"location":"releases/#known-issues_98","title":"Known Issues","text":"<ul> <li>The metric <code>loss</code> in flow metrics is currently not supported.</li> </ul>"},{"location":"releases/#release-v001-1622","title":"Release v0.0.1-1622","text":"<p>25th June, 2021</p>"},{"location":"releases/#about_55","title":"About","text":"<p>This build contains support for protocols GRE and VXLAN (RFC 2784), enabling/disabling flow metrics and some bug fixes.</p>"},{"location":"releases/#build-details_100","title":"Build Details","text":"Component Version Open Traffic Generator API 0.4.0 snappi 0.4.0 ixia-c-controller 0.0.1-1622 ixia-c-traffic-engine 1.4.0.1 ixia-c-app-usage-reporter 0.0.1-36"},{"location":"releases/#new-features_10","title":"New Feature(s)","text":"<ul> <li>Flow header configuration for protocols <code>GRE</code> and <code>VXLAN (RFC 2784)</code> are now supported.</li> <li>Flow metrics is now disabled by default to allow transmitting packets with <code>unaltered payload</code>(i.e. without any timestamps and instrumentation bytes embedded in it).</li> <li>Flow metrics (including metrics that are its sub-properties, e.g. <code>latency</code> and <code>timestamp</code>) can now be explicitly enabled on per-flow basis.</li> </ul>"},{"location":"releases/#bug-fixes_1","title":"Bug Fixes","text":"<ul> <li><code>ixia-c-controller</code> can now safely serve multiple parallel requests from different clients preventing any undefined behavior.</li> <li>Port metrics can now be fetched for ports which are not part of flow configuration.</li> <li>Providing port locations for <code>ixia-c-traffic-engine</code> running in unsupported mode will now throw a user-friendly error.</li> <li>Default values for <code>increment</code> and <code>decrement</code> properties in flow header fields are now aligned per Open Traffic Generator API.</li> </ul>"},{"location":"releases/#known-issues_99","title":"Known Issues","text":"<ul> <li>Checksum field in <code>GRE</code> header currently cannot be set.</li> <li>The metric <code>loss</code> in flow metrics is currently not supported.</li> </ul>"},{"location":"releases/#release-v001-1388","title":"Release v0.0.1-1388","text":"<p>31st May, 2021</p>"},{"location":"releases/#about_56","title":"About","text":"<p>This build contains support for flow delay and some bug fixes.</p>"},{"location":"releases/#build-details_101","title":"Build Details","text":"Component Version Open Traffic Generator API 0.3.10 snappi 0.3.20 ixia-c-controller 0.0.1-1388 ixia-c-traffic-engine 1.2.0.12 ixia-c-app-usage-reporter 0.0.1-36"},{"location":"releases/#new-features_11","title":"New Feature(s)","text":"<ul> <li>Ixia-c now supports <code>delay</code> parameter in flow configuration.  Refer to v0.3.10 of the Open Traffic Generator API specification for more details.</li> </ul>"},{"location":"releases/#bug-fixes_2","title":"Bug Fixes","text":"<ul> <li>The flow configuration parameter <code>inter_burst_gap</code> when specified in nanoseconds can now be set to a value larger than 4.2 seconds.</li> <li>Invalid values can now be set for the <code>phb</code> (per hob behavior) field in the DSCP bits in the IPv4 header.</li> <li>The <code>set_config</code> method will return an error when flows are over subscribed.</li> <li>Fixed an error in calculation for packet counts when <code>duration</code> is set in terms of fixed_seconds.</li> </ul>"},{"location":"releases/#known-issues_100","title":"Known Issues","text":"<ul> <li>The metrics <code>frames_rx_rate</code> and <code>bytes_rx_rate</code> in port statistics are not calculated correctly and are always zero.</li> <li>The metric <code>min_latency_ns</code> in flow statistics is not calculated correctly and is always zero.</li> </ul>"},{"location":"resources/","title":"Resources","text":"<ol> <li>Product page</li> <li>Data Sheet</li> <li>Documentation<ul> <li>Quick Start</li> <li>User Guide</li> <li>Developer Guide</li> <li>Reference Guide</li> <li>Releases</li> </ul> </li> <li>Open Traffic Generator<ul> <li>Model Browser</li> <li>Clients</li> <li>Examples</li> </ul> </li> <li>OpenConfig<ul> <li>KNE IxiaTG Controller</li> <li>FeatureProfiles Test Suite</li> </ul> </li> <li>Containerlab Ixia-c-one</li> </ol>"},{"location":"roadmap/","title":"Roadmap","text":"<p>Ixia-c is released periodically.  This page does NOT list all the minor/bug-fix releases that are planned.</p>"},{"location":"sample-scripts/","title":"Sample scripts","text":"<p>The following text was taken from the UHD400 topic.</p>"},{"location":"sample-scripts/#sample-gosnappi-scripts","title":"Sample <code>gosnappi</code> scripts","text":"<p>Two sample <code>gosnappi</code> scripts can be found in the directory <code>gosnappi/</code> of the following git repo: https://gitlab.it.keysight.com/p4isg/uhd-400g-docs. They are also located in the admin shell of the UHD. </p> <p>The two sample scripts provided are <code>uhd_b2b.go</code> and <code>uhd_b2b_bgp.go</code>. </p> <ul> <li><code>uhd_b2b.go</code> sends a fixed packet count with incrementing MAC and IP addresses. The script then collects and verifies the flow statistics.</li> <li><code>uhd_b2b_bgp.go</code> configures 1 BGP session per  port and advertises 2 routes. The script then sends a fixed packet count across those routes. The script finally collects and verifies the flow statistics. </li> </ul> <p>The scripts' topology assumes a back-to-back connection between odd- and even-numbered ports (for example, 1&lt;--&gt;2, 3&lt;--&gt;4, ..., 15&lt;--&gt;16).</p> <p>To build <code>./build.sh</code> (Go must be installed):</p> <pre><code># build\n./build.sh\n\n# Run uhd_b2b\n./gosnappi/uhd_b2b -host https://&lt;ip of UHD&gt;\n\n# Run uhd_b2b_bgp\n./gosnappi/uhd_b2b_bgp -host https://&lt;ip of UHD&gt;\n</code></pre> <p>For information on gosnappi, see https://github.com/open-traffic-generator/snappi/tree/main/gosnappi.</p>"},{"location":"sample-scripts/#reference","title":"Reference","text":"Expand this section for sample output of `uhd_b2b` test <pre><code>./gosnappi/uhd_b2b -host https://10.36.79.196\n\n2022/02/28 20:17:04 Total ports is 2\n2022/02/28 20:17:04 Creating gosnappi client for gRPC server grpc-service.default.svc.cluster.local:40051 ...\n2022/02/28 20:17:04 Connecting to server at https://10.36.79.196\n2022/02/28 20:17:04 Creating port p1 at location uhd://nanite-bfs-v1.nanite-bfs:7531;1\n2022/02/28 20:17:04 Creating port p2 at location uhd://nanite-bfs-v1.nanite-bfs:7531;2\n2022/02/28 20:17:04 Creating flow p1-&gt;p2-IPv4\n2022/02/28 20:17:04 Flow p1-&gt;p2-IPv4 srcMac 00:11:22:33:44:00 dstMac 00:11:22:33:44:01\n2022/02/28 20:17:04 Flow p1-&gt;p2-IPv4 srcIp 10.1.1.1 dstIp 10.1.1.2\n2022/02/28 20:17:04 Creating flow p2-&gt;p1-IPv4\n2022/02/28 20:17:04 Flow p2-&gt;p1-IPv4 srcMac 00:11:22:33:44:01 dstMac 00:11:22:33:44:00\n2022/02/28 20:17:04 Flow p2-&gt;p1-IPv4 srcIp 10.1.1.2 dstIp 10.1.1.1\n2022/02/28 20:17:04 flows:\n- duration:\n    choice: fixed_packets\n    fixed_packets:\n      gap: 12\n      packets: 5000000\n  metrics:\n    enable: true\n    loss: false\n    timestamps: false\n  name: p1-&gt;p2-IPv4\n  packet:\n  - choice: ethernet\n    ethernet:\n      dst:\n        choice: increment\n        increment:\n          count: 10000\n          start: \"00:11:22:33:44:01\"\n          step: \"00:00:00:00:01:00\"\n      src:\n        choice: increment\n        increment:\n          count: 10000\n          start: \"00:11:22:33:44:00\"\n          step: \"00:00:00:00:01:00\"\n  - choice: ipv4\n    ipv4:\n      dst:\n        choice: increment\n        increment:\n          count: 10000\n          start: 10.1.1.2\n          step: 0.1.0.0\n      src:\n        choice: increment\n        increment:\n          count: 10000\n          start: 10.1.1.1\n          step: 0.1.0.0\n  rate:\n    choice: percentage\n    percentage: 10\n  size:\n    choice: fixed\n    fixed: 64\n  tx_rx:\n    choice: port\n    port:\n      rx_name: p2\n      tx_name: p1\n- duration:\n    choice: fixed_packets\n    fixed_packets:\n      gap: 12\n      packets: 5000000\n  metrics:\n    enable: true\n    loss: false\n    timestamps: false\n  name: p2-&gt;p1-IPv4\n  packet:\n  - choice: ethernet\n    ethernet:\n      dst:\n        choice: increment\n        increment:\n          count: 10000\n          start: \"00:11:22:33:44:00\"\n          step: \"00:00:00:00:01:00\"\n      src:\n        choice: increment\n        increment:\n          count: 10000\n          start: \"00:11:22:33:44:01\"\n          step: \"00:00:00:00:01:00\"\n  - choice: ipv4\n    ipv4:\n      dst:\n        choice: increment\n        increment:\n          count: 10000\n          start: 10.1.1.1\n          step: 0.1.0.0\n      src:\n        choice: increment\n        increment:\n          count: 10000\n          start: 10.1.1.2\n          step: 0.1.0.0\n  rate:\n    choice: percentage\n    percentage: 10\n  size:\n    choice: fixed\n    fixed: 64\n  tx_rx:\n    choice: port\n    port:\n      rx_name: p1\n      tx_name: p2\nlayer1:\n- mtu: 1500\n  name: l1\n  port_names:\n  - p1\n  - p2\n  promiscuous: true\n  speed: speed_400_gbps\nports:\n- location: uhd://nanite-bfs-v1.nanite-bfs:7531;1\n  name: p1\n- location: uhd://nanite-bfs-v1.nanite-bfs:7531;2\n  name: p2\n &lt;nil&gt;\n2022/02/28 20:17:04 Setting Config ...\n2022/02/28 20:17:05 api: SetConfig, choice:  - took 559 ms\n2022/02/28 20:17:05 Setting TransmitState ...\n2022/02/28 20:17:06 api: SetTransmitState, choice: start - took 1042 ms\n2022/02/28 20:17:06 Waiting for condition to be true ...\n2022/02/28 20:17:06 Getting Metrics ...\n2022/02/28 20:17:09 api: GetMetrics, choice: flow - took 2990 ms\n2022/02/28 20:17:09 api: GetFlowMetrics, choice:  - took 2990 ms\n2022/02/28 20:17:09 Getting Metrics ...\n2022/02/28 20:17:09 api: GetMetrics, choice: port - took 41 ms\n2022/02/28 20:17:09 api: GetPortMetrics, choice:  - took 41 ms\n2022/02/28 20:17:09 \n\nPort Metrics\n-----------------------------------------------------------------\nName           Frames Tx      Frames Rx      \np1             5000000        5000000        \np2             5000000        5000000        \n-----------------------------------------------------------------\n\n\nFlow Metrics\n--------------------------------------------------\nName           Frames Rx      \np1-&gt;p2-IPv4    5000000        \np2-&gt;p1-IPv4    5000000        \n--------------------------------------------------\n\n\n2022/02/28 20:17:09 Done waiting for condition to be true\n2022/02/28 20:17:09 api: WaitFor, choice: condition to be true - took 3031 ms\n2022/02/28 20:17:09 Total time is 4.647671319s\n2022/02/28 20:17:09 Closing gosnappi client ...\n</code></pre> Expand this section for sample output of `uhd_b2b_bgp` test <pre><code>./gosnappi/uhd_b2b_bgp -host https://10.36.79.196\n2022/02/28 20:22:32 Total ports is 2\n2022/02/28 20:22:32 Creating gosnappi client for gRPC server grpc-service.default.svc.cluster.local:40051 ...\n2022/02/28 20:22:32 Connecting to server at https://10.36.79.196\n2022/02/28 20:22:32 Creating port p1 at location uhd://nanite-bfs-v1.nanite-bfs:7531;1+r0.rustic.svc.cluster.local:50071\n2022/02/28 20:22:32 Creating port p2 at location uhd://nanite-bfs-v1.nanite-bfs:7531;2+r1.rustic.svc.cluster.local:50071\n2022/02/28 20:22:32 Creating flow p1-&gt;p2-IPv4\n2022/02/28 20:22:32 Flow p1-&gt;p2-IPv4 srcMac 00:11:22:33:44:00 dstMac 00:11:22:33:44:01\n2022/02/28 20:22:32 Flow p1-&gt;p2-IPv4 srcIp 100.1.1.1 dstIp 100.1.1.2\n2022/02/28 20:22:32 Creating flow p2-&gt;p1-IPv4\n2022/02/28 20:22:32 Flow p2-&gt;p1-IPv4 srcMac 00:11:22:33:44:01 dstMac 00:11:22:33:44:00\n2022/02/28 20:22:32 Flow p2-&gt;p1-IPv4 srcIp 100.1.1.2 dstIp 100.1.1.1\n2022/02/28 20:22:32 devices:\n- bgp:\n    ipv4_interfaces:\n    - ipv4_name: d1ipv4\n      peers:\n      - as_number: 1111\n        as_number_width: four\n        as_type: ebgp\n        name: BGPv4 Peer p1\n        peer_address: 100.1.1.2\n        v4_routes:\n        - addresses:\n          - address: 11.1.11.0\n            count: 2\n            prefix: 24\n            step: 2\n          name: p1d1peer1rrv4\n          next_hop_address_type: ipv4\n          next_hop_ipv4_address: 0.0.0.0\n          next_hop_ipv6_address: ::0\n          next_hop_mode: local_ip\n    router_id: 100.1.1.1\n  ethernets:\n  - ipv4_addresses:\n    - address: 100.1.1.1\n      gateway: 100.1.1.2\n      name: d1ipv4\n      prefix: 24\n    mac: \"00:11:22:33:44:00\"\n    mtu: 1500\n    name: d1Eth\n    port_name: p1\n  name: d1\n- bgp:\n    ipv4_interfaces:\n    - ipv4_name: d2ipv4\n      peers:\n      - as_number: 2222\n        as_number_width: four\n        as_type: ebgp\n        name: BGPv4 Peer p2\n        peer_address: 100.1.1.1\n        v4_routes:\n        - addresses:\n          - address: 12.1.12.0\n            count: 2\n            prefix: 24\n            step: 2\n          name: p2d2peer1rrv4\n          next_hop_address_type: ipv4\n          next_hop_ipv4_address: 0.0.0.0\n          next_hop_ipv6_address: ::0\n          next_hop_mode: local_ip\n    router_id: 100.1.1.2\n  ethernets:\n  - ipv4_addresses:\n    - address: 100.1.1.2\n      gateway: 100.1.1.1\n      name: d2ipv4\n      prefix: 24\n    mac: \"00:11:22:33:44:01\"\n    mtu: 1500\n    name: d2Eth\n    port_name: p2\n  name: d2\nflows:\n- duration:\n    choice: fixed_packets\n    fixed_packets:\n      gap: 12\n      packets: 5000000\n  metrics:\n    enable: true\n    loss: false\n    timestamps: false\n  name: p1-&gt;p2-IPv4\n  packet:\n  - choice: ethernet\n    ethernet:\n      dst:\n        choice: value\n        value: \"00:11:22:33:44:01\"\n      src:\n        choice: value\n        value: \"00:11:22:33:44:00\"\n  - choice: ipv4\n    ipv4:\n      dst:\n        choice: value\n        value: 100.1.1.2\n      src:\n        choice: value\n        value: 100.1.1.1\n  rate:\n    choice: percentage\n    percentage: 10\n  size:\n    choice: fixed\n    fixed: 64\n  tx_rx:\n    choice: port\n    port:\n      rx_name: p2\n      tx_name: p1\n- duration:\n    choice: fixed_packets\n    fixed_packets:\n      gap: 12\n      packets: 5000000\n  metrics:\n    enable: true\n    loss: false\n    timestamps: false\n  name: p2-&gt;p1-IPv4\n  packet:\n  - choice: ethernet\n    ethernet:\n      dst:\n        choice: value\n        value: \"00:11:22:33:44:00\"\n      src:\n        choice: value\n        value: \"00:11:22:33:44:01\"\n  - choice: ipv4\n    ipv4:\n      dst:\n        choice: value\n        value: 100.1.1.1\n      src:\n        choice: value\n        value: 100.1.1.2\n  rate:\n    choice: percentage\n    percentage: 10\n  size:\n    choice: fixed\n    fixed: 64\n  tx_rx:\n    choice: port\n    port:\n      rx_name: p1\n      tx_name: p2\nlayer1:\n- mtu: 1500\n  name: l1\n  port_names:\n  - p1\n  - p2\n  promiscuous: true\n  speed: speed_400_gbps\nports:\n- location: uhd://nanite-bfs-v1.nanite-bfs:7531;1+r0.rustic.svc.cluster.local:50071\n  name: p1\n- location: uhd://nanite-bfs-v1.nanite-bfs:7531;2+r1.rustic.svc.cluster.local:50071\n  name: p2\n &lt;nil&gt;\n2022/02/28 20:22:32 Setting Config ...\n2022/02/28 20:22:33 api: SetConfig, choice:  - took 710 ms\n2022/02/28 20:22:33 Setting SetProtocolState ...\n2022/02/28 20:22:33 api: SetProtocolState, choice: start - took 835 ms\n2022/02/28 20:22:33 Waiting for condition to be true ...\n2022/02/28 20:22:33 Getting Metrics ...\n2022/02/28 20:22:34 api: GetMetrics, choice: bgpv4 - took 68 ms\n2022/02/28 20:22:34 api: GetBgpv4Metrics, choice:  - took 68 ms\n2022/02/28 20:22:34 \n\nBGPv4 Metrics\n-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nName                        BGPv4 Peer p1  BGPv4 Peer p2  \nSession State               down           down           \nSession Flaps               0              0              \nRoutes Advertised           0              0              \nRoutes Received             0              0              \nRoute Withdraws Tx          0              0              \nRoute Withdraws Rx          0              0              \nKeepalives Tx               0              0              \nKeepalives Rx               0              0              \n-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n2022/02/28 20:22:34 Getting Metrics ...\n2022/02/28 20:22:34 api: GetMetrics, choice: bgpv4 - took 40 ms\n2022/02/28 20:22:34 api: GetBgpv4Metrics, choice:  - took 40 ms\n2022/02/28 20:22:34 \n\nBGPv4 Metrics\n-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nName                        BGPv4 Peer p1  BGPv4 Peer p2  \nSession State               down           down           \nSession Flaps               0              0              \nRoutes Advertised           0              0              \nRoutes Received             0              0              \nRoute Withdraws Tx          0              0              \nRoute Withdraws Rx          0              0              \nKeepalives Tx               0              0              \nKeepalives Rx               0              0              \n-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n2022/02/28 20:22:35 Getting Metrics ...\n2022/02/28 20:22:35 api: GetMetrics, choice: bgpv4 - took 40 ms\n2022/02/28 20:22:35 api: GetBgpv4Metrics, choice:  - took 40 ms\n2022/02/28 20:22:35 \n\nBGPv4 Metrics\n-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nName                        BGPv4 Peer p1  BGPv4 Peer p2  \nSession State               down           down           \nSession Flaps               0              0              \nRoutes Advertised           0              0              \nRoutes Received             0              0              \nRoute Withdraws Tx          0              0              \nRoute Withdraws Rx          0              0              \nKeepalives Tx               0              0              \nKeepalives Rx               0              0              \n-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n2022/02/28 20:22:35 Getting Metrics ...\n2022/02/28 20:22:35 api: GetMetrics, choice: bgpv4 - took 43 ms\n2022/02/28 20:22:35 api: GetBgpv4Metrics, choice:  - took 43 ms\n2022/02/28 20:22:35 \n\nBGPv4 Metrics\n-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nName                        BGPv4 Peer p1  BGPv4 Peer p2  \nSession State               down           down           \nSession Flaps               0              0              \nRoutes Advertised           0              0              \nRoutes Received             0              0              \nRoute Withdraws Tx          0              0              \nRoute Withdraws Rx          0              0              \nKeepalives Tx               0              0              \nKeepalives Rx               0              0              \n-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n2022/02/28 20:22:36 Getting Metrics ...\n2022/02/28 20:22:36 api: GetMetrics, choice: bgpv4 - took 38 ms\n2022/02/28 20:22:36 api: GetBgpv4Metrics, choice:  - took 38 ms\n2022/02/28 20:22:36 \n\nBGPv4 Metrics\n-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nName                        BGPv4 Peer p1  BGPv4 Peer p2  \nSession State               up             up             \nSession Flaps               0              0              \nRoutes Advertised           2              2              \nRoutes Received             2              2              \nRoute Withdraws Tx          0              0              \nRoute Withdraws Rx          0              0              \nKeepalives Tx               2              2              \nKeepalives Rx               2              2              \n-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n2022/02/28 20:22:36 Done waiting for condition to be true\n2022/02/28 20:22:36 api: WaitFor, choice: condition to be true - took 2235 ms\n2022/02/28 20:22:36 Setting TransmitState ...\n2022/02/28 20:22:37 api: SetTransmitState, choice: start - took 953 ms\n2022/02/28 20:22:37 Waiting for condition to be true ...\n2022/02/28 20:22:37 Getting Metrics ...\n2022/02/28 20:22:39 api: GetMetrics, choice: flow - took 2646 ms\n2022/02/28 20:22:39 api: GetFlowMetrics, choice:  - took 2646 ms\n2022/02/28 20:22:39 Getting Metrics ...\n2022/02/28 20:22:39 api: GetMetrics, choice: port - took 66 ms\n2022/02/28 20:22:39 api: GetPortMetrics, choice:  - took 66 ms\n2022/02/28 20:22:39 \n\nPort Metrics\n-----------------------------------------------------------------\nName           Frames Tx      Frames Rx      \np1             5000000        5000000        \np2             5000000        5000000        \n-----------------------------------------------------------------\n\n\nFlow Metrics\n--------------------------------------------------\nName           Frames Rx      \np1-&gt;p2-IPv4    5000000        \np2-&gt;p1-IPv4    5000000        \n--------------------------------------------------\n\n\n2022/02/28 20:22:39 Done waiting for condition to be true\n2022/02/28 20:22:39 api: WaitFor, choice: condition to be true - took 2713 ms\n2022/02/28 20:22:39 Total time is 7.46707886s\n2022/02/28 20:22:39 Setting SetProtocolState ...\n2022/02/28 20:22:39 api: SetProtocolState, choice: stop - took 47 ms\n2022/02/28 20:22:39 Closing gosnappi client ...\n</code></pre> Expand this section for sample output of `test_iperf` test <pre><code>This script will,\n1. Load kubeconfig to access UHD cluster\n2. Deploy netshoot containers to run as custom service behind UHD Port 1 and 2\n3. Run iperf in those containers and use UHD ports for interface\nPress any key to continue...\n++ which kubectl\n+ '[' '!' -f /usr/local/bin/kubectl ']'\n+ export KUBECONFIG=/tmp/uhd400gconfig\n+ KUBECONFIG=/tmp/uhd400gconfig\n+ kubectl config set-cluster uhd400g --server=https://10.36.79.196:6443 --insecure-skip-tls-verify\nCluster \"uhd400g\" set.\n+ kubectl config set-credentials uhd400g-user --token=eyJhbGciOiJSUzI1NiIsImtpZCI6Ik9nNGFBZkVoU21hcjZuSUY4cEtiTjgxVjJqcm80OWxIU25fUVZ0anpwazQifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJydXN0aWMiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlY3JldC5uYW1lIjoici10b2tlbi04djRyNSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJyIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQudWlkIjoiMjUyNWViYzYtOTBlMi00NWM2LWJhNzgtYTM1YmEwNjZkZmZjIiwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50OnJ1c3RpYzpyIn0.Z3_U7c2tBWuWCdd8Wns98xZMRprJ0DO91XVlVVRgA5jS-Rcb8jVUej5pOXmvVc8FFj3ZOkggN2rdWDpNKSMDSLRuKeP47B76A0if1sUeci_sUve9ZcDuteS-t60kFOyBZG8YHPDDCArPaQedPoMpB96ekbmhJ5sprxwHKdYqT5Q_AxkoYd_8MWPESXjyxdyL-ogAtLP-KDT82_xxSW_ZMyu1CvjaqIQzNKivPk8BG72ByKjbSFBMV9ZYpFaumzOZUWZcuy_kfJ_k6TMyMCKg9FwUvSYMy39tRIY5rC3h-MTZCBSvlWpYCrlklHHsnR0pdMvtQbZMhXXO_7oMdYe9Eg\nUser \"uhd400g-user\" set.\n+ kubectl config set-context uhd400g --user=uhd400g-user --cluster=uhd400g --namespace=rustic\nContext \"uhd400g\" modified.\n+ kubectl config use-context uhd400g\nSwitched to context \"uhd400g\".\n+ ./uhdIfMgr -custom -image nicolaka/netshoot:v0.1 -cmd '[\"/bin/sh\"]' -args '[\"-cx\", \"sleep inf\"]' -port 2 -host 10.36.79.196\nINFO[0000] Trying to connect to gRPC server at 10.36.79.196:443 \nINFO[0000] OK!                                          \n+ ./uhdIfMgr -custom -image nicolaka/netshoot:v0.1 -cmd '[\"/bin/sh\"]' -args '[\"-cx\", \"sleep inf\"]' -port 1 -host 10.36.79.196\nINFO[0000] Trying to connect to gRPC server at 10.36.79.196:443 \nINFO[0000] OK!                                          \n+ sleep 10\n+ kubectl wait --for=condition=available deploy -l cpport.keysight.com=1.0 --timeout=100s\ndeployment.apps/c0 condition met\n+ kubectl wait --for=condition=available deploy -l cpport.keysight.com=2.0 --timeout=100s\ndeployment.apps/c1 condition met\n+ kubectl get pods -l cpport.keysight.com=1.0\nNAME                  READY   STATUS    RESTARTS   AGE\nc0-6fc56dbbbd-nvlsd   1/1     Running   0          11s\n+ kubectl get pods -l cpport.keysight.com=2.0\nNAME                 READY   STATUS    RESTARTS   AGE\nc1-dd9b4b99f-qlht2   1/1     Running   0          12s\n++ get_pod 1\n++ kubectl get pods -l cpport.keysight.com=1.0 -o 'jsonpath={.items[].metadata.name}'\n+ kubectl exec c0-6fc56dbbbd-nvlsd -- /bin/bash -cx 'ip link set eth1 up \\\n    &amp;&amp; ip ad flush eth1 \\\n    &amp;&amp; ip ad ad 5.6.7.8/24 dev eth1 \\\n    &amp;&amp; kill `pidof iperf` || true \\\n    &amp;&amp; iperf -s &amp;'\n+ ip link set eth1 up\n+ ip ad flush eth1\n+ ip ad ad 5.6.7.8/24 dev eth1\n++ pidof iperf\n+ kill\nkill: usage: kill [-s sigspec | -n signum | -sigspec] pid | jobspec ... or kill -l [sigspec]\n+ true\n+ iperf -s\n------------------------------------------------------------\nServer listening on TCP port 5001\nTCP window size:  128 KByte (default)\n------------------------------------------------------------\n++ get_pod 2\n++ kubectl get pods -l cpport.keysight.com=2.0 -o 'jsonpath={.items[].metadata.name}'\n+ kubectl exec c1-dd9b4b99f-qlht2 -- /bin/bash -cx 'ip link set eth1 up \\\n    &amp;&amp; ip ad flush eth1 \\\n    &amp;&amp; ip ad ad 5.6.7.9/24 dev eth1 \\\n    &amp;&amp; iperf -c 5.6.7.8 -i1 -t30'\n+ ip link set eth1 up\n+ ip ad flush eth1\n+ ip ad ad 5.6.7.9/24 dev eth1\n+ iperf -c 5.6.7.8 -i1 -t30\n------------------------------------------------------------\nClient connecting to 5.6.7.8, TCP port 5001\nTCP window size: 85.0 KByte (default)\n------------------------------------------------------------\n[  1] local 5.6.7.9 port 38046 connected with 5.6.7.8 port 5001\n[ ID] Interval       Transfer     Bandwidth\n[  1] 0.00-1.00 sec   161 MBytes  1.35 Gbits/sec\n[  1] 1.00-2.00 sec   214 MBytes  1.80 Gbits/sec\n[  1] 2.00-3.00 sec   215 MBytes  1.80 Gbits/sec\n[  1] 3.00-4.00 sec   193 MBytes  1.62 Gbits/sec\n[  1] 4.00-5.00 sec   206 MBytes  1.72 Gbits/sec\n[  1] 5.00-6.00 sec   201 MBytes  1.69 Gbits/sec\n[  1] 6.00-7.00 sec   213 MBytes  1.78 Gbits/sec\n[  1] 7.00-8.00 sec   220 MBytes  1.84 Gbits/sec\n[  1] 8.00-9.00 sec   204 MBytes  1.71 Gbits/sec\n[  1] 9.00-10.00 sec   210 MBytes  1.76 Gbits/sec\n[  1] 10.00-11.00 sec   211 MBytes  1.77 Gbits/sec\n[  1] 11.00-12.00 sec   201 MBytes  1.69 Gbits/sec\n[  1] 12.00-13.00 sec   220 MBytes  1.85 Gbits/sec\n[  1] 13.00-14.00 sec   197 MBytes  1.65 Gbits/sec\n[  1] 14.00-15.00 sec   200 MBytes  1.68 Gbits/sec\n[  1] 15.00-16.00 sec   213 MBytes  1.79 Gbits/sec\n[  1] 16.00-17.00 sec   228 MBytes  1.92 Gbits/sec\n[  1] 17.00-18.00 sec   223 MBytes  1.87 Gbits/sec\n[  1] 18.00-19.00 sec   222 MBytes  1.86 Gbits/sec\n[  1] 19.00-20.00 sec   197 MBytes  1.65 Gbits/sec\n[  1] 20.00-21.00 sec   215 MBytes  1.80 Gbits/sec\n[  1] 21.00-22.00 sec   202 MBytes  1.69 Gbits/sec\n[  1] 22.00-23.00 sec   220 MBytes  1.84 Gbits/sec\n[  1] 23.00-24.00 sec   199 MBytes  1.67 Gbits/sec\n[  1] 24.00-25.00 sec   209 MBytes  1.75 Gbits/sec\n[  1] 25.00-26.00 sec   211 MBytes  1.77 Gbits/sec\n[  1] 26.00-27.00 sec   195 MBytes  1.64 Gbits/sec\n[  1] 27.00-28.00 sec   205 MBytes  1.72 Gbits/sec\n[  1] 28.00-29.00 sec   210 MBytes  1.76 Gbits/sec\n[  1] 29.00-30.00 sec   194 MBytes  1.63 Gbits/sec\n[  1] 0.00-30.02 sec  6.06 GBytes  1.74 Gbits/sec\n+ ./uhdIfMgr -host 10.36.79.196 -port 1\nINFO[0000] Trying to connect to gRPC server at 10.36.79.196:443 \nINFO[0000] OK!                                          \n+ ./uhdIfMgr -host 10.36.79.196 -port 2\nINFO[0000] Trying to connect to gRPC server at 10.36.79.196:443 \nINFO[0000] OK!                                          \n+ sleep 10\n+ kubectl wait --for=condition=available deploy -l cpport.keysight.com=1.0 --timeout=100s\ndeployment.apps/r0 condition met\n+ kubectl wait --for=condition=available deploy -l cpport.keysight.com=2.0 --timeout=100s\ndeployment.apps/r1 condition met\n</code></pre> <p>The following test was taken from the IXOS HW topic:</p> <p>Sample Test</p> <p>Before attempting the sample test, the deployment must be bootstrapped and KENG services running as described in the deployment section above.</p> <p>The sample test uses 2 back-to-back ports on a chassis and is named <code>otg-flows.py</code> in the example shown below.</p> <ol> <li> <p>Use the following commands to set up <code>virtualenv</code> for Python:</p> <p><code>python3 -m venv venv</code></p> <p><code>source venv/bin/activate</code></p> <p><code>pip install -r requirements.txt</code></p> </li> <li> <p>To run flows using the <code>snappi</code> script and report port metrics, use:</p> <p><code>otg-flows.py -m port</code></p> </li> <li> <p>To run flows using the snappi script reporting port flow, use:</p> <p><code>otg-flows.py -m flow</code></p> </li> </ol> <pre><code># Sample Test ?otg-flows.py?\n#!/usr/bin/env python3\n# Copyright ? 2023 Open Traffic Generator\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n# of this software and associated documentation files (the \"Software\"), to deal\n# in the Software without restriction, including without limitation the rights\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n# copies of the Software, and to permit persons to whom the Software is\n# furnished to do so, subject to the following conditions:\n# The above copyright notice and this permission notice shall be included in\n# all copies or substantial portions of the Software.\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n# THE SOFTWARE.\n\nimport sys, os\nimport argparse\nimport snappi\n\ndef port_metrics_ok(api, req, packets):\n    res = api.get_metrics(req)\n    print(res)\n    if packets == sum([m.frames_tx for m in res.port_metrics]) and packets == sum([m.frames_rx for m in res.port_metrics]):\n        return True\n\ndef flow_metrics_ok(api, req, packets):\n    res = api.get_metrics(req)\n    print(res)\n    if packets == sum([m.frames_tx for m in res.flow_metrics]) and packets == sum([m.frames_rx for m in res.flow_metrics]):\n        return True\n\ndef wait_for(func, timeout=15, interval=0.2):\n    \"\"\"\n    Keeps calling the `func` until it returns true or `timeout` occurs\n    every `interval` seconds.\n    \"\"\"\n    import time\n\n    start = time.time()\n\n    while time.time() - start &lt;= timeout:\n        if func():\n            return True\n        time.sleep(interval)\n\n    print(\"Timeout occurred !\")\n    return False\n\ndef arg_metric_check(s):\n    allowed_values = ['port', 'flow']\n    if s in allowed_values:\n        return s\n    raise argparse.ArgumentTypeError(f\"metric has to be one of {allowed_values}\")\n\ndef parse_args():\n    # Argument parser\n    parser = argparse.ArgumentParser(description='Run OTG traffic flows')\n\n    # Add arguments to the parser\n    parser.add_argument('-m', '--metric',    required=False, help='metrics to monitor: port | flow',\n                                             default='port',\n                                             type=arg_metric_check)\n    # Parse the arguments\n    return parser.parse_args()\n\ndef main():\n    \"\"\"\n    Main function\n    \"\"\"\n    # Parameters\n    args = parse_args()\n\n    API = \"https://localhost:8443\"\n   #Replace with values matching your setup/equipment. For example, if IxOS management IP is 10.10.10.10 and you need to use ports 14 and 15 in the slot number 2:\n  # P1_LOCATION =\"10.10.10.10;2;14\"\n  # P2_LOCATION =\"10.10.10.10;2;15\"\n\n    api = snappi.api(location=API, verify=False)\n    cfg = api.config()\n\n    # config has an attribute called `ports` which holds an iterator of type\n    # `snappi.PortIter`, where each item is of type `snappi.Port` (p1 and p2)\n    p1, p2 = cfg.ports.port(name=\"p1\", location=P1_LOCATION).port(name=\"p2\", location=P2_LOCATION)\n\n    # config has an attribute called `flows` which holds an iterator of type\n    # `snappi.FlowIter`, where each item is of type `snappi.Flow` (f1, f2)\n    f1, f2 = cfg.flows.flow(name=\"flow p1-&gt;p2\").flow(name=\"flow p2-&gt;p1\")\n\n    # and assign source and destination ports for each\n    f1.tx_rx.port.tx_name, f1.tx_rx.port.rx_name = p1.name, p2.name\n    f2.tx_rx.port.tx_name, f2.tx_rx.port.rx_name = p2.name, p1.name\n\n    # configure packet size, rate and duration for both flows\n    f1.size.fixed, f2.size.fixed = 128, 256\n    for f in cfg.flows:\n        # send 1000 packets and stop\n        f.duration.fixed_packets.packets = 1000\n        # send 1000 packets per second\n        f.rate.pps = 1000\n        # allow fetching flow metrics\n        f.metrics.enable = True\n\n    # configure packet with Ethernet, IPv4 and UDP headers for both flows\n    eth1, ip1, udp1 = f1.packet.ethernet().ipv4().udp()\n    eth2, ip2, udp2 = f2.packet.ethernet().ipv4().udp()\n\n    # set source and destination MAC addresses\n    eth1.src.value, eth1.dst.value = \"00:AA:00:00:04:00\", \"00:AA:00:00:00:AA\"\n    eth2.src.value, eth2.dst.value = \"00:AA:00:00:00:AA\", \"00:AA:00:00:04:00\"\n\n    # set source and destination IPv4 addresses\n    ip1.src.value, ip1.dst.value = \"10.0.0.1\", \"10.0.0.2\"\n    ip2.src.value, ip2.dst.value = \"10.0.0.2\", \"10.0.0.1\"\n\n    # set incrementing port numbers as source UDP ports\n    udp1.src_port.increment.start = 5000\n    udp1.src_port.increment.step = 2\n    udp1.src_port.increment.count = 10\n\n    udp2.src_port.increment.start = 6000\n    udp2.src_port.increment.step = 4\n    udp2.src_port.increment.count = 10\n\n    # assign list of port numbers as destination UDP ports\n    udp1.dst_port.values = [4000, 4044, 4060, 4074]\n    udp2.dst_port.values = [8000, 8044, 8060, 8074, 8082, 8084]\n\n    # print resulting otg configuration\n    print(cfg)\n\n    # push configuration to controller\n    api.set_config(cfg)\n\n    # start transmitting configured flows\n    ts = api.control_state()\n    ts.traffic.flow_transmit.state = snappi.StateTrafficFlowTransmit.START\n    api.set_control_state(ts)\n\n    # Check if the file argument is provided\n    if args.metric == 'port':\n        # create a port metrics request and filter based on port names\n        req = api.metrics_request()\n        req.port.port_names = [p.name for p in cfg.ports]\n        # include only sent and received packet counts\n        req.port.column_names = [req.port.FRAMES_TX, req.port.FRAMES_RX]\n\n        # fetch port metrics\n        res = api.get_metrics(req)\n\n        # wait for port metrics to be as expected\n        expected = sum([f.duration.fixed_packets.packets for f in cfg.flows])\n        assert wait_for(lambda: port_metrics_ok(api, req, expected)), \"Metrics validation failed!\"\n\n    elif args.metric == 'flow':\n        # create a flow metrics request and filter based on port names\n        req = api.metrics_request()\n        req.flow.flow_names = [f.name for f in cfg.flows]\n\n        # fetch metrics\n        res = api.get_metrics(req)\n\n        # wait for flow metrics to be as expected\n        expected = sum([f.duration.fixed_packets.packets for f in cfg.flows])\n        assert wait_for(lambda: flow_metrics_ok(api, req, expected)), \"Metrics validation failed!\"\n\nif __name__ == '__main__':\n    sys.exit(main())\n</code></pre>"},{"location":"support/","title":"Support","text":"<p>Commercial customers of the Keysight Elastic Network Generator can obtain support through the Keysight Support Center, using the link to Network Test (Layer 2/3) and Visibility Support (Ixia). Please be ready to provide the KENG License activation code and a clear problem description.</p> <p>Support for the free version of Ixia-c can be obtained over Slack. You can join the Slack workspace ixia-c.slack.com using this invite. We also encourage you to open issues &amp; enhancements in the Ixia-c repository.</p>"},{"location":"tests-chassis-app/","title":"Ixia Chassis/Appliances","text":"<p>This section describes how to use KENG with Keysight's Ixia hardware chassis.</p> <p>Prerequisites</p> <p>To run KENG tests with Ixia hardware, the following pre-requisites must be satisfied:</p> <ul> <li>You must have access to Keysight Elastic Network Generator (KENG) images and a valid KENG license.</li> <li>For information on how to deploy and activate a KENG license, see the Licensing section of the User Guide.</li> <li>The test hardware must be Keysight Ixia Novus or AresOne Network Test Hardware with IxOS 9.20 Patch 4 or higher. NOTE:  Currently, only Linux-based IxOS platforms are supported with KENG.</li> <li>There must be physical link connectivity between the test ports on the Keysight Ixia Chassis and the devices under test (DUTs).</li> <li> <p>You must have a Linux host or virtual machine (VM) with sudo permissions and Docker support.</p> <p>Below is an example of deploying an Ubuntu VM otg using multipass.  You can deploy using the means that you are most familiar with.</p> <p><code>multipass launch 22.04 -n otg -c4 -m8G -d32G</code></p> <p><code>multipass shell otg</code></p> </li> <li> <p>Docker. Depending on your Linux distribution, follow the steps outlined at one of the following URLs:</p> </li> <li>Ubuntu</li> <li>Debian</li> <li> <p>CentOS</p> <p>After docker is installed, add the current user to the docker group:</p> <p><code>sudo usermod -aG docker $USER</code></p> </li> <li> <p>Python3 (version 3.9 or higher), pip and virtualenv</p> <p>Use the following command to install Python, pip, and virtualenv:</p> <p><code>sudo apt install python3 python3-pip python3.10-venv -y</code></p> </li> <li> <p>Go version 1.19 or later, if gRPC or gNMI API access is needed.</p> <p>Use the following command to install Go:</p> <p><code>sudo snap install go --channel=1.19/stable --classic</code></p> </li> <li> <p>git and envsubst commands (typically installed by default)</p> <p>Use the following command to install git and envsubst if they are not already installed:</p> <p><code>sudo apt install git gettext-base -y</code></p> </li> </ul> <p>Deployment Layout</p> <p>The image below shows a complete topology of a KENG test environment.</p> <p>To run tests with KENG, the tests must be written using the  OpenTrafficGenerator (OTG) API.</p> <p>Telemetry is also supported using gNMI APIs.</p> <p>If KENG is deployed successfully, the services shown in the block labeled 'Keysight Elastic Network Generator' will be running.</p> <p>KENG services interact with the Keysight Ixia hardware chassis to configure protocols and data traffic.</p> <p></p> <p>Deploying KENG</p> <p>The Docker Compose tool provides a convenient way to deploy KENG services.</p> <p>Tests cannot be run until KENG services are deployed and running.</p> <p>The following procedure shows an example of how to deploy using Docker Compose.</p> <ol> <li>Copy the contents shown below into a <code>compose.yaml</code> file.</li> </ol> <pre><code>services:\n  keng-controller:\n    image: ghcr.io/open-traffic-generator/keng-controller:1.40.0-15\n    restart: always\n    depends_on:\n      keng-layer23-hw-server:\n        condition: service_started\n    command:\n      - \"--accept-eula\"\n      - \"--debug\"\n      - \"--keng-layer23-hw-server\"\n      - \"keng-layer23-hw-server:5001\"\n    ports:\n      - \"40051:40051\"\nlogging:\n      driver: \"local\"\n      options:\n        max-size: \"100m\"\n        max-file: \"10\"\n        mode: \"non-blocking\"\n  keng-layer23-hw-server:\n    image: ghcr.io/open-traffic-generator/keng-layer23-hw-server:1.40.0-5\n    restart: always\n    command:\n      - \"dotnet\"\n      - \"otg-ixhw.dll\"\n      - \"--trace\"\n      - \"--log-level\"\n      - \"trace\"\n    logging:\n      driver: \"local\"\n      options:\n        max-size: \"100m\"\n        max-file: \"10\"\n        mode: \"non-blocking\"\n  otg-gnmi-server:\n    image: ghcr.io/open-traffic-generator/otg-gnmi-server:1.40.3\n    restart: always\n    depends_on:\n      keng-controller:\n        condition: service_started\n    command:\n      - \"-http-server\"\n      - \"https://keng-controller:8443\"\n      - \"--debug\"\n    ports:\n      - \"50051:50051\"\nlogging:\n      driver: \"local\"\n      options:\n        max-size: \"100m\"\n        max-file: \"10\"\n        mode: \"non-blocking\"\n</code></pre> <ol> <li> <p>Start the Compose tool:</p> <p><code>docker compose up -d</code></p> </li> <li> <p>Use the <code>docker ps</code> command to verify that KENG services are running:</p> <p><code>docker ps</code></p> </li> </ol> <p>The list of containers should include: - <code>keng-controller</code> - <code>keng-layer23-hw-server</code> - <code>otg-gnmi-server</code>  (optional if gNMI access is needed)</p> <p>When the controller and ixhw-server services are running, the deployment is ready to run a test.</p> <p>Test port references</p> <p>KENG uses '/config.ports.locations' parameter to determine the test ports involved in the test.</p> <p>The \u2018/config.ports.locations\u2019 parameter needs to be set to reference a test port.</p> <p>This parameter is to be specified in a \u2018chassis ip;card;port\u2019 format.</p>"},{"location":"tests-ixia-c/","title":"Ixia-c tests","text":"<p>How to run tests with Ixia-c </p>"},{"location":"tests-uhd400/","title":"Introduction","text":"<p>The UHD400T is a high performance, ultra-high density, and highly flexible software defined Tester, for all your next generation testing needs. It works seamlessly with diverse testbeds like a single Device Under Test, or a network with multiple devices.</p> <p>The UHD400T comes as a 1U rack mount appliance with 16 400GE QSFP-DD ports that provide up to 6.4Tbps composite throughput.</p> <p>The UHD400T is configurable via the Keysight Elastic Network Generator. During the setup phase, the physical ports on the UHD400T can be configured through a REST API.</p> <p></p>"},{"location":"tests-uhd400/#vlan-port-mapping","title":"VLAN-Port Mapping","text":"<p>The UHD400T fabric is preconfigured to route the traffic between the trunk port (port 32) and the traffic ports (1-16). Ports 17-31 are not available for use in the current release. When the packets arrive at a traffic port, they are encapsulated in a VLAN corresponding to the front panel (see mapping table below) and routed to the trunk port. The process is reversed, when the packets arrive at the trunk port.</p> <p>The packets that are encapsulated in a VLAN, are routed to the front panel port corresponding to the VLAN. The trunk packets that are not VLAN-encapsulated or have a VLAN that is not listed in the following mapping table, will be dropped.</p> <p></p>"},{"location":"tests-uhd400/#mapping-table","title":"Mapping Table","text":"UHD Port VLAN ID UHD Port VLAN ID 1 136 9 320 2 144 10 312 3 152 11 304 4 160 12 296 5 168 13 288 6 176 14 280 7 184 15 272 8 192 16 264 <p>Note: The VLAN tagged interfaces can be created by using the following linux command:</p> <p><pre><code>ip link add link &lt;interface-name&gt; name &lt;interface-name&gt;.&lt;vid&gt; type vlan id &lt;vid&gt;\n</code></pre> For more information, see UHD400T Getting Started Guide.</p>"},{"location":"troubleshooting/","title":"Troubleshooting","text":"<p>This section explains the troubleshooting scenarios for different environments.</p>"},{"location":"troubleshooting/#otg-hardware-environment","title":"OTG hardware environment","text":"<p>The test fails while it is configuring OTG ports: This situation may arise for various reasons. For example, the port ownership is not cleared properly by the previous test, the OTG port went to a bad state, and etc. The course of action in such scenarios can be as follows:</p> <ul> <li>Manually clear the ownership of the port.</li> <li>Reboot the chassis ports.</li> <li>Restart the docker containers.</li> <li>Use <code>docker compose</code> or <code>docker-compose</code> to turn the containers down and up.</li> <li>Execute the following commands from the directory where you have kept the docker-compose.yaml file.</li> </ul> <pre><code>docker-compose down\n</code></pre> <pre><code>docker-compose up -d\n</code></pre> <p>Configuration is failing port-speed mismatch: In this scenario, the OTG port configuration will also fail due to the speed mismatch between the DUT port and the chassis port. To fix this error, do the following:</p> <ul> <li>Adjust the DUT port speed to the default port speed of the chassis port.</li> <li>Reboot the chassis ports.</li> <li>Execute the test.</li> </ul> <p>Test failed to take port ownership: This error is often obvious from the message that is displayed on the console \"Failed to take ownership of the following ports\". This situation may occur if the previous test did not clear the ownership or someone else is already owning the port. You can go to the chassis UI and clear the port ownership manually by force.</p> <p></p> <p>Execute the actions in the following order:</p> <ul> <li>Clear ownership</li> <li>Reboot ports</li> </ul> <p>Error while starting the protocols: This error can occur if the ports are in a bad state or if you have ignored some errors that have occurred earlier, when you started the protocol engine. The error messages may look like:</p> <ul> <li> <p>Error occurred while starting protocol on the protocol ports:   Unable to find type: <code>Ixia.Aptixia.Cpf.pcpu.IsisSRGBRangeSubObjectsPCPU</code></p> </li> <li> <p>Error occurred while starting protocol on the protocol ports: <code>GetPortSession()</code> is NULL.</p> </li> </ul> <p>In this situation, a quick solution is to reboot the ports and restart the docker containers, by following the steps that are described earlier.</p> <p>Note: In summary, clearing the ownership, rebooting the ports, and restarting the containers may resolve many of your problems regarding the ATE port configuration error.</p> <p>OTG API call failed similarly like the start protocol, due to \"context deadline exceeded\" error: You can increase the timeout deadline by changing the value of the timeout parameter of the ATE in the binding file. The default value is 30 (in seconds). You can increase it as per your setup.</p> <pre><code>  # This option specific to OTG over Ixia-HW.\n  otg {\n    target: \"127.0.0.1:40051\" # Change this to the Ixia-c-grpc server endpoint.\n    insecure: true\n    timeout: 120\n  }\n</code></pre> <p>Note: After this change, do not forget to restart the containers and reboot the hardware ports.</p>"},{"location":"troubleshooting/#kne-environment","title":"KNE environment","text":"<p>Topology creation failures for Ixia-C pods: This error can occur for multiple reasons:</p> <ul> <li>A mismatch in the Ixia-c build versions and the older Operator that is in use. To deploy the correct versions as per the releases, see \"https://github.com/open-traffic-generator/ixia-c/releases\".</li> <li>The minimum resource requirement is not met.</li> <li>An older version of KNE is being used in the client. To update KNE to a newer release, see \"https://github.com/openconfig/kne/releases/\" and deploy the topology.</li> </ul> <p>Test fails due to timeout: This error occurs when the test has faced a timeout. By default, the timeout is 10m. You can increase this limit to \"-timeout 20m\" or can ensure that all the services are reachable for the test to connect and run.</p> <p>Test fails at set config: This error occurs if the configuration is not proper. For example, mistake in the flow configuration, BGP LI flag is not enabled but <code>GetStates</code> is called, and etc. You can correct the configuration and run the test again.</p>"},{"location":"troubleshooting/#uhd-environment","title":"UHD environment","text":"<p>Test may not run: This error can occur for multiple reasons:</p> <ul> <li>A mismatch in the version of the rustic containers and the controller that is in use. Ensure that they are compatible.</li> <li>The Rustic containers (that are deployed) may not be reachable. There are rare cases when you observe that even if the container is running, the exposed port may have gone corrupt. In such scenarios, the only solution is to redeploy the docker containers.</li> <li>The UHD ports may not be responsive. When the rustic container is ready, ensure that the UHD ports are up. For this, refer to the port-api-service that is provided in the UHD docs.</li> </ul>"},{"location":"usecases/","title":"Use Cases","text":"<p>This page has a listing of all use-cases where Ixia-c is being used.</p> <ul> <li> <p>Chris Sommers' demo at 2021 P4 Workshop using snappi and Ixia-c to test a P4 application.  You can find Chris' repo here.</p> </li> <li> <p>when Packets go BRRRRRRRRRRRRR Ixia-c used as a traffic generator to replace scapy under the hood for DDoS Stresstest, a DDoS Assessment tool.</p> </li> </ul> <p>Reach out to us on Slack to add your use-cases to this page.</p>"},{"location":"user-guide-introduction/","title":"Introduction","text":"<p>Keysight Elastic Network Generator is an agile, lightweight, and composable network test software designed for Continuous Integration. It supports vendor neutral Open Traffic Generator models and APIs, integrates with several network emulation platforms, and drives a range of Keysight\u2019s Network Infrastructure Test software products, hardware load modules and appliances.</p> <p>The Elastic Network Generator software runs in Docker-based containerized environments and emulates key data center control plane protocols while also sending data plane traffic. It has a modern architecture based on micro-services and open-source interfaces and is designed for very fast automated test scenario execution. All of these characteristics enable robust validation of data center networks to deliver top quality of experience.</p>"},{"location":"user-guide-introduction/#components","title":"Components","text":"<p>Keysight Elastic Network Generator provides an abstraction over various test port implementations \u2013 Ixia-c software, UHD400T white-box and purpose-built IxOS hardware. A test program written in Open Traffic Generator API can be run using any of the supported test port types without modifications.</p> <p></p> <p>The main components of KENG are:</p> Component Description Test program Script or other executable that contains the code that defines the test processes. OTG Open Traffic Generator, an evolving API specification that defines the components of a traffic generator such as: test ports (virtual or physical), emulated devices, traffic flows, and statistics and capture capability. Elastic Network Generator Controller that manages the flow of commands from the test program to the traffic generation device (virtual or physical) and the flow of results from the device to the test program. Ixia-c Containerized software traffic generator. UHD400T Composable test ports based on line-rate white-box switch hardware traffic generator and Ixia-c protocol emulation software. IxOS Hardware Keysight Novus or AresONE high-performance network test hardware running IxOS."},{"location":"user-guide-introduction/#clients","title":"Clients","text":"<p>To successfully use an OTG-based Traffic Generator, you need to be able to execute the following tasks over the OTG API:</p> <ul> <li>Prepare a Configuration and apply it to a Traffic Generator</li> <li>Control states of the configured objects like Protocols or Traffic Flows</li> <li>Collect and analyze Metrics reported by the Traffic Generator</li> </ul> <p>It is a job of an OTG Client to perform these tasks by communicating with a Traffic Generator via the OTG API. There are different types of such clients, and the choice between them depends on how and where you want to use a Traffic Generator.</p> <p>There are multiple ways to communicate with KENG through the OTG API:</p> Method Description otgen A command-line tool that is an easy way to get started snappi A library that makes it easy create test programs in Python or Go direct REST or gRPC calls An alternative to using snappi custom OTG client Custom OTG client applications"},{"location":"user-guide-introduction/#otg-examples","title":"OTG Examples","text":"<p>OTG examples repository is a great way to get started with Open Traffic Generator API. It features a collection of software-only network labs ranging from very simple to more complex. To setup the network labs in software, use the containerized or virtualized NOS images.</p>"},{"location":"developer/hello-snappi/","title":"First script","text":""},{"location":"developer/hello-snappi/#use-case","title":"Use Case","text":"<p>This tutorial explains some key elements that are required to write a snappi script for exercising the following topology.</p> <ul> <li>Send 1000 UDP packets back and forth between the interfaces <code>eth1</code> &amp; <code>eth2</code> at a rate of 1000 packets per second.</li> <li>Ensure that the correct number of valid UDP packets are received on both the ends, by using port capture and port metrics.</li> </ul> <p>The hello_snappi.py script covers this extensively.</p> <p></p>"},{"location":"developer/hello-snappi/#setup","title":"Setup","text":"<p>You can start by setting up the topology as described above. For more detail, see deployment steps for two-arm scenario.</p> <pre><code>git clone --recurse-submodules https://github.com/open-traffic-generator/ixia-c &amp;&amp; cd ixia-c\ndocker-compose -f deployments/raw-two-arm.yml up -d\n</code></pre> <p>After the set up is completed, install the python packages:</p> <ul> <li>snappi - client SDK auto-generated from Open Traffic Generator API.</li> <li>dpkt - for processing <code>.pcap</code> files.</li> </ul> <pre><code>python -m pip install --upgrade snappi==1.40.3 dpkt\n</code></pre>"},{"location":"developer/hello-snappi/#create-the-api-handle","title":"Create the API Handle","text":"<p>The first step in any snappi script is to import the <code>snappi</code> package and instantiate an <code>api</code> object, where the <code>location</code> parameter takes the HTTPS/gRPC address of the controller and <code>verify</code> is used to turn off the insecure certificate warning.</p> <p>If the controller is deployed with a non-default TCP port by using the deployment parameters, it must be specified explicitly in the address (default port of HTTPS is 8443 and gRPC is 40051).</p> <pre><code>import snappi\n\n# HTTPS\napi = snappi.api(location='https://localhost', verify=False)\n# or with non-default TCP port\napi = snappi.api(location='https://localhost:8080', verify=False)\n\n#gRPC\napi = snappi.api(location=\"localhost:40051\", transport=snappi.Transport.GRPC)\n# or with non-default TCP port\napi = snappi.api(location=\"localhost:50020\", transport=snappi.Transport.GRPC)\n</code></pre> Expand This section provides the details on an optional parameter <code>ext</code> which specifies the snappi extension to be loaded.  If a traffic generator does not natively support the  [Open Traffic Generator API](https://github.com/open-traffic-generator/models), snappi can be extended to write a translation layer to bridge the gap. For example, [snappi extension for IxNetwork](https://pypi.org/project/snappi-ixnetwork/). This can be installed by using `python -m pip install --upgrade snappi[ixnetwork]`. <pre><code>import snappi\n# location here refers to HTTPS address of IxNetwork API Server\napi = snappi.api(location=\"https://localhost\", ext='ixnetwork', verify=False)\n</code></pre>"},{"location":"developer/hello-snappi/#configuration","title":"Configuration","text":"<p>You need to construct the traffic configuration to send it to the controller. Use the <code>api</code> object that you created previously. It will act as a handle for the following steps:</p> <ul> <li>Create new objects for API request (or response)</li> </ul> <pre><code>cfg = api.config()\n</code></pre> <p><code>api.config()</code> is a factory function for creating an empty <code>snappi.Config</code> object, which encapsulates the parameters that the controller needs to configure different aspects of the traffic generator. The next sections discuss about these configuration parameters in details.</p> <ul> <li>Initiate the API requests (and get back response)</li> </ul> <pre><code># this pushes object of type `snappi.Config` to controller\napi.set_config(cfg)\n# this retrieves back object of type `snappi.Config` from controller\ncfg = api.get_config()\n</code></pre> <p>By default, API requests in snappi are made over HTTPS with payloads as a JSON string. Since each object in snappi inherits <code>SnappiObject</code> or <code>SnappiIter</code>, they all share a common method called <code>.serialize()</code> and <code>deserialize()</code>, that are used internally during the API requests, for valid conversion to / from a JSON string. You will find more about such conveniences offered by snappi along the way.</p> Expand This section explains how you can effectively navigate through the snappi API documentation.  The objects and methods (for API calls) in snappi are auto-generated from an [Open API Generator YAML file](https://redocly.github.io/redoc/?url=https://raw.githubusercontent.com/open-traffic-generator/models/v0.11.11/artifacts/openapi.yaml). This file adheres to the [OpenAPI Specification](https://github.com/OAI/OpenAPI-Specification), which can (by design) also be rendered as an interactive API documentation.  [ReDoc](https://redocly.github.io/redoc/) is an open-source tool that provides a similar functionality. It accepts a link to valid OpenAPI YAML file and generates a document where all the methods (for API calls) are mentioned in the left navigation bar and for each selected method, there's a request/response body description in the center of the page. These descriptions lay out the entire object tree that documents each node in detail.  The [snappi API documentation](https://redocly.github.io/redoc/?url=https://raw.githubusercontent.com/open-traffic-generator/models/v0.11.11/artifacts/openapi.yaml) will always point to the API version **v0.11.11**. To use a different version, do the following:  * Identify the API version from [open-traffic-generator releases](https://github.com/open-traffic-generator/snappi/releases/download/v0.11.11/models-release) and replace **v0.11.11** in the URL with the intended snappi version.  * Open the [open-traffic-generator models](https://redocly.github.io/redoc/?url=https://raw.githubusercontent.com/open-traffic-generator/models/v0.11.11/artifacts/openapi.yaml)."},{"location":"developer/hello-snappi/#ports","title":"Ports","text":"<p>Each instance of a traffic-engine is usually referred to as a <code>port</code>. As the ports are used to send or receive the traffic (as they are directly bound to the network interfaces), provide the following information to the config object, that you created earlier:</p> <ul> <li><code>name</code>: An unique identifier for each port.</li> <li><code>location</code>: A DNS name or TCP socket address of the traffic-engine (format is specific to a given traffic-engine implementations).</li> </ul> <p>Note: Unlike the config, creating a new port using <code>p = api.port()</code> is not required (and hence not supported), as the <code>snappi.Port</code> is never used directly as an API request or response.</p> <pre><code># config has an attribute called `ports` which holds an iterator of type\n# `snappi.PortIter`, where each item is of type `snappi.Port` (p1 and p2)\np1, p2 = cfg.ports.port(name=\"p1\", location=\"localhost:5555\").port(\n    name=\"p2\", location=\"localhost:5556\"\n)\n</code></pre> <p>Instead of using <code>append()</code>, use factory method <code>.port()</code> on <code>cfg.ports</code> which instantiates <code>snappi.Port</code>, appends it to <code>cfg.ports</code>, and returns the entire iterator (so that it can be unpacked or accessed like a simple list). This is applicable to other iterators in snappi, for example, flows, capture, and layer1.</p> Expand this section for more examples on snappi iterators. <pre><code>p = cfg.ports.port(name='p1').port(name='p2')\nassert p[0].name == 'p1'\n\np = cfg.ports.port(name='p3')\nassert p[2].name == 'p3'\n\n# This will remove 3rd index port\ncfg.ports.remove(2)\np4 = cfg.ports.port(name='p4')[-1]\nassert p4.name == 'p4'\n\n# This will clear all the ports\ncfg.ports.clear()\np5 = cfg.ports.port(name='p5')[0]\nassert p5.name == 'p5'\n\np6 = cfg.ports.add(name='p6')\nassert p6.name == 'p6'\n\np7 = p6.clone()\np7.name = 'p7'\ncfg.ports.append(p7)\nassert p7.name == 'p7'\n</code></pre>"},{"location":"developer/hello-snappi/#layer1","title":"Layer1","text":"<p>The <code>ports</code> that you configured earlier, may require a set up for <code>layer1</code> (physical layer) properties like speed, MTU, promiscuous mode, and etc.</p> <pre><code># config has an attribute called `layer1` which holds an iterator of type\n# `snappi.Layer1Iter`, where each item is of type `snappi.Layer1` (ly)\nly = cfg.layer1.layer1(name=\"ly\")[-1]\nly.speed = ly.SPEED_1_GBPS\n# set same properties on both ports\nly.port_names = [p1.name, p2.name]\n</code></pre> <p>Note: You can set an enum value (all uppercase) defined in the <code>ly</code>'s namespace, instead of using an arbitrary value to the <code>ly.speed</code>. These enum values are available in the snappi API documentation.</p>"},{"location":"developer/hello-snappi/#capture","title":"Capture","text":"<p>To start capturing packets on both the ports, enable <code>capture</code>.</p> <pre><code># config has an attribute called `captures` which holds an iterator of type\n# `snappi.CaptureIter`, where each item is of type `snappi.Capture` (cp)\ncp = cfg.captures.capture(name=\"cp\")[-1]\ncp.port_names = [p1.name, p2.name]\n</code></pre>"},{"location":"developer/hello-snappi/#flows","title":"Flows","text":"<p>This section describes how to set up the traffic flows.</p> <p>Each flow in snappi can be characterized based on the tx/rx endpoints, duration, packet contents, packet rate, packet size, and etc.</p> <p>You can configure two flows, one that originates from port <code>p1</code> and the other from port <code>p2</code>.</p> <pre><code># config has an attribute called `flows` which holds an iterator of type\n# `snappi.FlowIter`, where each item is of type `snappi.Flow` (f1, f2)\nf1, f2 = cfg.flows.flow(name=\"flow p1-&gt;p2\").flow(name=\"flow p2-&gt;p1\")\n\n# and assign source and destination ports for each\nf1.tx_rx.port.tx_name, f1.tx_rx.port.rx_name = p1.name, p2.name\nf2.tx_rx.port.tx_name, f2.tx_rx.port.rx_name = p2.name, p1.name\n\n# configure packet size, rate and duration for both flows\nf1.size.fixed, f2.size.fixed = 128, 256\nfor f in cfg.flows:\n    # send 1000 packets and stop\n    f.duration.fixed_packets.packets = 1000\n    # send 1000 packets per second\n    f.rate.pps = 1000\n</code></pre> <p>Optionally, the flow duration and rate can be configured as follows:</p> <pre><code># send packets for 5 seconds and stop (we could also specify duration in terms\n# of continuous or bursts)\nf.duration.fixed_seconds.seconds = 5\n# send packets at 50% of configured speed (we could also specify absolute rates\n# in terms of bps, kbps, etc.)\nf.rate.percentage = 50\n</code></pre> <p>Note: The <code>f.rate</code> is polymorphic in nature. It can only be used to set either <code>pps</code> or <code>percentage</code>, but not both. A special attribute <code>choice</code> is used in such cases, which holds the name of the attribute that is currently in use.</p> <p>In snappi, <code>f.rate.choice</code> is automatically set based on the attribute that was last accessed. For example,</p> <pre><code>f.rate.pps = 100\nprint(f.rate.serialize())\n\n# output\n{\n  \"choice\": \"pps\",\n  \"pps\": 100\n}\n</code></pre> <p>You can set (or access) the <code>f1.rate.pps</code> without instantiating an object of type <code>snappi.FlowRate</code>, which is held by the <code>f1.rate</code>. Accessing an uninitialized attribute automatically initializes it with the type of object it holds.</p>"},{"location":"developer/hello-snappi/#protocol-headers","title":"Protocol Headers","text":"<p>Packets sent out in a <code>flow</code> needs to be described in terms of the underlying protocol and payload contents. If no such description is provided, a simple ethernet frame is configured by default.</p> <p>The following section describes how you can construct a packet by adding Ethernet, IPv4, and UDP headers (strictly in an order, in which it should appear in the TCP/IP stack).</p> <pre><code># configure packet with Ethernet, IPv4 and UDP headers for both flows\neth1, ip1, udp1 = f1.packet.ethernet().ipv4().udp()\neth2, ip2, udp2 = f2.packet.ethernet().ipv4().udp()\n</code></pre> <p>The <code>f1.packet</code> is an iterator which holds the items of type <code>snappi.FlowHeader</code> (a polymorphic type, instead of the non-polymorphic types). Hence, snappi automatically does the following under the hood:</p> <pre><code>eth1, ip1, udp1 = f.packet.header().header().header()\n# set enum choice for each header and initialize intended object with empty\n# fields just by accessing it\neth1.choice = e.ETHERNET\neth1.ethernet\nip1.choice = i.IPV4\nip1.ipv4\nudp1.choice = u.UDP\nudp1.udp\n</code></pre> <p>At this point, the headers still contain the default field values. Now, you can assign specific values to the various header fields.</p> <p>The checksum and length fields in the most of the headers are automatically calculated and inserted before the packets are sent.</p>"},{"location":"developer/hello-snappi/#setup-ethernet","title":"Setup Ethernet","text":"<p>For the Ethernet header, assign a static source and the destination MAC address value. The ethernet type field is automatically set to <code>0x800</code>, since the next header is IPv4.</p> <pre><code># set source and destination MAC addresses\neth1.src.value, eth1.dst.value = \"00:AA:00:00:04:00\", \"00:AA:00:00:00:AA\"\neth2.src.value, eth2.dst.value = \"00:AA:00:00:00:AA\", \"00:AA:00:00:04:00\"\n</code></pre>"},{"location":"developer/hello-snappi/#setup-ipv4","title":"Setup IPv4","text":"<p>For IPv4 header also, assign a static source and the destination IPv4 address value. The IP protocol field is automatically set to <code>0x11</code>, since the next protocol in the stack is UDP.</p> <pre><code># set source and destination IPv4 addresses\nip1.src.value, ip1.dst.value = \"10.0.0.1\", \"10.0.0.2\"\nip2.src.value, ip2.dst.value = \"10.0.0.2\", \"10.0.0.1\"\n</code></pre>"},{"location":"developer/hello-snappi/#setup-udp","title":"Setup UDP","text":"<p>With the UDP header, instead of assigning a single (fixed) value for the header fields, assign multiple values.</p> <p>You can achieve this in snappi by using <code>increment</code>, <code>decrement</code>, and <code>list</code> patterns.</p> <pre><code># set incrementing port numbers as source UDP ports\nudp1.src_port.increment.start = 5000\nudp1.src_port.increment.step = 2\nudp1.src_port.increment.count = 10\n\nudp2.src_port.increment.start = 6000\nudp2.src_port.increment.step = 4\nudp2.src_port.increment.count = 10\n\n# assign list of port numbers as destination UDP ports\nudp1.dst_port.values = [4000, 4044, 4060, 4074]\nudp2.dst_port.values = [8000, 8044, 8060, 8074, 8082, 8084]\n</code></pre> <p>The above snippet will result in a sequence of packets as shown in the figure below.</p> <p></p> <p>The patterns for headers fields in snappi provide a very flexible way to generate millions of unique packets to test the DUT functionalities, like hashing based on 5-tuple. For more information, see common snappi constructs .</p>"},{"location":"developer/hello-snappi/#start-capture-and-traffic","title":"Start Capture and Traffic","text":"<p>After you have added all the intended configuration parameters to the <code>cfg</code>, do the following:</p> <ul> <li>Push it to the controller, so that the connection with the intended traffic-engines can be established and the intended configuration is applied (to each one of them).</li> <li>Start capturing packets on the configured ports.</li> <li>Start sending packets from the configured ports.</li> </ul> <p>Every time the <code>api.set_config()</code> is called, it essentially resets the state of the controller by tearing down any previous connections with traffic-engines and overriding any previous configuration. If the call fails at some point, <code>api.get_config()</code> will return an empty config.</p> <pre><code># push configuration to controller\napi.set_config(cfg)\n\n# start packet capture on configured ports\ncs = api.capture_state()\ncs.state = cs.START\napi.set_capture_state(cs)\n\n# start transmitting configured flows\nts = api.transmit_state()\nts.state = ts.START\napi.set_transmit_state(ts)\n</code></pre> <p>The transmit or capture will be started on all configured flows or ports respectively, unless you provide any specific flow or port name. For example, <code>cs.port_names = ['p1']</code>, <code>ts.flow_names = ['f1']</code>.</p>"},{"location":"developer/hello-snappi/#fetch-and-validate-metrics","title":"Fetch and Validate Metrics","text":"<p>As you are sending 1000 packets, at a rate of 1000 packets per second, it should take 1 second for the transmit to complete. You can validate the same by using <code>metrics</code>.</p> <p>The API supports different kinds of metrics, but focus on the <code>port_metrics</code> which are similar to the linux network interface stats.</p> <pre><code># create a port metrics request and filter based on port names\nreq = api.metrics_request()\nreq.port.port_names = [p.name for p in cfg.ports]\n# include only sent and received packet counts\nreq.port.column_names = [req.port.FRAMES_TX, req.port.FRAMES_RX]\n\n# fetch port metrics\nres = api.get_metrics(req)\n\n# calculate total frames sent and received across all configured ports\ntotal_tx = sum([m.frames_tx for m in res.port_metrics])\ntotal_rx = sum([m.frames_rx for m in res.port_metrics])\nexpected = sum([f.duration.fixed_packets.packets for f in cfg.flows])\n\nassert expected == total_tx and total_rx &gt;= expected\n</code></pre> <p>Note: Usually this snippet needs to be executed multiple times, until the assertion in the end stands true or a timeout occurs. You can use a function called <code>wait_for()</code> in the <code>hello_snappi.py</code> script to achieve this.</p>"},{"location":"developer/hello-snappi/#fetch-and-validate-captures","title":"Fetch and Validate Captures","text":"<p>Validation by using metrics is limited to counters (for example, total transmitted, total received). To really inspect each packet received, you can use the capture API.</p> <p>This API is a little different from the others, in the following ways:</p> <ul> <li>It returns a sequence of raw bytes (representing <code>.pcap</code> file) instead of a JSON string.</li> <li>It needs to be fed to a tool that can inspect <code>.pcap</code> files. For example, <code>dpkt</code> or <code>tcpdump</code>.</li> </ul> <p>This snippet uses <code>dpkt</code> to ensure that each packet received is a valid UDP packet.</p> <pre><code>for p in cfg.ports:\n  # create capture request and filter based on port name\n  req = api.capture_request()\n  req.port_name = p.name\n  # fetch captured pcap bytes and feed it to pcap parser dpkt\n  pcap = dpkt.pcap.Reader(api.get_capture(req))\n  for _, buf in pcap:\n      # check if current packet is a valid UDP packet\n      eth = dpkt.ethernet.Ethernet(buf)\n      assert isinstance(eth.data.data, dpkt.udp.UDP)\n</code></pre> <p>Optionally, the following snippet can be used in order to do <code>tcpdump -r cap.pcap</code> (inspect captures by using tcpdump).</p> <pre><code>pcap_bytes = api.get_capture(req)\nwith open('cap.pcap', 'wb') as p:\n  p.write(pcap_bytes.read())\n</code></pre>"},{"location":"developer/hello-snappi/#putting-it-all-together","title":"Putting It All Together","text":"<p><code>snappi</code> provides a fair level of abstraction and ease-of-use while constructing traffic configuration, compared to the equivalent in JSON. More such comparisons can be found in common snappi constructs.</p> <p>For more information on snappi (per-flow metrics, latency measurements, custom payloads, and etc) and examples on the pytest-based test scripts and utilities, see snappi-tests.</p>"},{"location":"developer/introduction/","title":"Developer guide introduction","text":"<p>Introduction to snappi </p>"},{"location":"developer/snappi-constructs/","title":"Common snappi constructs","text":""},{"location":"developer/snappi-constructs/#overview","title":"Overview","text":"<p>Every object in snappi can be serialized to or deserialized from a JSON string which conforms to Open Traffic Generator API. This facilitates storing traffic configurations as JSON files and reusing them in API calls with or without further modifications.</p> <ul> <li>Create a sample config</li> </ul> <pre><code>import snappi\napi = snappi.api()\nconfig = api.config()\n\nconfig.ports.port(name='p1', location='localhost:5555')\nconfig.flows.flow(name='f1')\n</code></pre> <ul> <li>Serialize to JSON (or python dictionary or YAML)</li> </ul> <pre><code>json_str = config.serialize()\n# serialize child of config object to JSON string\njson_str = config.ports.serialize()\n\nyaml_str = config.serialize(encoding=config.YAML)\nobj_dict = config.serialize(encoding=config.DICT)\n</code></pre> <ul> <li>Deserialize from JSON (or python dictionary or YAML)</li> </ul> <pre><code># whether the argument is JSON or YAML or dict is automatically determined\nconfig.deserialize('{\"ports\": [{\"name\": \"p2\", \"location\": \"localhost:5556\"}]}')\n# deserialize child of config object from JSON string\nconfig.flows.deserialize('[{\"name\": \"f1\"}]')\n\nconfig.deserialize({\"ports\": [{\"name\": \"p1\", \"location\": \"localhost:5555\"}]})\nconfig.deserialize('ports:\\n- name: p1\\n  location: localhost:5555\\n')\n</code></pre> <ul> <li>Pass either snappi object or equivalent JSON string as argument to API calls</li> </ul> <pre><code>config = api.config()\n\nconfig.ports.port(name='p1', location='localhost:5555')\n# config will be serialized to JSON string and sent on wire\napi.set_config(config)\n\njson_str = '{\"ports\": [{\"name\": \"p1\", \"location\": \"localhost:5555\"}]}'\n# JSON string will be directly sent on wire\napi.set_config(json_str)\n</code></pre> <p>Following sections discuss most commonly used constructs in snappi comparing each one of them with equivalent JSON snippet. For brevity, snippet for config creation is not included (since it's the same across all).</p>"},{"location":"developer/snappi-constructs/#flows","title":"Flows","text":"<p>This section deals with flow configuration and control.</p>"},{"location":"developer/snappi-constructs/#unidirectional-flow","title":"Unidirectional Flow","text":"A simple unidirectional flow for a **one-arm** test.   snappi   json  <pre><code>p1 = config.ports.port(name='p1', \\\n  location='localhost:5555')[-1]\nf1 = config.flows.flow(name='f1')[-1]\n\nf1.tx_rx.port.tx_name = p1.name\n</code></pre> <pre><code>{\n  \"ports\": [\n    {\n      \"location\": \"localhost:5555\",\n      \"name\": \"p1\"\n    }\n  ],\n  \"flows\": [\n    {\n      \"name\": \"f1\",\n      \"tx_rx\": {\n        \"port\": {\n          \"tx_name\": \"p1\"\n        },\n        \"choice\": \"port\"\n      }\n    }\n  ]\n}\n</code></pre>"},{"location":"developer/snappi-constructs/#bidirectional-flows","title":"Bidirectional Flows","text":"A bi-directional flow between two ports. snappijson <pre><code>p1, p2 = ( \\\n    config.ports \\\n    .port(name='p1', location='localhost:5555') \\\n    .port(name='p2', location='localhost:5556')\n)\nf1, f2 = config.flows.flow(name='flow p1-&gt;p2'). \\\n  flow(name='flow p2-&gt;p1')\n\nf1.tx_rx.port.tx_name = p1.name\nf1.tx_rx.port.rx_name = p2.name\nf2.tx_rx.port.tx_name = p2.name\nf2.tx_rx.port.rx_name = p1.name\n</code></pre> <pre><code>{\n  \"ports\": [\n    {\n      \"location\": \"localhost:5555\",\n      \"name\": \"p1\"\n    },\n    {\n      \"location\": \"localhost:5556\",\n      \"name\": \"p2\"\n    }\n  ],\n  \"flows\": [\n    {\n      \"name\": \"flow p1-&gt;p2\",\n      \"tx_rx\": {\n        \"port\": {\n          \"tx_name\": \"p1\",\n          \"rx_name\": \"p2\"\n        },\n        \"choice\": \"port\"\n      }\n    },\n    {\n      \"name\": \"flow p2-&gt;p1\",\n      \"tx_rx\": {\n        \"port\": {\n          \"tx_name\": \"p2\",\n          \"rx_name\": \"p1\"\n        },\n        \"choice\": \"port\"\n      }\n    }\n  ]\n}\n</code></pre>"},{"location":"developer/snappi-constructs/#meshed-flows","title":"Meshed Flows","text":"Fully meshed flows between four ports.  Each port sends flows to all the ports (except itself).  This example is for four ports, it can be easily extended to an arbitrary number of ports. snappijson <pre><code>import itertools\n\nfor i in range(1, 4):\n  config.ports.port(name='p%d' % i, \\\n    location='localhost:%d' % (5554 + i))\n\nfor tx, rx in \\\n  itertools.permutations([p.name for \\ \n  p in config.ports], 2):\n  f = config.flows.flow(name='flow %s-&gt;%s' \\ \n    % (tx, rx))[-1]\n  f.tx_rx.port.tx_name = tx\n  f.tx_rx.port.rx_name = rx\n</code></pre> <pre><code>{\n  \"ports\": [\n    {\n      \"location\": \"localhost:5555\",\n      \"name\": \"p1\"\n    },\n    {\n      \"location\": \"localhost:5556\",\n      \"name\": \"p2\"\n    },\n    {\n      \"location\": \"localhost:5557\",\n      \"name\": \"p3\"\n    }\n  ],\n  \"flows\": [\n    {\n      \"name\": \"flow p1-&gt;p2\",\n      \"tx_rx\": {\n        \"port\": {\n          \"tx_name\": \"p1\",\n          \"rx_name\": \"p2\"\n        },\n        \"choice\": \"port\"\n      }\n    },\n    {\n      \"name\": \"flow p1-&gt;p3\",\n      \"tx_rx\": {\n        \"port\": {\n          \"tx_name\": \"p1\",\n          \"rx_name\": \"p3\"\n        },\n        \"choice\": \"port\"\n      }\n    },\n    {\n      \"name\": \"flow p2-&gt;p1\",\n      \"tx_rx\": {\n        \"port\": {\n          \"tx_name\": \"p2\",\n          \"rx_name\": \"p1\"\n        },\n        \"choice\": \"port\"\n      }\n    },\n    {\n      \"name\": \"flow p2-&gt;p3\",\n      \"tx_rx\": {\n        \"port\": {\n          \"tx_name\": \"p2\",\n          \"rx_name\": \"p3\"\n        },\n        \"choice\": \"port\"\n      }\n    },\n    {\n      \"name\": \"flow p3-&gt;p1\",\n      \"tx_rx\": {\n        \"port\": {\n          \"tx_name\": \"p3\",\n          \"rx_name\": \"p1\"\n        },\n        \"choice\": \"port\"\n      }\n    },\n    {\n      \"name\": \"flow p3-&gt;p2\",\n      \"tx_rx\": {\n        \"port\": {\n          \"tx_name\": \"p3\",\n          \"rx_name\": \"p2\"\n        },\n        \"choice\": \"port\"\n      }\n    }\n  ]\n}\n</code></pre>"},{"location":"developer/snappi-constructs/#protocol-headers-with-fixed-fields","title":"Protocol Headers With Fixed Fields","text":"Simple flow with Ethernet, IP and TCP protocol headers. snappijson <pre><code>p1 = config.ports.port(name='p1', \\ \n  location='localhost:5555')[-1]\nf1 = config.flows.flow(name='f1')[-1]\n\nf1.tx_rx.port.tx_name = p1.name\neth, ip, tcp = f1.packet.ethernet().ipv4().tcp()\n\neth.dst.value = '00:00:00:00:00:AA'\nip.dst.value = '192.168.1.1'\ntcp.dst_port.value = 5000\n</code></pre> <pre><code>{\n  \"ports\": [\n    {\n      \"location\": \"localhost:5555\",\n      \"name\": \"p1\"\n    }\n  ],\n  \"flows\": [\n    {\n      \"name\": \"f1\",\n      \"tx_rx\": {\n        \"port\": {\n          \"tx_name\": \"p1\"\n        },\n        \"choice\": \"port\"\n      },\n      \"packet\": [\n        {\n          \"ethernet\": {\n            \"dst\": {\n              \"value\": \"00:00:00:00:00:AA\",\n              \"choice\": \"value\"\n            }\n          },\n          \"choice\": \"ethernet\"\n        },\n        {\n          \"ipv4\": {\n            \"dst\": {\n              \"value\": \"192.168.1.1\",\n              \"choice\": \"value\"\n            }\n          },\n          \"choice\": \"ipv4\"\n        },\n        {\n          \"tcp\": {\n            \"dst_port\": {\n              \"value\": 5000,\n              \"choice\": \"value\"\n            }\n          },\n          \"choice\": \"tcp\"\n        }\n      ]\n    }\n  ]\n}\n</code></pre>"},{"location":"developer/snappi-constructs/#protocol-headers-with-varying-fields","title":"Protocol Headers With Varying Fields","text":"Flow with Ethernet, IP and TCP headers.  Ethernet destination MAC address, destination IP address and TCP destination port are varied using patterns. snappijson <pre><code>p1 = config.ports.port(name='p1', \\ \n  location='localhost:5555')[-1]\nf1 = config.flows.flow(name='f1')[-1]\n\nf1.tx_rx.port.tx_name = p1.name\neth, ip, tcp = f1.packet.ethernet().ipv4().tcp()\n\neth.src.value = '00:00:00:00:00:AA'\neth.dst.values = ['00:00:00:00:00:AB', \\ \n  '00:00:00:00:00:AC']\n\nip.src.value = '192.168.1.1'\nip.dst.increment.start = '192.168.1.2'\nip.dst.increment.step = '0.0.0.1'\nip.dst.increment.count = 2\n\ntcp.src_port.value = 5000\ntcp.dst_port.decrement.start = 5002\ntcp.dst_port.decrement.step = 1\ntcp.dst_port.decrement.count = 2\ntcp.seq_num.values = [1, 2]\n</code></pre> <pre><code>{\n  \"ports\": [\n    {\n      \"location\": \"localhost:5555\",\n      \"name\": \"p1\"\n    }\n  ],\n  \"flows\": [\n    {\n      \"name\": \"f1\",\n      \"tx_rx\": {\n        \"port\": {\n          \"tx_name\": \"p1\"\n        },\n        \"choice\": \"port\"\n      },\n      \"packet\": [\n        {\n          \"ethernet\": {\n            \"src\": {\n              \"value\": \"00:00:00:00:00:AA\",\n              \"choice\": \"value\"\n            },\n            \"dst\": {\n              \"values\": [\n                \"00:00:00:00:00:AB\",\n                \"00:00:00:00:00:AC\"\n              ],\n              \"choice\": \"values\"\n            }\n          },\n          \"choice\": \"ethernet\"\n        },\n        {\n          \"ipv4\": {\n            \"src\": {\n              \"value\": \"192.168.1.1\",\n              \"choice\": \"value\"\n            },\n            \"dst\": {\n              \"increment\": {\n                \"start\": \"192.168.1.2\",\n                \"step\": \"0.0.0.1\",\n                \"count\": 2\n              },\n              \"choice\": \"increment\"\n            }\n          },\n          \"choice\": \"ipv4\"\n        },\n        {\n          \"tcp\": {\n            \"src_port\": {\n              \"value\": 5000,\n              \"choice\": \"value\"\n            },\n            \"dst_port\": {\n              \"decrement\": {\n                \"start\": 5002,\n                \"step\": 1,\n                \"count\": 2\n              },\n              \"choice\": \"decrement\"\n            },\n            \"seq_num\": {\n              \"values\": [\n                1,\n                2\n              ],\n              \"choice\": \"values\"\n            }\n          },\n          \"choice\": \"tcp\"\n        }\n      ]\n    }\n  ]\n}\n</code></pre>"},{"location":"developer/snappi-constructs/#start-flow-transmit","title":"Start Flow Transmit","text":"Start transmit on a certain set of flows. snappijson <pre><code>ts = api.control_state()\nts.traffic.flow_transmit.state = ts.traffic.flow_transmit.START  # noqa\nts.traffic.flow_transmit.flow_names = ['f1', 'f2']\nres = api.set_control_state(ts)\n</code></pre> <pre><code>{  \n  \"choice\": \"traffic\", \n  \"traffic\": {    \n      \"choice\": \"flow_transmit\",    \n      \"flow_transmit\": {      \n          \"flow_names\": [\n              \"f1\",\n              \"f2\"     \n          ],      \n          \"state\": \"start\"    \n      }  \n  }\n}\n</code></pre>"},{"location":"developer/snappi-constructs/#capture","title":"Capture","text":"<p>Capture configuration and control</p>"},{"location":"developer/snappi-constructs/#capture-configuration","title":"Capture Configuration","text":"Configure capture prior to starting capture."},{"location":"developer/snappi-constructs/#start-capture","title":"Start Capture","text":"Start capture on a set of ports. snappijson <pre><code>cs = api.control_state()\ncs.port.capture.state = cs.port.capture.START\ncs.port.capture.port_names = ['p1', 'p2']\nres = api.set_control_state(cs)\n</code></pre> <pre><code>{\n  \"choice\": \"port\",\n  \"port\": {\n      \"capture\": {\n          \"port_names\": [\n              \"p1\",\n              \"p2\"\n          ],\n          \"state\": \"start\"\n      },\n      \"choice\": \"capture\"\n  }\n}\n</code></pre>"},{"location":"developer/snappi-constructs/#get-capture","title":"Get Capture","text":"Retrieve capture for a given port.  Save capture to a .pcap file (python only). snappijson <pre><code>req = api.capture_request()\nreq.port_name = 'p1'\n\nwith open('capture.pcap', 'w') as pcap:\n  pcap.write(api.get_capture(req).read())\n</code></pre> <pre><code>{\n  \"port_name\": \"p1\"\n}\n</code></pre>"},{"location":"developer/snappi-constructs/#metrics","title":"Metrics","text":""},{"location":"developer/snappi-constructs/#port-metrics","title":"Port Metrics","text":"Get port statistics for a given set of ports. snappijson <pre><code>req = api.metrics_request()\nreq.port.port_names = ['tx', 'rx']\nreq.port.column_names = [req.port.FRAMES_TX, \\\n  req.port.FRAMES_RX]\n\nres = api.get_metrics(req)\nassert res[0].frames_tx == res[1].frames_rx\n</code></pre> <pre><code>{\n  \"port\": {\n    \"port_names\": [\n      \"p1\",\n      \"p2\"\n    ],\n    \"column_names\": [\n      \"frames_tx\",\n      \"frames_rx\"\n    ]\n  },\n  \"choice\": \"port\"\n}\n</code></pre>"},{"location":"developer/snappi-constructs/#flow-metrics","title":"Flow Metrics","text":"Get flow statistics. Blah"},{"location":"developer/snappi-constructs/#tbd","title":"TBD","text":"<ul> <li>how to create a flow with certain protocol headers</li> <li>how to create a flow to test 5-tuple hashing</li> <li>how to create flows with changing flow sizes</li> <li>how to create stacked vlans</li> <li>creating bursty flows</li> <li>how to disable timestamps, signature</li> </ul>"},{"location":"developer/snappi-install/","title":"Installing Snappi","text":"<p>The procedures explained in this section helps to install and configure snappi for an Open Traffic Generator API.</p> <p>The test scripts written in gosnappi, and the auto-generated Go SDK, can be executed against any traffic generator that conforms to Open Traffic Generator API.</p> <p>Ixia-c is one of such reference implementations of the Open Traffic Generator API.</p>"},{"location":"developer/snappi-install/#to-install-snappi-for-the-go-language-do-the-following","title":"To install Snappi for the Go language, do the following:","text":""},{"location":"developer/snappi-install/#setup-the-client","title":"Setup the client","text":"<pre><code>go get github.com/open-traffic-generator/snappi/gosnappi\n</code></pre>"},{"location":"developer/snappi-install/#start-testing","title":"Start Testing","text":"<pre><code>package examples\n\nimport (\n    \"encoding/hex\"\n    \"testing\"\n    \"time\"\n\n    \"github.com/open-traffic-generator/snappi/gosnappi\"\n)\n\nfunc TestQuickstart(t *testing.T) {\n    // Create a new API handle to make API calls against OTG\n    api := gosnappi.NewApi()\n\n    // Set the transport protocol to HTTP\n    api.NewHttpTransport().SetLocation(\"https://localhost:8443\")\n\n    // Create a new traffic configuration that will be set on OTG\n    config := gosnappi.NewConfig()\n\n    // Add a test port to the configuration\n    ptx := config.Ports().Add().SetName(\"ptx\").SetLocation(\"veth-a\")\n\n    // Configure a flow and set previously created test port as one of endpoints\n    flow := config.Flows().Add().SetName(\"f1\")\n    flow.TxRx().Port().SetTxName(ptx.Name())\n    // and enable tracking flow metrics\n    flow.Metrics().SetEnable(true)\n\n    // Configure number of packets to transmit for previously configured flow\n    flow.Duration().FixedPackets().SetPackets(100)\n    // and fixed byte size of all packets in the flow\n    flow.Size().SetFixed(128)\n\n    // Configure protocol headers for all packets in the flow\n    pkt := flow.Packet()\n    eth := pkt.Add().Ethernet()\n    ipv4 := pkt.Add().Ipv4()\n    udp := pkt.Add().Udp()\n    cus := pkt.Add().Custom()\n\n    eth.Dst().SetValue(\"00:11:22:33:44:55\")\n    eth.Src().SetValue(\"00:11:22:33:44:66\")\n\n    ipv4.Src().SetValue(\"10.1.1.1\")\n    ipv4.Dst().SetValue(\"20.1.1.1\")\n\n    // Configure repeating patterns for source and destination UDP ports\n    udp.SrcPort().SetValues([]int32{5010, 5015, 5020, 5025, 5030})\n    udp.DstPort().Increment().SetStart(6010).SetStep(5).SetCount(5)\n\n    // Configure custom bytes (hex string) in payload\n    cus.SetBytes(hex.EncodeToString([]byte(\"..QUICKSTART SNAPPI..\")))\n\n    // Optionally, print JSON representation of config\n    if j, err := config.ToJson(); err != nil {\n        t.Fatal(err)\n    } else {\n        t.Log(\"Configuration: \", j)\n    }\n\n    // Push traffic configuration constructed so far to OTG\n    if _, err := api.SetConfig(config); err != nil {\n        t.Fatal(err)\n    }\n\n    // Start transmitting the packets from configured flow\n    ts := gosnappi.NewTransmitState()\n    ts.SetState(gosnappi.TransmitStateState.START)\n    if _, err := api.SetTransmitState(ts); err != nil {\n        t.Fatal(err)\n    }\n\n    // Fetch metrics for configured flow\n    req := gosnappi.NewMetricsRequest()\n    req.Flow().SetFlowNames([]string{flow.Name()})\n    // and keep polling until either expectation is met or deadline exceeds\n    deadline := time.Now().Add(10 * time.Second)\n    for {\n        metrics, err := api.GetMetrics(req)\n        if err != nil || time.Now().After(deadline) {\n            t.Fatalf(\"err = %v || deadline exceeded\", err)\n        }\n        // print YAML representation of flow metrics\n        t.Log(metrics)\n        if metrics.FlowMetrics().Items()[0].Transmit() == gosnappi.FlowMetricTransmit.STOPPED {\n            break\n        }\n        time.Sleep(100 * time.Millisecond)\n    }\n}\n</code></pre>"},{"location":"developer/snappi-install/#to-install-snappi-for-the-python-language-do-the-following","title":"To install Snappi for the Python language, do the following:","text":""},{"location":"developer/snappi-install/#setup-the-client_1","title":"Setup the Client","text":"<pre><code>python -m pip install --upgrade snappi \n</code></pre>"},{"location":"developer/snappi-install/#start-testing_1","title":"Start Testing","text":"<pre><code>import datetime\nimport time\nimport snappi\nimport pytest\n\n\n@pytest.mark.example\ndef test_quickstart():\n    # Create a new API handle to make API calls against OTG\n    # with HTTP as default transport protocol\n    api = snappi.api(location=\"https://localhost:8443\")\n\n    # Create a new traffic configuration that will be set on OTG\n    config = api.config()\n\n    # Add a test port to the configuration\n    ptx = config.ports.add(name=\"ptx\", location=\"veth-a\")\n\n    # Configure a flow and set previously created test port as one of endpoints\n    flow = config.flows.add(name=\"flow\")\n    flow.tx_rx.port.tx_name = ptx.name\n    # and enable tracking flow metrics\n    flow.metrics.enable = True\n\n    # Configure number of packets to transmit for previously configured flow\n    flow.duration.fixed_packets.packets = 100\n    # and fixed byte size of all packets in the flow\n    flow.size.fixed = 128\n\n    # Configure protocol headers for all packets in the flow\n    eth, ip, udp, cus = flow.packet.ethernet().ipv4().udp().custom()\n\n    eth.src.value = \"00:11:22:33:44:55\"\n    eth.dst.value = \"00:11:22:33:44:66\"\n\n    ip.src.value = \"10.1.1.1\"\n    ip.dst.value = \"20.1.1.1\"\n\n    # Configure repeating patterns for source and destination UDP ports\n    udp.src_port.values = [5010, 5015, 5020, 5025, 5030]\n    udp.dst_port.increment.start = 6010\n    udp.dst_port.increment.step = 5\n    udp.dst_port.increment.count = 5\n\n    # Configure custom bytes (hex string) in payload\n    cus.bytes = \"\".join([hex(c)[2:] for c in b\"..QUICKSTART SNAPPI..\"])\n\n    # Optionally, print JSON representation of config\n    print(\"Configuration: \", config.serialize(encoding=config.JSON))\n\n    # Push traffic configuration constructed so far to OTG\n    api.set_config(config)\n\n    # Start transmitting the packets from configured flow\n    ts = api.transmit_state()\n    ts.state = ts.START\n    api.set_transmit_state(ts)\n\n    # Fetch metrics for configured flow\n    req = api.metrics_request()\n    req.flow.flow_names = [flow.name]\n    # and keep polling until either expectation is met or deadline exceeds\n    start = datetime.datetime.now()\n    while True:\n        metrics = api.get_metrics(req)\n        if (datetime.datetime.now() - start).seconds &gt; 10:\n            raise Exception(\"deadline exceeded\")\n        # print YAML representation of flow metrics\n        print(metrics)\n        if metrics.flow_metrics[0].transmit == metrics.flow_metrics[0].STOPPED:\n            break\n        time.sleep(0.1)\n</code></pre>"},{"location":"quick-start/deployment/","title":"Deployment","text":"<p>Ixia-c is distributed and deployed as a multi-container application that consists of the following services:</p> <ul> <li>controller: Serves API request from the clients and manages workflow across one or more traffic engines.</li> <li>traffic-engine: Generates, captures, and processes traffic from one or more network interfaces (on linux-based OS).</li> <li>app-usage-reporter: (Optional) Collects anonymous usage report from the controller and uploads it to the Keysight Cloud, with minimal impact on the host resources.</li> </ul> <p>All these services are available as docker images on the GitHub Open-Traffic-Generator repository. To use specific versions of these images, see Ixia-c Releases .</p> <p></p> <p>Once the services are deployed, snappi-tests (a collection of snappi test scripts and configurations) can be setup to run against Ixia-c.</p>"},{"location":"quick-start/deployment/#deploy-ixia-c-using-docker-compose","title":"Deploy Ixia-c using docker-compose","text":"<p>Deploying multiple services manually (along with the required parameters) is not always applicable in some scenarios. For convenience, the deployments directory consists of the following <code>docker-compose</code> files:</p> <ul> <li><code>*.yml</code>: Describes the services for a given scenario and the deployment parameters that are required to start them.</li> <li><code>.env</code>: Holds the default parameters, that are used across all <code>*.yml</code> files. For example, the name of the interface, the version of docker images, and etc.</li> </ul> <p>If a concerned <code>.yml</code> file does not include certain variables from <code>.env</code>, those can then safely be ignored. Follwoing is the example of a usual workflow, by using  <code>docker-compose</code>.</p> <pre><code># change default parameters if needed; e.g. interface name, image version, etc.\nvi deployments/.env\n# deploy and start services for community users\ndocker-compose -f deployments/&lt;scenario&gt;.yml up -d\n# stop and remove services deployed\ndocker-compose -f deployments/&lt;scenario&gt;.yml down\n</code></pre> <p>On most of the systems, <code>docker-compose</code> needs to be installed separately even if the docker is already installed. Before you start, ensure that the docker prerequisites are met.</p> <p>For more information on deployment, see Deployment Guide.</p>"},{"location":"quick-start/introduction/","title":"Introduction","text":""},{"location":"quick-start/introduction/#what-is-ixia-c","title":"What is Ixia-c ?","text":"<ul> <li> <p>A modern, powerful and API-driven traffic generator designed to cater to the needs of hyper-scalers, network hardware vendors and hobbyists alike.</p> </li> <li> <p>Free for basic use-cases and distributed / deployed as a multi-container application consisting primarily of a controller, a traffic-engine and a protocol-engine.</p> </li> <li> <p>As a reference implementation of Open Traffic Generator API, supports client SDKs in various languages, most prevalent being snappi (Python SDK) and gosnappi.</p> </li> </ul> <p> </p>"},{"location":"quick-start/introduction/#quick-start","title":"Quick Start","text":"<p>Please ensure that following prerequisites are met by the setup:</p> <ul> <li>At least 2 x86_64 CPU cores and 7GB RAM, preferably running Ubuntu 22.04 LTS OS</li> <li>Python 3.8+ (and pip) or Go 1.19+</li> <li>Docker Engine (Community Edition)</li> </ul>"},{"location":"quick-start/introduction/#1-deploy-ixia-c","title":"1. Deploy Ixia-c","text":"<pre><code># clone this repository\ngit clone --recurse-submodules https://github.com/open-traffic-generator/Ixia-c.git &amp;&amp; cd Ixia-c\n\n# create a veth pair and deploy Ixia-c containers where one traffic-engine is bound\n# to each interface in the pair, and controller is configured to figure out how to\n# talk to those traffic-engine containers\ncd conformance &amp;&amp; ./do.sh topo new dp\n</code></pre>"},{"location":"quick-start/introduction/#2-setup-and-run-standalone-test-using-snappi-or-gosnappi","title":"2. Setup and run standalone test using snappi or gosnappi","text":"<pre><code># change dir to conformance if you haven't already\ncd conformance\n\n# setup python virtual environment and install dependencies\n./do.sh prepytest\n\n# run standalone snappi test that configures and sends UDP traffic\n# upon successful run, flow metrics shall be printed on console\n./do.sh pytest examples/test_quickstart.py\n\n# optionally, go equivalent of the test can be run like so\n./do.sh gotest examples/quickstart_test.go\n</code></pre> <p>Checkout the contents of test_quickstart.py and equivalent quickstart_test.go for quick explanation on test steps</p>"},{"location":"quick-start/introduction/#3-optionally-run-test-using-curl","title":"3. Optionally, run test using curl","text":"<p>We can also pass equivalent JSON configuration directly to controller, just by using curl. The description of each node in the configuration is detailed in self-updating  online documentation.</p> <pre><code># push traffic configuration\ncurl -skL https://localhost:8443/config -H \"Content-Type: application/json\" -d @conformance/examples/quickstart_config.json\n\n# start transmitting configured flows\ncurl -skL https://localhost:8443/control/state -H \"Content-Type: application/json\" -d @conformance/examples/quickstart_control.json\n\n# fetch flow metrics\ncurl -skL https://localhost:8443/monitor/metrics -H \"Content-Type: application/json\" -d @conformance/examples/quickstart_metrics.json\n</code></pre>"},{"location":"quick-start/sample-test/","title":"Quick start sample test","text":"<p>How to run the sample test </p>"},{"location":"reference/capabilities/","title":"Supported capabilities","text":""},{"location":"reference/capabilities/#protocol-emulation","title":"Protocol emulation","text":"Feature OTG model specification Ixia-c software IxOS hardware UHD400T system Comments BGP(v4/v6) Y Y Y Y v4/v6  Routes Y Y Y Y Route Withdraw/Re-advertise Y Y Y Y Md5 Authentication Y Y Y Y Learned Routes Retrieval Y Y Y Y Extended Community Y Y Y Y Graceful Restart (Helper and Restarting) Y Y Y Y Static LAG Y Y Y N LAG with LACP Y Y Y N Protocols/Data over LAG with traffic switch Y Y N N ISIS Y Y Y Y v4/v6 Routes Y Y Y Y Learned Routes Retrieval Y Y Y Y Simulated Topology Y Y Y Y Segment Routing Y Y Y Y Multiple ports/adjacencies Y N N N RSVP p2p LSPs (Ingress or Egress) Y Y Y N Srefresh and Bundle extensions Y Y Y N LLDP Y Y N Y Per Port Y Y N Y Learned LLDP Neighbors Y Y N Y Per LAG member Port Y Y N N"},{"location":"reference/capabilities/#traffic-generation","title":"Traffic generation","text":"Feature OTG model specification Ixia-c software IxOS hardware UHD400T system Comments Egress Tracking Y Y Y N Imix Y Y Y N Dynamic ARP Resolution Y Y Y Y Dynamic Frame Size control Y Y Y N Dynamic Rate Control Y Y N N Multiple Rx Ports and drilldown Y Y Y N Packet headers Vlan Y Y Y Y IPv4 Y Y Y Y IPv6 Y Y Y Y TCP Y Y Y Y UDP Y Y Y Y MPLS Y Y Y N ARP Y Y Y Y PPP Y Y Y N GRE Y Y Y N IGMPv1 Y Y Y N ICMP Y Y Y N ICMPv6 Y Y Y N ETHERNETPAUSE Y Y Y N VXLAN Y Y Y N PFCPAUSE Y N Y N CUSTOM Y Y Y N"},{"location":"reference/capabilities/#infrastructure","title":"Infrastructure","text":"Feature OTG model specification Ixia-c software IxOS hardware UHD400T system Comments Capture (Rx only) Y Y Y N Link Down/Up Y Y Y N MTU greater than 1500 Y Y Y N"},{"location":"reference/licensing/","title":"Licensing","text":""},{"location":"reference/licensing/#license-consumption-mechanism-and-feature-licenses","title":"License consumption mechanism and feature licenses","text":"<p>Elastic Network Generator licenses include the following features which depends on the license edition. Details on how the features are consumed are as follows:</p>"},{"location":"reference/licensing/#feature-licenses","title":"Feature Licenses","text":"Feature Licenses Developer Team System KENG-SEAT 1 8 16 KENG-SEAT\u200b-UHD N/A 8 16 KENG-SEAT\u200b-IXHW N/A N/A 16 KENG-DPLU 50 400 800 KENG-CPLU 50 400 800 KENG-UNLIMITED-CP N/A N/A 16 <p>The exact list of feature licenses that are required by a specific test configuration, is calculated based on the test port type, port speed, protocol, protocol sessions, and etc. Overall, the list of required licenses is referred to as Test Cost.</p>"},{"location":"reference/licensing/#test-cost-calculation","title":"Test Cost Calculation","text":"<pre><code>Test Cost = Seat Cost + CP Cost * KENG-CPLU + DP Cost * KENG-DPLU\u200b\n</code></pre> Port Type Condition Seat Cost CP Cost DP cost Ixia-c SW <code>If CP Cost &lt;= 50</code> <code>1x KENG-SEAT</code> <code>SUM (Protocol Cost)</code>            \u200b <code>SUM (Speed Cost)</code> Ixia-c SW <code>If CP Cost &gt; 50</code><sup>3</sup> <code>1x KENG-SEAT</code><code>1x KENG-UNLIMITED-CP</code> <code>50</code> <code>SUM (Speed Cost)</code> UHD400T <code>If CP Cost &lt;= 50</code>\u200b <code>1x KENG-SEAT</code>\u200b<code>1x KENG-SEAT-UHD</code>\u200b <code>SUM (Protocol Cost)\u200b</code> <code>0</code> UHD400T <code>If CP Cost &gt; 50</code><sup>3</sup> <code>1x KENG-SEAT</code><code>1x KENG-SEAT-UHD</code><code>1x KENG-UNLIMITED-CP</code> <code>50</code> <code>0</code> IxOS Hardware <code>1x KENG-SEAT</code><code>1x KENG-SEAT-IXHW</code>\u200b <code>0</code> <code>0</code> <ul> <li>Seat is the number of the running <code>keng-controller</code> instances, with a configuration that exceeds the capabilities of the Community Edition.</li> <li>The Data Plane License Unit (<code>KENG-DPLU</code>) is associated with the traffic port capacity. The number of required units is determined as a sum of the configured port speeds (1, 10, 25, 40, 50, 100GE). The maximum port performance might be less than the configured port speed.</li> <li>The Control Plane License unit (<code>KENG-CPLU</code>) is associated with the control plane protocol scale. The number of required CP units is determined as a sum of the configured protocol sessions.</li> <li>If <code>KENG-UNLIMITED-CP</code> is not available, an exact number of <code>KENG-CPLU</code> will be consumed.</li> <li>See Control Plane Cost for the <code>Protocol Cost</code> and Data Plane Cost for the <code>Speed Cost</code>.</li> </ul>"},{"location":"reference/licensing/#control-plane-cost","title":"Control Plane Cost","text":"<p>Applies only to the Ixia-c software and UHD400T ports.</p> <pre><code>CP Cost = For each Port: SUM (Protocol Cost)\n</code></pre> Protocol Session Definition Protocol Cost/Session Comment IP Interface (ARP, ND) devices:  - ethernets:  - ipv4_addresses:  - ipv6_addresses: 0 IP Loopbacks\u200b devices:  - ipv4_loopbacks:  - ipv6_loopbacks: 0 LLDP\u200b lldp:  - connection:  - port_name: 1 Session = Test Port with LLDP enabled LACP lacp:  - ports:  - port_name:  lacp: 1 Session = LAG group, no matter group size\u200b BGP devices:  - bgp:  - ipv4_addresses:  - ipv6_addresses: - peers:\u200b 1 Session = BGP peer ISIS devices:  - isis:  - interfaces:  - eth_name: \u200b 1 Session = ISIS interface RSVP devices:  - rsvp:  - ipv4_interfaces:  - neighbor_ip: \u200b 1 Session = RSVP neighbor\u200b"},{"location":"reference/licensing/#data-plane-cost","title":"Data Plane Cost","text":"<p>Applies only to the Ixia-c software ports.</p> Test Port Speed DP Cost 1GE 1 10GE 10 25GE 25 40GE 40 50GE 50 100GE 100 200GE 200 400GE 400"},{"location":"reference/licensing/#sample-license-consumption-scenarios","title":"Sample license consumption scenarios","text":""},{"location":"reference/licensing/#test-configuration","title":"Test configuration","text":"<p>Number of <code>keng-controller</code> instances: <code>1</code></p> <ul> <li>Number of ports: <code>4</code></li> <li>Port type: <code>Ixia-c software</code></li> <li>Port Speed: <code>100GE</code></li> <li>Protocol scale: <code>100 BGP sessions/port</code></li> </ul>"},{"location":"reference/licensing/#scenario-1-limited-control-plane-licenses","title":"Scenario 1: Limited control plane licenses","text":"<pre><code>KENG-SEAT:         1 = (1 keng-controller instance and ixia-c SW port)\nKENG-DPLU:         400 = (100G speed * 4 ports)\nKENG-CPLU:         400 = (100 BGP sessions/port * 4 ports)\n</code></pre>"},{"location":"reference/licensing/#scenario-2-unlimited-control-plane-licenses","title":"Scenario 2: Unlimited control plane licenses","text":"<pre><code>KENG-SEAT:         1 = (1 keng-controller instance and ixia-c SW port)\nKENG-DPLU:         400 = (100G speed * 4 ports)\nKENG-CPLU:         50 = (CP cost = 400 (100 BGP sessions/port * 4 ports) which is greater than 50 and unlimited cp capability is present)\nKENG-UNLIMITED-CP: 1\n</code></pre>"},{"location":"reference/licensing/#qa","title":"Q&amp;A","text":"When the licenses are checked-out / checked-in?  The license check-out/check-in mechanism in the keng-controller works as follows:  1. Calculate the Test Cost. For example,  Test Cost = N. 2. Based on the calculation performed in step (1), check-out the licenses at the time of the OTG SetConfig API call. 3. Execute the test if license check-out is successful. 4. For the next configuration, calculate Test Cost, For example, Test Cost = M. <pre><code>if M == N:\n    - keng-controller will not have any communication with license servers\nelse if M &gt; N:\n    - keng-controller will not check-in licenses\n    - it will attempt to check-out required additional licenses\nelse if M &lt; N:\n    - keng-controller will check-in surplus of the licenses\n</code></pre> Does licensing have impact on API response time?  On the timing aspect, the entire license check-out/check-in mechanism works concurrently with the control plane and the data plane configurations in the ports during the OTG SetConfig operation. Therefore, potentially there is a minimal impact in the OTG SetConfig API response time. If the license server is on a remote site from the controller, the OTG SetConfig API response time might get impacted due to the network latency.  What happens if license servers are not available?  The keng-controller can work with up to 4 license servers. The controller tries to connect to all the license servers during the startup. If none of them is available, the controller capabilities are reduced to the Community Edition. After that, a background routine is initiated to make recurrent attempts to connect the configured license servers in 30 second intervals.   Once the controller is able to establish a connection with any of the license servers, for any new configuration beyond capabilities of the Community Edition, the keng-controller will try to check-out a license from the license server with which the connection is established.  What is the message generated when the license server is not available?  When a configured license server is not reachable, the log message with error code 13 is generated by the keng-controller:  \"level\":\"warn\",\"ctx\":\"impl/licensing\",\"Not all license server could be reached\":\"code: 13 ...error details... \"  What is the error generated when a license cannot be checked out?  There are two possible scenarios when the license cannot checkout.  Scenario 1: Any of the license servers does not have the adequate license features that are required for the test configuration. It will throw an error with the error code 13 and the following error message:  Current configuration requires following additional license feature(s): {...details...} which is not available in configured license server(s): {...details...} Available license feature(s) in license-server(s) are {...details...}.   Scenario 2: Previously active license server is no longer available/reachable. It will throw an error with the error code 13 and the following error message:  issue consuming license from server ...address...: rpc error: code = DeadlineExceeded desc = context deadline exceeded  After how many retries things are considered dead and how long does it take?  The controller will keep probing the list of license servers that are supplied at the time in the background routine in every 30 seconds during the controller lifetime.  What happens if the controller can't check-out the license for a specific server?  The keng-controller will attempt to check out licenses from the next available license server in the configured list.  How long does a license remain checked-out?  For the duration of the current test configuration, the license will remain checked-out. Once the new test configuration is applied that doesn't require the license, the license will be checked-in.  How to check-in all the licenses?  To check-in all the licenses, apply an empty configuration. Alternatively, gracefully stop the keng-controller container.  What happens of the controller can't check-in the license back?  There is a keep-alive mechanism between the controller and the license server. If the controller crashes, is forcefully stopped, or lost the connection to the license server, the licenses will be automatically checked-in after 5 minutes of keep-alive inactivity."},{"location":"reference/resource-requirements/","title":"Resource requirement","text":"<p>The minimum memory and cpu requirements for each Ixia-c components are captured in the following table. Kubernetes metrics server has been used to collect the resource usage data.</p> <p>The memory represents the minimum working set of memory required. For protocol and traffic engines, it varies depending on the number of co-located ports. For example, multiple ports are added to a 'group' for LAG use-cases, when a single test container has more than one test NIC connected to the DUT. The figures are in Mi or MB per container and do not include shared or cached memory across multiple containers/pods in a system.</p> Component 1 Port (Default) 2 Port 4 Port 6 Port 8 Port Protocol Engine 350 420 440 460 480 Traffic Engine 60 70 90 110 130 Controller 25* gNMI 15* <p>Note: Controller and gNMI have a fixed minimum memory requirement and is currently not dependent on number of test ports for the topology.</p> <p>The cpu resource figures are in millicores.</p> Protocol Traffic Engine Controller Engine gNMI Min CPU 200 200 10 10"},{"location":"reference/resource-requirements/#minimum-and-maximum-resource-usage-based-on-various-test-configurations","title":"Minimum and maximum resource usage based on various test configurations","text":"<p>Depending on the nature of the test run, the memory and cpu resource requirements may vary across all Ixia-c components. The following table captures the memory usage for LAG scenarios with varying numbers of member ports. The minimum value represents the initial memory on topology deployment and the maximum value indicates the peak memory usage during the test run. The values are in Mi or MB.</p> Component Min/Max 1 Port 2 Port 4 Port 6 Port 8 Port Protocol Engine MaxMin 348323 423360 455360 464360 492360 Traffic Engine MaxMin 5847 68 49 90 49 11149 13449 Controller MaxMin 2113 2113 2313 2413 2513 gNMI MaxMin 147 147 147 147 147 <p>Following is the memory usage variation with scaling in the control plane. The variation is on the number of BGP sessions (1K, 5K, and 10K), in a back to back setup. The values are in Mi or MB.</p> Component Min/Max 1K 5K 10K Protocol Engine MaxMin 516323 906323 1367323 Controller MaxMin 5312 14912 25912 gNMI MaxMin 77 77 77 <p>Following is the memory usage variation with scaling in data plane. The variation is on the number of MPLS flows (10, 1K, and 4K), in a back to back setup with labels provided by the RSVP-TE control plane. The values are in Mi or MB.</p> Component Min/Max 10 1K 4K Traffic Engine MaxMin 5847 5947 9547 Controller MaxMin 1812 4612 12012 gNMI MaxMin 107 177 287"}]}